{"repeat": "5", "warmup": "5", "cmd": "bin/bfs-ng.mpl-spork-2way-one.bin @mpl procs 1  heartbeat-tokens 5 -- ../inputs/rmat-10M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-10M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "bfs-ng", "tag": "bfs", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.317596", "stdout": "read file in 1.6535s\nparsed graph in 4.3499s\nnum vertices: 16777216\nnum edges: 198731752\nparity check in 2.1460s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nsparse 0.0002\nsparse 0.0397\ndense  4.4683\ndense  3.4003\ndense  2.3479\ndense  1.3871\nsparse 0.3514\nsparse 0.0535\nsparse 0.0066\nsparse 0.0007\nsparse 0.0001\nsparse 0.0000\n1 warmup runs completed\nrunning bfs\nsparse 0.0003\nsparse 0.0445\ndense  4.4363\ndense  3.4201\ndense  2.3622\ndense  1.3931\nsparse 0.3380\nsparse 0.0574\nsparse 0.0067\nsparse 0.0007\nsparse 0.0001\nsparse 0.0000\ntime 13.4420s\nsparse 0.0003\nsparse 0.0445\ndense  5.4717\ndense  3.5378\ndense  2.1977\ndense  1.2629\nsparse 0.3370\nsparse 0.0467\nsparse 0.0052\nsparse 0.0005\nsparse 0.0001\nsparse 0.0000\ntime 14.4481s\nsparse 0.0003\nsparse 0.0396\ndense  4.0356\ndense  2.9287\ndense  2.0211\ndense  1.1216\nsparse 0.3172\nsparse 0.0381\nsparse 0.0044\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\ntime 11.7657s\nsparse 0.0002\nsparse 0.0347\ndense  3.5914\ndense  5.4966\ndense  3.3746\ndense  1.1212\nsparse 0.3296\nsparse 0.0382\nsparse 0.0044\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\ntime 15.3921s\nsparse 0.0002\nsparse 0.0348\ndense  4.1918\ndense  6.1117\ndense  2.2802\ndense  1.0989\nsparse 0.3500\nsparse 0.0389\nsparse 0.0045\nsparse 0.0005\nsparse 0.0001\nsparse 0.0000\ntime 15.6181s\n\naverage 14.1332s\nminimum 11.7657s\nmaximum 15.6181s\nstd dev 1.5789s\ntotal   70.6661s\nend-to-end 70.6661s\n======== Runtime Stats ========\nnum spawns        683438\n  eager           324766 (48%)\n  at heartbeat    358672 (52%)\n\nnum heartbeats    137096\n  skipped         0 (0%)\n\nspawns / hb       4.99\n  eager           2.37\n  at heartbeat    2.62\n\nnum steals        0\n\nmax hb stack walk 28\nmax hb stack size 2680\n====== End Runtime Stats ======\nvisited 16037483\nmax dist 11\n", "stderr": "", "elapsed": 94.41476202011108, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bfs-ng.mpl-spork-3way-one.bin @mpl procs 1  heartbeat-tokens 5 -- ../inputs/rmat-10M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-10M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "bfs-ng", "tag": "bfs", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.318617", "stdout": "read file in 1.8320s\nparsed graph in 4.7062s\nnum vertices: 16777216\nnum edges: 198731752\nparity check in 2.5731s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nsparse 0.0002\nsparse 0.0227\ndense  3.6515\ndense  2.4859\ndense  1.5009\ndense  0.7807\nsparse 0.3001\nsparse 0.0439\nsparse 0.0049\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\n1 warmup runs completed\nrunning bfs\nsparse 0.0002\nsparse 0.0242\ndense  3.6097\ndense  2.4325\ndense  1.4942\ndense  0.7820\nsparse 0.2870\nsparse 0.0434\nsparse 0.0048\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\ntime 9.5434s\nsparse 0.0002\nsparse 0.0238\ndense  3.5512\ndense  2.4283\ndense  1.4883\ndense  0.8385\nsparse 0.2738\nsparse 0.0450\nsparse 0.0040\nsparse 0.0004\nsparse 0.0001\nsparse 0.0000\ntime 9.4853s\nsparse 0.0002\nsparse 0.0230\ndense  4.4641\ndense  2.2139\ndense  1.3590\ndense  0.6975\nsparse 0.2729\nsparse 0.0332\nsparse 0.0038\nsparse 0.0004\nsparse 0.0000\nsparse 0.0000\ntime 9.8379s\nsparse 0.0002\nsparse 0.0226\ndense  3.2103\ndense  2.1396\ndense  1.3668\ndense  0.6760\nsparse 0.2794\nsparse 0.0334\nsparse 0.0037\nsparse 0.0004\nsparse 0.0000\nsparse 0.0000\ntime 8.5051s\nsparse 0.0002\nsparse 0.0223\ndense  3.1248\ndense  2.1099\ndense  1.3253\ndense  0.6879\nsparse 0.2760\nsparse 0.0332\nsparse 0.0038\nsparse 0.0004\nsparse 0.0000\nsparse 0.0000\ntime 8.3655s\n\naverage 9.1475s\nminimum 8.3655s\nmaximum 9.8379s\nstd dev 0.6655s\ntotal   45.7373s\nend-to-end 45.7373s\n======== Runtime Stats ========\nnum spawns        442306\n  eager           363284 (82%)\n  at heartbeat    79022 (18%)\n\nnum heartbeats    88627\n  skipped         0 (0%)\n\nspawns / hb       4.99\n  eager           4.10\n  at heartbeat    0.89\n\nnum steals        0\n\nmax hb stack walk 31\nmax hb stack size 3408\n====== End Runtime Stats ======\nvisited 16037483\nmax dist 11\n", "stderr": "", "elapsed": 67.60200691223145, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/delaunay-ng.mpl-spork-2way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "delaunay-ng", "tag": "delaunay", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.319333", "stdout": "parsed input points in 114.3881s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\ndelaunay\ntime 18.7684s\ntime 15.1831s\ntime 13.7304s\ntime 13.0486s\ntime 12.9858s\n\naverage 14.7433s\nminimum 12.9858s\nmaximum 18.7684s\nstd dev 2.4177s\ntotal   73.7163s\nend-to-end 73.7165s\n======== Runtime Stats ========\nnum spawns        686651\n  eager           328664 (48%)\n  at heartbeat    357987 (52%)\n\nnum heartbeats    138077\n  skipped         0 (0%)\n\nspawns / hb       4.97\n  eager           2.38\n  at heartbeat    2.59\n\nnum steals        0\n\nmax hb stack walk 23\nmax hb stack size 3264\n====== End Runtime Stats ======\nnum rounds 220\n\nto see output, use -output and -resolution arguments\nfor example: delaunay -n 1000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 203.40667247772217, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/delaunay-ng.mpl-spork-3way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "delaunay-ng", "tag": "delaunay", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.320029", "stdout": "parsed input points in 114.9477s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\ndelaunay\ntime 19.4587s\ntime 16.1699s\ntime 16.2267s\ntime 16.2262s\ntime 15.5526s\n\naverage 16.7268s\nminimum 15.5526s\nmaximum 19.4587s\nstd dev 1.5535s\ntotal   83.6341s\nend-to-end 83.6344s\n======== Runtime Stats ========\nnum spawns        794808\n  eager           639125 (80%)\n  at heartbeat    155683 (20%)\n\nnum heartbeats    159384\n  skipped         0 (0%)\n\nspawns / hb       4.99\n  eager           4.01\n  at heartbeat    0.98\n\nnum steals        0\n\nmax hb stack walk 19\nmax hb stack size 2312\n====== End Runtime Stats ======\nnum rounds 220\n\nto see output, use -output and -resolution arguments\nfor example: delaunay -n 1000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 214.86594319343567, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/msort-ng.mpl-spork-2way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -N 20000000  -repeat 5 -warmup 5", "args": "-N 20000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "msort-ng", "tag": "msort", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.320931", "stdout": "N 20000000\ngenerating 20000000 random integers\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nrunning mergesort\ntime 8.0870s\ntime 8.0002s\ntime 8.0038s\ntime 9.2418s\ntime 7.9800s\n\naverage 8.2625s\nminimum 7.9800s\nmaximum 9.2418s\nstd dev 0.5489s\ntotal   41.3126s\nend-to-end 41.3129s\n======== Runtime Stats ========\nnum spawns        409850\n  eager           190477 (46%)\n  at heartbeat    219373 (54%)\n\nnum heartbeats    82029\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           2.32\n  at heartbeat    2.67\n\nnum steals        0\n\nmax hb stack walk 43\nmax hb stack size 3576\n====== End Runtime Stats ======\ninput [3647203, 1410947, 1439064, 11900373, 11111963, 1483844, 9953235, ..., 11557991]\nresult [0, 0, 1, 1, 1, 2, 3, ..., 19999999]\n", "stderr": "", "elapsed": 50.465513467788696, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/msort-ng.mpl-spork-3way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -N 20000000  -repeat 5 -warmup 5", "args": "-N 20000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "msort-ng", "tag": "msort", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.321998", "stdout": "N 20000000\ngenerating 20000000 random integers\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nrunning mergesort\ntime 7.9369s\ntime 7.8306s\ntime 7.7941s\ntime 8.7037s\ntime 8.1257s\n\naverage 8.0782s\nminimum 7.7941s\nmaximum 8.7037s\nstd dev 0.3726s\ntotal   40.3911s\nend-to-end 40.3916s\n======== Runtime Stats ========\nnum spawns        399197\n  eager           193983 (49%)\n  at heartbeat    205214 (51%)\n\nnum heartbeats    79899\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           2.43\n  at heartbeat    2.57\n\nnum steals        0\n\nmax hb stack walk 43\nmax hb stack size 3472\n====== End Runtime Stats ======\ninput [3647203, 1410947, 1439064, 11900373, 11111963, 1483844, 9953235, ..., 11557991]\nresult [0, 0, 1, 1, 1, 2, 3, ..., 19999999]\n", "stderr": "", "elapsed": 49.20525908470154, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/primes-ng.mpl-spork-2way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -N 100000000  -repeat 5 -warmup 5", "args": "-N 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "primes-ng", "tag": "primes", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.323463", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\ngenerating primes up to 100000000\ntime 18.5817s\ntime 20.2756s\ntime 19.6726s\ntime 21.8379s\ntime 17.7469s\n\naverage 19.6229s\nminimum 17.7469s\nmaximum 21.8379s\nstd dev 1.5762s\ntotal   98.1147s\nend-to-end 98.1150s\n======== Runtime Stats ========\nnum spawns        972908\n  eager           400658 (41%)\n  at heartbeat    572250 (59%)\n\nnum heartbeats    194654\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           2.06\n  at heartbeat    2.94\n\nnum steals        0\n\nmax hb stack walk 35\nmax hb stack size 3480\n====== End Runtime Stats ======\nnumber of primes 5761455\nresult [2, 3, 5, 7, 11, 13, 17, ..., 99999989]\n", "stderr": "", "elapsed": 117.1835606098175, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/primes-ng.mpl-spork-3way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -N 100000000  -repeat 5 -warmup 5", "args": "-N 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "primes-ng", "tag": "primes", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.324788", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\ngenerating primes up to 100000000\ntime 13.5469s\ntime 14.6050s\ntime 13.3864s\ntime 14.3346s\ntime 16.6124s\n\naverage 14.4971s\nminimum 13.3864s\nmaximum 16.6124s\nstd dev 1.2893s\ntotal   72.4853s\nend-to-end 72.4859s\n======== Runtime Stats ========\nnum spawns        721205\n  eager           588360 (82%)\n  at heartbeat    132845 (18%)\n\nnum heartbeats    144280\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           4.08\n  at heartbeat    0.92\n\nnum steals        0\n\nmax hb stack walk 23\nmax hb stack size 2848\n====== End Runtime Stats ======\nnumber of primes 5761455\nresult [2, 3, 5, 7, 11, 13, 17, ..., 99999989]\n", "stderr": "", "elapsed": 86.41590809822083, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/sparse-mxv-csr-ng.mpl-spork-2way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -n 250000000  -repeat 5 -warmup 5", "args": "-n 250000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "sparse-mxv-csr-ng", "tag": "sparse-mxv-csr", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.324929", "stdout": "n 250000000\nrow-len 100\n(num rows: 2500000)\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nsparse-mxv\ntime 20.6365s\ntime 21.3796s\ntime 15.3791s\ntime 8.3642s\ntime 8.3182s\n\naverage 14.8155s\nminimum 8.3182s\nmaximum 21.3796s\nstd dev 6.3467s\ntotal   74.0775s\nend-to-end 74.0779s\n======== Runtime Stats ========\nnum spawns        729708\n  eager           298039 (41%)\n  at heartbeat    431669 (59%)\n\nnum heartbeats    146005\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           2.04\n  at heartbeat    2.96\n\nnum steals        0\n\nmax hb stack walk 30\nmax hb stack size 2720\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 114.98640537261963, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/sparse-mxv-csr-ng.mpl-spork-3way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -n 250000000  -repeat 5 -warmup 5", "args": "-n 250000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "sparse-mxv-csr-ng", "tag": "sparse-mxv-csr", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.326058", "stdout": "n 250000000\nrow-len 100\n(num rows: 2500000)\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nsparse-mxv\ntime 18.6474s\ntime 13.2942s\ntime 15.4546s\ntime 14.5989s\ntime 7.2770s\n\naverage 13.8544s\nminimum 7.2770s\nmaximum 18.6474s\nstd dev 4.1732s\ntotal   69.2722s\nend-to-end 69.2725s\n======== Runtime Stats ========\nnum spawns        681170\n  eager           545722 (80%)\n  at heartbeat    135448 (20%)\n\nnum heartbeats    136257\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           4.01\n  at heartbeat    0.99\n\nnum steals        0\n\nmax hb stack walk 18\nmax hb stack size 2336\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 99.63248705863953, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nearest-nbrs-ng.mpl-spork-2way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "nearest-nbrs-ng", "tag": "nearest-nbrs", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.327082", "stdout": "parsed input points in 3.0104s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nbuilt quadtree in 1.0783s\nfound all neighbors in 1.3888s\nbuilt quadtree in 1.1756s\nfound all neighbors in 1.3839s\n2 warmup runs completed\nrunning nearest neighbors\nbuilt quadtree in 1.0841s\nfound all neighbors in 1.3592s\ntime 2.4434s\nbuilt quadtree in 1.3321s\nfound all neighbors in 1.3548s\ntime 2.6871s\nbuilt quadtree in 1.2623s\nfound all neighbors in 1.4744s\ntime 2.7368s\nbuilt quadtree in 1.1564s\nfound all neighbors in 1.4572s\ntime 2.6137s\nbuilt quadtree in 1.0816s\nfound all neighbors in 1.4457s\ntime 2.5274s\n\naverage 2.6017s\nminimum 2.4434s\nmaximum 2.7368s\nstd dev 0.1186s\ntotal   13.0083s\nend-to-end 13.0084s\n======== Runtime Stats ========\nnum spawns        109951\n  eager           61803 (56%)\n  at heartbeat    48148 (44%)\n\nnum heartbeats    23017\n  skipped         0 (0%)\n\nspawns / hb       4.78\n  eager           2.69\n  at heartbeat    2.09\n\nnum steals        0\n\nmax hb stack walk 29\nmax hb stack size 3592\n====== End Runtime Stats ======\nresult [811533, 563604, 253596, 55855, 233544, 569064, 562970, 742080, 12442, 171262, 428737, ..., 540308]\nto see output, use -output and -resolution arguments\nfor example: nn -N 10000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 21.125293254852295, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nearest-nbrs-ng.mpl-spork-3way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "nearest-nbrs-ng", "tag": "nearest-nbrs", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.328790", "stdout": "parsed input points in 3.0521s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nbuilt quadtree in 1.3998s\nfound all neighbors in 1.3810s\nbuilt quadtree in 1.1405s\nfound all neighbors in 1.3872s\n2 warmup runs completed\nrunning nearest neighbors\nbuilt quadtree in 1.2318s\nfound all neighbors in 1.3622s\ntime 2.5941s\nbuilt quadtree in 1.1367s\nfound all neighbors in 1.4724s\ntime 2.6092s\nbuilt quadtree in 0.9964s\nfound all neighbors in 1.3490s\ntime 2.3454s\nbuilt quadtree in 1.0830s\nfound all neighbors in 1.4596s\ntime 2.5427s\nbuilt quadtree in 1.0083s\nfound all neighbors in 1.3452s\ntime 2.3536s\n\naverage 2.4890s\nminimum 2.3454s\nmaximum 2.6092s\nstd dev 0.1297s\ntotal   12.4450s\nend-to-end 12.4451s\n======== Runtime Stats ========\nnum spawns        105404\n  eager           84957 (81%)\n  at heartbeat    20447 (19%)\n\nnum heartbeats    22021\n  skipped         0 (0%)\n\nspawns / hb       4.79\n  eager           3.86\n  at heartbeat    0.93\n\nnum steals        0\n\nmax hb stack walk 24\nmax hb stack size 2968\n====== End Runtime Stats ======\nresult [811533, 563604, 253596, 55855, 233544, 569064, 562970, 742080, 12442, 171262, 428737, ..., 540308]\nto see output, use -output and -resolution arguments\nfor example: nn -N 10000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 20.862939596176147, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/mandelbrot-ng.mpl-spork-2way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30  -repeat 5 -warmup 5", "args": "-resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30", "_old_affinity": "set-affinity affinity-base 0", "bench": "mandelbrot-ng", "tag": "mandelbrot", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.330084", "stdout": "max-iter 30\ndiverge-thresh 2\nresolution 2500\ntop 2\nbot ~2\nleft ~3\nright 1\nh 10000\nw 10000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nrunning mandelbrot\ntime 5.1622s\ntime 5.0615s\ntime 5.0632s\ntime 5.0685s\ntime 5.0804s\n\naverage 5.0871s\nminimum 5.0615s\nmaximum 5.1622s\nstd dev 0.0426s\ntotal   25.4357s\nend-to-end 25.4359s\n======== Runtime Stats ========\nnum spawns        251563\n  eager           102429 (41%)\n  at heartbeat    149134 (59%)\n\nnum heartbeats    50329\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           2.04\n  at heartbeat    2.96\n\nnum steals        0\n\nmax hb stack walk 26\nmax hb stack size 2912\n====== End Runtime Stats ======\nuse -output XXX to see result\n", "stderr": "", "elapsed": 30.95251727104187, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/mandelbrot-ng.mpl-spork-3way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30  -repeat 5 -warmup 5", "args": "-resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30", "_old_affinity": "set-affinity affinity-base 0", "bench": "mandelbrot-ng", "tag": "mandelbrot", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.331456", "stdout": "max-iter 30\ndiverge-thresh 2\nresolution 2500\ntop 2\nbot ~2\nleft ~3\nright 1\nh 10000\nw 10000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\nrunning mandelbrot\ntime 3.8413s\ntime 3.8314s\ntime 3.8322s\ntime 3.8221s\ntime 3.8163s\n\naverage 3.8287s\nminimum 3.8163s\nmaximum 3.8413s\nstd dev 0.0097s\ntotal   19.1433s\nend-to-end 19.1437s\n======== Runtime Stats ========\nnum spawns        188965\n  eager           151506 (80%)\n  at heartbeat    37459 (20%)\n\nnum heartbeats    37812\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           4.01\n  at heartbeat    0.99\n\nnum steals        0\n\nmax hb stack walk 19\nmax hb stack size 2288\n====== End Runtime Stats ======\nuse -output XXX to see result\n", "stderr": "", "elapsed": 26.96330499649048, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/linefit-ng.mpl-spork-2way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "linefit-ng", "tag": "linefit", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.333150", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nlinefit\ntime 5.1407s\ntime 5.1589s\ntime 5.2004s\ntime 5.1518s\ntime 5.1033s\n\naverage 5.1510s\nminimum 5.1033s\nmaximum 5.2004s\nstd dev 0.0350s\ntotal   25.7550s\nend-to-end 25.7552s\n======== Runtime Stats ========\nnum spawns        251627\n  eager           102047 (41%)\n  at heartbeat    149580 (59%)\n\nnum heartbeats    50338\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           2.03\n  at heartbeat    2.97\n\nnum steals        0\n\nmax hb stack walk 29\nmax hb stack size 3296\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 32.740747690200806, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/linefit-ng.mpl-spork-3way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "linefit-ng", "tag": "linefit", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.334612", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\nlinefit\ntime 2.5705s\ntime 2.5976s\ntime 2.5957s\ntime 2.5676s\ntime 2.5812s\n\naverage 2.5825s\nminimum 2.5676s\nmaximum 2.5976s\nstd dev 0.0139s\ntotal   12.9125s\nend-to-end 12.9128s\n======== Runtime Stats ========\nnum spawns        126329\n  eager           111718 (88%)\n  at heartbeat    14611 (12%)\n\nnum heartbeats    25268\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           4.42\n  at heartbeat    0.58\n\nnum steals        0\n\nmax hb stack walk 18\nmax hb stack size 2240\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 19.76967692375183, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/wc-ng.mpl-spork-2way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -infile ../inputs/words256.txt  -repeat 5 -warmup 5", "args": "-infile ../inputs/words256.txt", "_old_affinity": "set-affinity affinity-base 0", "bench": "wc-ng", "tag": "wc", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.335167", "stdout": "loadtime 0.198\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\nwc\ntime 4.2113s\ntime 4.2154s\ntime 4.2093s\ntime 4.2177s\ntime 4.2068s\n\naverage 4.2121s\nminimum 4.2068s\nmaximum 4.2177s\nstd dev 0.0044s\ntotal   21.0606s\nend-to-end 21.0608s\n======== Runtime Stats ========\nnum spawns        209925\n  eager           85143 (41%)\n  at heartbeat    124782 (59%)\n\nnum heartbeats    41999\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           2.03\n  at heartbeat    2.97\n\nnum steals        0\n\nmax hb stack walk 30\nmax hb stack size 3344\n====== End Runtime Stats ======\nlines 16519936\nwords 16519936\nchars 154424832\n", "stderr": "", "elapsed": 29.83407759666443, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/wc-ng.mpl-spork-3way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -infile ../inputs/words256.txt  -repeat 5 -warmup 5", "args": "-infile ../inputs/words256.txt", "_old_affinity": "set-affinity affinity-base 0", "bench": "wc-ng", "tag": "wc", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.335935", "stdout": "loadtime 0.197\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\nwc\ntime 2.7939s\ntime 2.8055s\ntime 2.7961s\ntime 2.7954s\ntime 2.7988s\n\naverage 2.7980s\nminimum 2.7939s\nmaximum 2.8055s\nstd dev 0.0046s\ntotal   13.9898s\nend-to-end 13.9905s\n======== Runtime Stats ========\nnum spawns        139530\n  eager           117265 (84%)\n  at heartbeat    22265 (16%)\n\nnum heartbeats    27911\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           4.20\n  at heartbeat    0.80\n\nnum steals        0\n\nmax hb stack walk 21\nmax hb stack size 2424\n====== End Runtime Stats ======\nlines 16519936\nwords 16519936\nchars 154424832\n", "stderr": "", "elapsed": 19.865290880203247, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nqueens-ng.mpl-spork-2way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -N 13  -repeat 5 -warmup 5", "args": "-N 13", "_old_affinity": "set-affinity affinity-base 0", "bench": "nqueens-ng", "tag": "nqueens", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.337881", "stdout": "N 13\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\ncounting number of 13x13 solutions\ntime 2.8223s\ntime 2.8273s\ntime 2.8453s\ntime 2.8357s\ntime 2.8260s\n\naverage 2.8314s\nminimum 2.8223s\nmaximum 2.8453s\nstd dev 0.0092s\ntotal   14.1568s\nend-to-end 14.1570s\n======== Runtime Stats ========\nnum spawns        141096\n  eager           56738 (40%)\n  at heartbeat    84358 (60%)\n\nnum heartbeats    28234\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           2.01\n  at heartbeat    2.99\n\nnum steals        0\n\nmax hb stack walk 64\nmax hb stack size 6224\n====== End Runtime Stats ======\nresult 73712\n", "stderr": "", "elapsed": 20.02383017539978, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nqueens-ng.mpl-spork-3way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -N 13  -repeat 5 -warmup 5", "args": "-N 13", "_old_affinity": "set-affinity affinity-base 0", "bench": "nqueens-ng", "tag": "nqueens", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.338863", "stdout": "N 13\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\ncounting number of 13x13 solutions\ntime 2.5535s\ntime 2.5334s\ntime 2.5409s\ntime 2.5248s\ntime 2.5291s\n\naverage 2.5363s\nminimum 2.5248s\nmaximum 2.5535s\nstd dev 0.0113s\ntotal   12.6817s\nend-to-end 12.6820s\n======== Runtime Stats ========\nnum spawns        124783\n  eager           99580 (80%)\n  at heartbeat    25203 (20%)\n\nnum heartbeats    25316\n  skipped         0 (0%)\n\nspawns / hb       4.93\n  eager           3.93\n  at heartbeat    1.00\n\nnum steals        0\n\nmax hb stack walk 40\nmax hb stack size 3816\n====== End Runtime Stats ======\nresult 73712\n", "stderr": "", "elapsed": 17.898173570632935, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/grep-ng.mpl-spork-2way-one.bin @mpl procs 1  heartbeat-tokens 5 -- EE ../inputs/words256-shuffled.txt --benchmark  -repeat 5 -warmup 5", "args": "EE ../inputs/words256-shuffled.txt --benchmark", "_old_affinity": "set-affinity affinity-base 0", "bench": "grep-ng", "tag": "grep", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.339413", "stdout": "read file in 0.2021s\nn 154424832\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nrunning grep\ntime 9.0755s\ntime 9.1004s\ntime 8.9857s\ntime 10.3882s\ntime 8.9482s\n\naverage 9.2996s\nminimum 8.9482s\nmaximum 10.3882s\nstd dev 0.6117s\ntotal   46.4980s\nend-to-end 46.4982s\n======== Runtime Stats ========\nnum spawns        462007\n  eager           208420 (45%)\n  at heartbeat    253587 (55%)\n\nnum heartbeats    92427\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           2.25\n  at heartbeat    2.74\n\nnum steals        0\n\nmax hb stack walk 29\nmax hb stack size 2728\n====== End Runtime Stats ======\nnum matching lines 385792\n", "stderr": "", "elapsed": 55.89225172996521, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/grep-ng.mpl-spork-3way-one.bin @mpl procs 1  heartbeat-tokens 5 -- EE ../inputs/words256-shuffled.txt --benchmark  -repeat 5 -warmup 5", "args": "EE ../inputs/words256-shuffled.txt --benchmark", "_old_affinity": "set-affinity affinity-base 0", "bench": "grep-ng", "tag": "grep", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.340568", "stdout": "read file in 0.2018s\nn 154424832\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nrunning grep\ntime 6.3549s\ntime 6.3285s\ntime 6.2445s\ntime 6.2505s\ntime 6.2369s\n\naverage 6.2831s\nminimum 6.2369s\nmaximum 6.3549s\nstd dev 0.0545s\ntotal   31.4154s\nend-to-end 31.4157s\n======== Runtime Stats ========\nnum spawns        312477\n  eager           250872 (80%)\n  at heartbeat    61605 (20%)\n\nnum heartbeats    62497\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           4.01\n  at heartbeat    0.99\n\nnum steals        0\n\nmax hb stack walk 18\nmax hb stack size 2280\n====== End Runtime Stats ======\nnum matching lines 385792\n", "stderr": "", "elapsed": 38.07834053039551, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bignum-add-ng.mpl-spork-2way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "bignum-add-ng", "tag": "bignum-add", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.342038", "stdout": "n 100000000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\nbignum add\ntime 3.0837s\ntime 3.1430s\ntime 3.1433s\ntime 3.0869s\ntime 3.0817s\n\naverage 3.1077s\nminimum 3.0817s\nmaximum 3.1433s\nstd dev 0.0324s\ntotal   15.5386s\nend-to-end 15.5388s\n======== Runtime Stats ========\nnum spawns        154306\n  eager           63619 (41%)\n  at heartbeat    90687 (59%)\n\nnum heartbeats    30877\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           2.06\n  at heartbeat    2.94\n\nnum steals        0\n\nmax hb stack walk 28\nmax hb stack size 2944\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 23.114340782165527, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bignum-add-ng.mpl-spork-3way-one.bin @mpl procs 1  heartbeat-tokens 5 -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "bignum-add-ng", "tag": "bignum-add", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.342024", "stdout": "n 100000000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n3 warmup runs completed\nbignum add\ntime 2.2004s\ntime 2.1979s\ntime 2.1411s\ntime 2.1403s\ntime 2.1423s\n\naverage 2.1644s\nminimum 2.1403s\nmaximum 2.2004s\nstd dev 0.0317s\ntotal   10.8220s\nend-to-end 10.8222s\n======== Runtime Stats ========\nnum spawns        107605\n  eager           86269 (80%)\n  at heartbeat    21336 (20%)\n\nnum heartbeats    21527\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           4.01\n  at heartbeat    0.99\n\nnum steals        0\n\nmax hb stack walk 17\nmax hb stack size 2088\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 18.914031267166138, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/suffix-array-ng.mpl-spork-2way-one.bin @mpl procs 1  heartbeat-tokens 5 -- --benchmark -N 10000000  -repeat 5 -warmup 5", "args": "--benchmark -N 10000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "suffix-array-ng", "tag": "suffix-array", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.344129", "stdout": "N 10000000\ngenerated input in 0.2283s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\navgLen is 2\nnumGroups is 11657\n1 warmup runs completed\nrunning suffix array\navgLen is 2\nnumGroups is 11657\ntime 7.8220s\navgLen is 2\nnumGroups is 11657\ntime 7.6821s\navgLen is 2\nnumGroups is 11657\ntime 7.6763s\navgLen is 2\nnumGroups is 11657\ntime 7.8368s\navgLen is 2\nnumGroups is 11657\ntime 8.8691s\n\naverage 7.9773s\nminimum 7.6763s\nmaximum 8.8691s\nstd dev 0.5042s\ntotal   39.8864s\nend-to-end 39.8866s\n======== Runtime Stats ========\nnum spawns        295642\n  eager           138069 (47%)\n  at heartbeat    157573 (53%)\n\nnum heartbeats    79065\n  skipped         0 (0%)\n\nspawns / hb       3.74\n  eager           1.75\n  at heartbeat    1.99\n\nnum steals        0\n\nmax hb stack walk 25\nmax hb stack size 2768\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 48.05030393600464, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/suffix-array-ng.mpl-spork-3way-one.bin @mpl procs 1  heartbeat-tokens 5 -- --benchmark -N 10000000  -repeat 5 -warmup 5", "args": "--benchmark -N 10000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "suffix-array-ng", "tag": "suffix-array", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.344671", "stdout": "N 10000000\ngenerated input in 0.1408s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\navgLen is 2\nnumGroups is 11657\n1 warmup runs completed\nrunning suffix array\navgLen is 2\nnumGroups is 11657\ntime 5.7144s\navgLen is 2\nnumGroups is 11657\ntime 5.5819s\navgLen is 2\nnumGroups is 11657\ntime 5.5767s\navgLen is 2\nnumGroups is 11657\ntime 5.5626s\navgLen is 2\nnumGroups is 11657\ntime 5.5666s\n\naverage 5.6004s\nminimum 5.5626s\nmaximum 5.7144s\nstd dev 0.0642s\ntotal   28.0022s\nend-to-end 28.0026s\n======== Runtime Stats ========\nnum spawns        184376\n  eager           163108 (88%)\n  at heartbeat    21268 (12%)\n\nnum heartbeats    55632\n  skipped         0 (0%)\n\nspawns / hb       3.31\n  eager           2.93\n  at heartbeat    0.38\n\nnum steals        0\n\nmax hb stack walk 24\nmax hb stack size 2768\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 33.980751514434814, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/triangle-count-ng.mpl-spork-2way-one.bin @mpl procs 1  heartbeat-tokens 5 -- ../inputs/rmat-1M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-1M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "triangle-count-ng", "tag": "triangle-count", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.345396", "stdout": "read file in 0.1906s\nparsed graph in 0.4442s\nnum vertices: 1048576\nnum edges: 19602538\nparity check in 0.2078s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nrunning tc: \ntime 17.4235s\ntime 18.3496s\ntime 20.0200s\ntime 20.2129s\ntime 16.1871s\n\naverage 18.4386s\nminimum 16.1871s\nmaximum 20.2129s\nstd dev 1.7144s\ntotal   92.1930s\nend-to-end 92.1932s\n======== Runtime Stats ========\nnum spawns        913470\n  eager           385085 (42%)\n  at heartbeat    528385 (58%)\n\nnum heartbeats    182794\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           2.11\n  at heartbeat    2.89\n\nnum steals        0\n\nmax hb stack walk 81\nmax hb stack size 4288\n====== End Runtime Stats ======\nnum-triangles = 451600\n", "stderr": "", "elapsed": 110.82518649101257, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/triangle-count-ng.mpl-spork-3way-one.bin @mpl procs 1  heartbeat-tokens 5 -- ../inputs/rmat-1M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-1M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "triangle-count-ng", "tag": "triangle-count", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.346852", "stdout": "read file in 0.1878s\nparsed graph in 0.4409s\nnum vertices: 1048576\nnum edges: 19602538\nparity check in 0.2191s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nrunning tc: \ntime 17.0258s\ntime 18.1561s\ntime 19.8849s\ntime 19.6804s\ntime 15.2835s\n\naverage 18.0062s\nminimum 15.2835s\nmaximum 19.8849s\nstd dev 1.9189s\ntotal   90.0308s\nend-to-end 90.0312s\n======== Runtime Stats ========\nnum spawns        892763\n  eager           714999 (80%)\n  at heartbeat    177764 (20%)\n\nnum heartbeats    178653\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           4.00\n  at heartbeat    1.00\n\nnum steals        0\n\nmax hb stack walk 69\nmax hb stack size 5768\n====== End Runtime Stats ======\nnum-triangles = 451600\n", "stderr": "", "elapsed": 108.67386388778687, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bfs.mpl-spork-manual.bin @mpl procs 1  -- ../inputs/rmat-10M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-10M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "bfs", "tag": "bfs", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.348079", "stdout": "read file in 1.6827s\nparsed graph in 4.5795s\nnum vertices: 16777216\nnum edges: 198731752\nparity check in 2.3367s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nsparse 0.0001\nsparse 0.0114\ndense  3.4054\ndense  2.1231\ndense  1.0511\ndense  0.4460\nsparse 0.1383\nsparse 0.0186\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\n1 warmup runs completed\nrunning bfs\nsparse 0.0001\nsparse 0.0117\ndense  3.3749\ndense  2.1084\ndense  1.0533\ndense  0.4459\nsparse 0.1485\nsparse 0.0188\nsparse 0.0021\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 7.4403s\nsparse 0.0001\nsparse 0.0117\ndense  3.3975\ndense  2.1275\ndense  1.0578\ndense  0.5438\nsparse 0.1369\nsparse 0.0177\nsparse 0.0021\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 7.5596s\nsparse 0.0001\nsparse 0.0109\ndense  3.1927\ndense  1.9653\ndense  0.9625\ndense  0.3678\nsparse 0.1343\nsparse 0.0178\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 6.8846s\nsparse 0.0001\nsparse 0.0111\ndense  4.3824\ndense  1.9128\ndense  0.9549\ndense  0.3733\nsparse 0.1408\nsparse 0.0175\nsparse 0.0020\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 8.0166s\nsparse 0.0001\nsparse 0.0109\ndense  3.1451\ndense  1.9345\ndense  0.9182\ndense  0.3618\nsparse 0.1282\nsparse 0.0170\nsparse 0.0019\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 6.7447s\n\naverage 7.3291s\nminimum 6.7447s\nmaximum 8.0166s\nstd dev 0.5189s\ntotal   36.6457s\nend-to-end 36.6458s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nvisited 16037483\nmax dist 11\n", "stderr": "", "elapsed": 55.38309359550476, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/delaunay.mpl-spork-manual.bin @mpl procs 1  -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "delaunay", "tag": "delaunay", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.349044", "stdout": "parsed input points in 113.2575s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\ndelaunay\ntime 19.4104s\ntime 16.1930s\ntime 15.9651s\ntime 16.2712s\ntime 14.2225s\n\naverage 16.4125s\nminimum 14.2225s\nmaximum 19.4104s\nstd dev 1.8743s\ntotal   82.0623s\nend-to-end 82.0625s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnum rounds 220\n\nto see output, use -output and -resolution arguments\nfor example: delaunay -n 1000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 211.56359958648682, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/msort.mpl-spork-manual.bin @mpl procs 1  -- -N 20000000  -repeat 5 -warmup 5", "args": "-N 20000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "msort", "tag": "msort", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.350628", "stdout": "N 20000000\ngenerating 20000000 random integers\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nrunning mergesort\ntime 5.2294s\ntime 5.1437s\ntime 5.1279s\ntime 5.1221s\ntime 5.1181s\n\naverage 5.1482s\nminimum 5.1181s\nmaximum 5.2294s\nstd dev 0.0464s\ntotal   25.7412s\nend-to-end 25.7414s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\ninput [3647203, 1410947, 1439064, 11900373, 11111963, 1483844, 9953235, ..., 11557991]\nresult [0, 0, 1, 1, 1, 2, 3, ..., 19999999]\n", "stderr": "", "elapsed": 31.54653573036194, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/primes.mpl-spork-manual.bin @mpl procs 1  -- -N 100000000  -repeat 5 -warmup 5", "args": "-N 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "primes", "tag": "primes", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.351643", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\ngenerating primes up to 100000000\ntime 10.4370s\ntime 10.1116s\ntime 10.4708s\ntime 10.0940s\ntime 10.1171s\n\naverage 10.2461s\nminimum 10.0940s\nmaximum 10.4708s\nstd dev 0.1902s\ntotal   51.2305s\nend-to-end 51.2307s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnumber of primes 5761455\nresult [2, 3, 5, 7, 11, 13, 17, ..., 99999989]\n", "stderr": "", "elapsed": 62.0974223613739, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/sparse-mxv-csr.mpl-spork-manual.bin @mpl procs 1  -- -n 250000000  -repeat 5 -warmup 5", "args": "-n 250000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "sparse-mxv-csr", "tag": "sparse-mxv-csr", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.352481", "stdout": "n 250000000\nrow-len 100\n(num rows: 2500000)\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nsparse-mxv\ntime 6.8488s\ntime 6.8784s\ntime 6.8025s\ntime 8.0874s\ntime 6.6696s\n\naverage 7.0573s\nminimum 6.6696s\nmaximum 8.0874s\nstd dev 0.5813s\ntotal   35.2866s\nend-to-end 35.2868s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 50.925559282302856, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nearest-nbrs.mpl-spork-manual.bin @mpl procs 1  -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "nearest-nbrs", "tag": "nearest-nbrs", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.353071", "stdout": "parsed input points in 2.9419s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nbuilt quadtree in 1.0306s\nfound all neighbors in 1.2826s\nbuilt quadtree in 0.9953s\nfound all neighbors in 1.2817s\nbuilt quadtree in 1.1855s\nfound all neighbors in 1.2697s\n3 warmup runs completed\nrunning nearest neighbors\nbuilt quadtree in 1.1365s\nfound all neighbors in 1.3755s\ntime 2.5123s\nbuilt quadtree in 1.0455s\nfound all neighbors in 1.3717s\ntime 2.4176s\nbuilt quadtree in 1.0670s\nfound all neighbors in 1.3675s\ntime 2.4348s\nbuilt quadtree in 1.0222s\nfound all neighbors in 1.3646s\ntime 2.3869s\nbuilt quadtree in 1.0687s\nfound all neighbors in 1.2661s\ntime 2.3349s\n\naverage 2.4173s\nminimum 2.3349s\nmaximum 2.5123s\nstd dev 0.0653s\ntotal   12.0865s\nend-to-end 12.0866s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nresult [811533, 563604, 253596, 55855, 233544, 569064, 562970, 742080, 12442, 171262, 428737, ..., 540308]\nto see output, use -output and -resolution arguments\nfor example: nn -N 10000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 22.1333749294281, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/mandelbrot.mpl-spork-manual.bin @mpl procs 1  -- -resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30  -repeat 5 -warmup 5", "args": "-resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30", "_old_affinity": "set-affinity affinity-base 0", "bench": "mandelbrot", "tag": "mandelbrot", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.355236", "stdout": "max-iter 30\ndiverge-thresh 2\nresolution 2500\ntop 2\nbot ~2\nleft ~3\nright 1\nh 10000\nw 10000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n3 warmup runs completed\nrunning mandelbrot\ntime 2.2252s\ntime 2.2245s\ntime 2.2278s\ntime 2.2258s\ntime 2.2269s\n\naverage 2.2260s\nminimum 2.2245s\nmaximum 2.2278s\nstd dev 0.0014s\ntotal   11.1302s\nend-to-end 11.1304s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nuse -output XXX to see result\n", "stderr": "", "elapsed": 17.87849760055542, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/linefit.mpl-spork-manual.bin @mpl procs 1  -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "linefit", "tag": "linefit", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.354927", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n8 warmup runs completed\nlinefit\ntime 0.6475s\ntime 0.6451s\ntime 0.6491s\ntime 0.6476s\ntime 0.6451s\n\naverage 0.6468s\nminimum 0.6451s\nmaximum 0.6491s\nstd dev 0.0017s\ntotal   3.2342s\nend-to-end 3.2345s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 10.674029111862183, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/wc.mpl-spork-manual.bin @mpl procs 1  -- -infile ../inputs/words256.txt  -repeat 5 -warmup 5", "args": "-infile ../inputs/words256.txt", "_old_affinity": "set-affinity affinity-base 0", "bench": "wc", "tag": "wc", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.356105", "stdout": "loadtime 0.191\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n6 warmup runs completed\nwc\ntime 0.9342s\ntime 0.9335s\ntime 0.9305s\ntime 0.9343s\ntime 0.9369s\n\naverage 0.9339s\nminimum 0.9305s\nmaximum 0.9369s\nstd dev 0.0023s\ntotal   4.6695s\nend-to-end 4.6697s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nlines 16519936\nwords 16519936\nchars 154424832\n", "stderr": "", "elapsed": 10.563117504119873, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nqueens.mpl-spork-manual.bin @mpl procs 1  -- -N 13  -repeat 5 -warmup 5", "args": "-N 13", "_old_affinity": "set-affinity affinity-base 0", "bench": "nqueens", "tag": "nqueens", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.357541", "stdout": "N 13\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\ncounting number of 13x13 solutions\ntime 2.6226s\ntime 2.6127s\ntime 2.6314s\ntime 2.6088s\ntime 2.6430s\n\naverage 2.6237s\nminimum 2.6088s\nmaximum 2.6430s\nstd dev 0.0139s\ntotal   13.1184s\nend-to-end 13.1191s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nresult 73712\n", "stderr": "", "elapsed": 18.764374256134033, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/grep.mpl-spork-manual.bin @mpl procs 1  -- EE ../inputs/words256-shuffled.txt --benchmark  -repeat 5 -warmup 5", "args": "EE ../inputs/words256-shuffled.txt --benchmark", "_old_affinity": "set-affinity affinity-base 0", "bench": "grep", "tag": "grep", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.358130", "stdout": "read file in 0.1929s\nn 154424832\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\nrunning grep\ntime 2.6155s\ntime 2.6851s\ntime 2.6118s\ntime 2.6171s\ntime 2.6094s\n\naverage 2.6278s\nminimum 2.6094s\nmaximum 2.6851s\nstd dev 0.0322s\ntotal   13.1389s\nend-to-end 13.1391s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnum matching lines 385792\n", "stderr": "", "elapsed": 18.806158542633057, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bignum-add.mpl-spork-manual.bin @mpl procs 1  -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "bignum-add", "tag": "bignum-add", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.360163", "stdout": "n 100000000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\nbignum add\ntime 4.7346s\ntime 4.7956s\ntime 4.7993s\ntime 4.7217s\ntime 4.7292s\n\naverage 4.7561s\nminimum 4.7217s\nmaximum 4.7993s\nstd dev 0.0381s\ntotal   23.7803s\nend-to-end 23.7806s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 34.87265968322754, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/suffix-array.mpl-spork-manual.bin @mpl procs 1  -- --benchmark -N 10000000  -repeat 5 -warmup 5", "args": "--benchmark -N 10000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "suffix-array", "tag": "suffix-array", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.360600", "stdout": "N 10000000\ngenerated input in 0.1483s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\ngrain is 4096\navgLen is 2\nnumGroups is 11657\n1 warmup runs completed\nrunning suffix array\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 5.9607s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 5.8496s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 5.7974s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 5.7976s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 5.7853s\n\naverage 5.8381s\nminimum 5.7853s\nmaximum 5.9607s\nstd dev 0.0729s\ntotal   29.1906s\nend-to-end 29.1908s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 35.46854639053345, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/triangle-count.mpl-spork-manual.bin @mpl procs 1  -- ../inputs/rmat-1M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-1M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "triangle-count", "tag": "triangle-count", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "1", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.361653", "stdout": "read file in 0.1981s\nparsed graph in 0.4495s\nnum vertices: 1048576\nnum edges: 19602538\nparity check in 0.2130s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nrunning tc: \ntime 7.3240s\ntime 7.2335s\ntime 7.1207s\ntime 6.9918s\ntime 8.0052s\n\naverage 7.3350s\nminimum 6.9918s\nmaximum 8.0052s\nstd dev 0.3947s\ntotal   36.6752s\nend-to-end 36.6755s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnum-triangles = 511733\n", "stderr": "", "elapsed": 45.153788566589355, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bfs-ng.mpl-hb-one.bin @mpl procs 1  -- ../inputs/rmat-10M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-10M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "bfs-ng", "tag": "bfs", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.362809", "stdout": "read file in 1.6966s\nparsed graph in 5.4065s\nnum vertices: 16777216\nnum edges: 198731752\nparity check in 2.2457s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nsparse 0.0003\nsparse 0.0398\ndense  4.2121\ndense  3.3930\ndense  2.4338\ndense  1.3915\nsparse 0.3607\nsparse 0.0520\nsparse 0.0065\nsparse 0.0007\nsparse 0.0001\nsparse 0.0000\n1 warmup runs completed\nrunning bfs\nsparse 0.0003\nsparse 0.0388\ndense  4.1150\ndense  3.3015\ndense  2.3962\ndense  1.4039\nsparse 0.3607\nsparse 0.0453\nsparse 0.0061\nsparse 0.0006\nsparse 0.0001\nsparse 0.0000\ntime 13.3217s\nsparse 0.0003\nsparse 0.0381\ndense  5.1025\ndense  3.4060\ndense  2.2042\ndense  1.3057\nsparse 0.3255\nsparse 0.0409\nsparse 0.0049\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\ntime 14.0780s\nsparse 0.0002\nsparse 0.0350\ndense  3.7068\ndense  2.9748\ndense  2.1574\ndense  1.2832\nsparse 0.3295\nsparse 0.0403\nsparse 0.0050\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\ntime 12.0291s\nsparse 0.0002\nsparse 0.0358\ndense  4.6186\ndense  5.8009\ndense  2.1869\ndense  1.2313\nsparse 0.3537\nsparse 0.0426\nsparse 0.0049\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\ntime 16.0434s\nsparse 0.0002\nsparse 0.0352\ndense  6.1462\ndense  4.6670\ndense  2.2116\ndense  1.2583\nsparse 0.3328\nsparse 0.0442\nsparse 0.0049\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\ntime 16.3460s\n\naverage 14.3636s\nminimum 12.0291s\nmaximum 16.3460s\nstd dev 1.8281s\ntotal   71.8182s\nend-to-end 71.8182s\n======== Runtime Stats ========\nnum spawns        694541\n  eager           150508 (22%)\n  at heartbeat    544033 (78%)\n\nnum heartbeats    138923\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           1.08\n  at heartbeat    3.92\n\nnum steals        0\n\nmax hb stack walk 51\nmax hb stack size 4936\n====== End Runtime Stats ======\nvisited 16037483\nmax dist 11\n", "stderr": "", "elapsed": 96.93207573890686, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/delaunay-ng.mpl-hb-one.bin @mpl procs 1  -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "delaunay-ng", "tag": "delaunay", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.364319", "stdout": "parsed input points in 114.3099s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\ndelaunay\ntime 19.2725s\ntime 15.1044s\ntime 15.2421s\ntime 15.2886s\ntime 15.3504s\n\naverage 16.0516s\nminimum 15.1044s\nmaximum 19.2725s\nstd dev 1.8028s\ntotal   80.2580s\nend-to-end 80.2582s\n======== Runtime Stats ========\nnum spawns        731826\n  eager           196498 (27%)\n  at heartbeat    535328 (73%)\n\nnum heartbeats    146755\n  skipped         0 (0%)\n\nspawns / hb       4.99\n  eager           1.34\n  at heartbeat    3.65\n\nnum steals        0\n\nmax hb stack walk 41\nmax hb stack size 4392\n====== End Runtime Stats ======\nnum rounds 220\n\nto see output, use -output and -resolution arguments\nfor example: delaunay -n 1000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 209.69633650779724, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/msort-ng.mpl-hb-one.bin @mpl procs 1  -- -N 20000000  -repeat 5 -warmup 5", "args": "-N 20000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "msort-ng", "tag": "msort", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.364508", "stdout": "N 20000000\ngenerating 20000000 random integers\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nrunning mergesort\ntime 8.1831s\ntime 8.1135s\ntime 8.0780s\ntime 9.3537s\ntime 8.0480s\n\naverage 8.3553s\nminimum 8.0480s\nmaximum 9.3537s\nstd dev 0.5604s\ntotal   41.7763s\nend-to-end 41.7766s\n======== Runtime Stats ========\nnum spawns        415302\n  eager           94294 (23%)\n  at heartbeat    321008 (77%)\n\nnum heartbeats    83063\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           1.14\n  at heartbeat    3.86\n\nnum steals        0\n\nmax hb stack walk 71\nmax hb stack size 6000\n====== End Runtime Stats ======\ninput [3647203, 1410947, 1439064, 11900373, 11111963, 1483844, 9953235, ..., 11557991]\nresult [0, 0, 1, 1, 1, 2, 3, ..., 19999999]\n", "stderr": "", "elapsed": 51.06562685966492, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/primes-ng.mpl-hb-one.bin @mpl procs 1  -- -N 100000000  -repeat 5 -warmup 5", "args": "-N 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "primes-ng", "tag": "primes", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.378288", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\ngenerating primes up to 100000000\ntime 19.1879s\ntime 19.9312s\ntime 19.8681s\ntime 22.6612s\ntime 17.1000s\n\naverage 19.7497s\nminimum 17.1000s\nmaximum 22.6612s\nstd dev 1.9913s\ntotal   98.7484s\nend-to-end 98.7489s\n======== Runtime Stats ========\nnum spawns        978812\n  eager           61286 (6%)\n  at heartbeat    917526 (94%)\n\nnum heartbeats    195766\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           0.31\n  at heartbeat    4.69\n\nnum steals        0\n\nmax hb stack walk 73\nmax hb stack size 5584\n====== End Runtime Stats ======\nnumber of primes 5761455\nresult [2, 3, 5, 7, 11, 13, 17, ..., 99999989]\n", "stderr": "", "elapsed": 118.78492379188538, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/sparse-mxv-csr-ng.mpl-hb-one.bin @mpl procs 1  -- -n 250000000  -repeat 5 -warmup 5", "args": "-n 250000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "sparse-mxv-csr-ng", "tag": "sparse-mxv-csr", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.380302", "stdout": "n 250000000\nrow-len 100\n(num rows: 2500000)\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nsparse-mxv\ntime 26.6423s\ntime 29.8901s\ntime 20.8973s\ntime 26.1313s\ntime 21.8050s\n\naverage 25.0732s\nminimum 20.8973s\nmaximum 29.8901s\nstd dev 3.7048s\ntotal   125.3659s\nend-to-end 125.3664s\n======== Runtime Stats ========\nnum spawns        1235945\n  eager           66964 (5%)\n  at heartbeat    1168981 (95%)\n\nnum heartbeats    247193\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           0.27\n  at heartbeat    4.73\n\nnum steals        0\n\nmax hb stack walk 58\nmax hb stack size 5736\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 168.8270926475525, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nearest-nbrs-ng.mpl-hb-one.bin @mpl procs 1  -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "nearest-nbrs-ng", "tag": "nearest-nbrs", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.380593", "stdout": "parsed input points in 3.7279s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nbuilt quadtree in 1.1248s\nfound all neighbors in 1.5120s\nbuilt quadtree in 1.1183s\nfound all neighbors in 1.5036s\n2 warmup runs completed\nrunning nearest neighbors\nbuilt quadtree in 1.1222s\nfound all neighbors in 1.4798s\ntime 2.6021s\nbuilt quadtree in 1.2941s\nfound all neighbors in 1.4832s\ntime 2.7774s\nbuilt quadtree in 1.1943s\nfound all neighbors in 1.4644s\ntime 2.6588s\nbuilt quadtree in 1.2275s\nfound all neighbors in 1.4780s\ntime 2.7055s\nbuilt quadtree in 1.0982s\nfound all neighbors in 1.4779s\ntime 2.5762s\n\naverage 2.6640s\nminimum 2.5762s\nmaximum 2.7774s\nstd dev 0.0809s\ntotal   13.3200s\nend-to-end 13.3201s\n======== Runtime Stats ========\nnum spawns        115486\n  eager           32984 (29%)\n  at heartbeat    82502 (71%)\n\nnum heartbeats    23935\n  skipped         0 (0%)\n\nspawns / hb       4.82\n  eager           1.38\n  at heartbeat    3.45\n\nnum steals        0\n\nmax hb stack walk 49\nmax hb stack size 4840\n====== End Runtime Stats ======\nresult [811533, 563604, 253596, 55855, 233544, 569064, 562970, 742080, 12442, 171262, 428737, ..., 540308]\nto see output, use -output and -resolution arguments\nfor example: nn -N 10000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 22.368855237960815, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/mandelbrot-ng.mpl-hb-one.bin @mpl procs 1  -- -resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30  -repeat 5 -warmup 5", "args": "-resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30", "_old_affinity": "set-affinity affinity-base 0", "bench": "mandelbrot-ng", "tag": "mandelbrot", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.382241", "stdout": "max-iter 30\ndiverge-thresh 2\nresolution 2500\ntop 2\nbot ~2\nleft ~3\nright 1\nh 10000\nw 10000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nrunning mandelbrot\ntime 5.3270s\ntime 5.3101s\ntime 5.2934s\ntime 5.2949s\ntime 5.3064s\n\naverage 5.3064s\nminimum 5.2934s\nmaximum 5.3270s\nstd dev 0.0136s\ntotal   26.5318s\nend-to-end 26.5321s\n======== Runtime Stats ========\nnum spawns        263764\n  eager           10051 (4%)\n  at heartbeat    253713 (96%)\n\nnum heartbeats    52754\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           0.19\n  at heartbeat    4.81\n\nnum steals        0\n\nmax hb stack walk 57\nmax hb stack size 5472\n====== End Runtime Stats ======\nuse -output XXX to see result\n", "stderr": "", "elapsed": 32.08064818382263, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/linefit-ng.mpl-hb-one.bin @mpl procs 1  -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "linefit-ng", "tag": "linefit", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.382499", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nlinefit\ntime 5.3681s\ntime 5.3894s\ntime 5.3507s\ntime 5.3528s\ntime 5.3827s\n\naverage 5.3688s\nminimum 5.3507s\nmaximum 5.3894s\nstd dev 0.0173s\ntotal   26.8438s\nend-to-end 26.8442s\n======== Runtime Stats ========\nnum spawns        261855\n  eager           8099 (3%)\n  at heartbeat    253756 (97%)\n\nnum heartbeats    52370\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           0.15\n  at heartbeat    4.85\n\nnum steals        0\n\nmax hb stack walk 54\nmax hb stack size 5456\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 34.07220506668091, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/wc-ng.mpl-hb-one.bin @mpl procs 1  -- -infile ../inputs/words256.txt  -repeat 5 -warmup 5", "args": "-infile ../inputs/words256.txt", "_old_affinity": "set-affinity affinity-base 0", "bench": "wc-ng", "tag": "wc", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.383834", "stdout": "loadtime 0.186\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\nwc\ntime 4.6092s\ntime 4.5835s\ntime 4.5913s\ntime 4.5921s\ntime 4.6140s\n\naverage 4.5980s\nminimum 4.5835s\nmaximum 4.6140s\nstd dev 0.0129s\ntotal   22.9901s\nend-to-end 22.9903s\n======== Runtime Stats ========\nnum spawns        229280\n  eager           7422 (3%)\n  at heartbeat    221858 (97%)\n\nnum heartbeats    45856\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           0.16\n  at heartbeat    4.84\n\nnum steals        0\n\nmax hb stack walk 56\nmax hb stack size 5616\n====== End Runtime Stats ======\nlines 16519936\nwords 16519936\nchars 154424832\n", "stderr": "", "elapsed": 32.51655864715576, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nqueens-ng.mpl-hb-one.bin @mpl procs 1  -- -N 13  -repeat 5 -warmup 5", "args": "-N 13", "_old_affinity": "set-affinity affinity-base 0", "bench": "nqueens-ng", "tag": "nqueens", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.384368", "stdout": "N 13\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\ncounting number of 13x13 solutions\ntime 3.0261s\ntime 3.0376s\ntime 3.0276s\ntime 3.0446s\ntime 3.0427s\n\naverage 3.0357s\nminimum 3.0261s\nmaximum 3.0446s\nstd dev 0.0085s\ntotal   15.1786s\nend-to-end 15.1788s\n======== Runtime Stats ========\nnum spawns        151525\n  eager           753 (0%)\n  at heartbeat    150772 (100%)\n\nnum heartbeats    30305\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           0.02\n  at heartbeat    4.98\n\nnum steals        0\n\nmax hb stack walk 98\nmax hb stack size 8728\n====== End Runtime Stats ======\nresult 73712\n", "stderr": "", "elapsed": 21.368363857269287, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/grep-ng.mpl-hb-one.bin @mpl procs 1  -- EE ../inputs/words256-shuffled.txt --benchmark  -repeat 5 -warmup 5", "args": "EE ../inputs/words256-shuffled.txt --benchmark", "_old_affinity": "set-affinity affinity-base 0", "bench": "grep-ng", "tag": "grep", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.385605", "stdout": "read file in 0.1768s\nn 154424832\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nrunning grep\ntime 9.6673s\ntime 9.6753s\ntime 9.7052s\ntime 10.9867s\ntime 9.2715s\n\naverage 9.8612s\nminimum 9.2715s\nmaximum 10.9867s\nstd dev 0.6540s\ntotal   49.3060s\nend-to-end 49.3064s\n======== Runtime Stats ========\nnum spawns        490518\n  eager           83143 (17%)\n  at heartbeat    407375 (83%)\n\nnum heartbeats    98106\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           0.85\n  at heartbeat    4.15\n\nnum steals        0\n\nmax hb stack walk 56\nmax hb stack size 5280\n====== End Runtime Stats ======\nnum matching lines 385792\n", "stderr": "", "elapsed": 59.30724048614502, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bignum-add-ng.mpl-hb-one.bin @mpl procs 1  -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "bignum-add-ng", "tag": "bignum-add", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.387167", "stdout": "n 100000000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\nbignum add\ntime 3.3198s\ntime 3.3668s\ntime 3.3754s\ntime 3.3163s\ntime 3.3069s\n\naverage 3.3370s\nminimum 3.3069s\nmaximum 3.3754s\nstd dev 0.0316s\ntotal   16.6851s\nend-to-end 16.6856s\n======== Runtime Stats ========\nnum spawns        165865\n  eager           10122 (6%)\n  at heartbeat    155743 (94%)\n\nnum heartbeats    33172\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           0.31\n  at heartbeat    4.70\n\nnum steals        0\n\nmax hb stack walk 54\nmax hb stack size 5032\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 24.767520666122437, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/suffix-array-ng.mpl-hb-one.bin @mpl procs 1  -- --benchmark -N 10000000  -repeat 5 -warmup 5", "args": "--benchmark -N 10000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "suffix-array-ng", "tag": "suffix-array", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.387843", "stdout": "N 10000000\ngenerated input in 0.2136s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\navgLen is 2\nnumGroups is 11657\n1 warmup runs completed\nrunning suffix array\navgLen is 2\nnumGroups is 11657\ntime 8.1647s\navgLen is 2\nnumGroups is 11657\ntime 7.9981s\navgLen is 2\nnumGroups is 11657\ntime 7.9994s\navgLen is 2\nnumGroups is 11657\ntime 9.1121s\navgLen is 2\nnumGroups is 11657\ntime 7.9344s\n\naverage 8.2417s\nminimum 7.9344s\nmaximum 9.1121s\nstd dev 0.4940s\ntotal   41.2086s\nend-to-end 41.2088s\n======== Runtime Stats ========\nnum spawns        313438\n  eager           50153 (16%)\n  at heartbeat    263285 (84%)\n\nnum heartbeats    81669\n  skipped         0 (0%)\n\nspawns / hb       3.84\n  eager           0.61\n  at heartbeat    3.22\n\nnum steals        0\n\nmax hb stack walk 49\nmax hb stack size 4760\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 49.841853618621826, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/triangle-count-ng.mpl-hb-one.bin @mpl procs 1  -- ../inputs/rmat-1M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-1M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "triangle-count-ng", "tag": "triangle-count", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "1", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.388840", "stdout": "read file in 0.1894s\nparsed graph in 0.4759s\nnum vertices: 1048576\nnum edges: 19602538\nparity check in 0.1990s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nrunning tc: \ntime 17.7072s\ntime 18.8730s\ntime 20.4643s\ntime 19.8152s\ntime 15.6726s\n\naverage 18.5065s\nminimum 15.6726s\nmaximum 20.4643s\nstd dev 1.8940s\ntotal   92.5324s\nend-to-end 92.5326s\n======== Runtime Stats ========\nnum spawns        913777\n  eager           88115 (10%)\n  at heartbeat    825662 (90%)\n\nnum heartbeats    182757\n  skipped         0 (0%)\n\nspawns / hb       5.00\n  eager           0.48\n  at heartbeat    4.52\n\nnum steals        0\n\nmax hb stack walk 112\nmax hb stack size 5656\n====== End Runtime Stats ======\nnum-triangles = 451600\n", "stderr": "", "elapsed": 111.77564144134521, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bfs.mpl.bin @mpl procs 1  -- ../inputs/rmat-10M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-10M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "bfs", "tag": "bfs", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "1", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.390231", "stdout": "read file in 1.5887s\nparsed graph in 5.8380s\nnum vertices: 16777216\nnum edges: 198731752\nparity check in 2.1133s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nsparse 0.0001\nsparse 0.0114\ndense  3.5062\ndense  2.1425\ndense  1.0473\ndense  0.4292\nsparse 0.1361\nsparse 0.0191\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\n1 warmup runs completed\nrunning bfs\nsparse 0.0001\nsparse 0.0116\ndense  3.4589\ndense  2.1496\ndense  1.0572\ndense  0.4341\nsparse 0.1481\nsparse 0.0190\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 7.5414s\nsparse 0.0001\nsparse 0.0125\ndense  3.4754\ndense  2.1651\ndense  1.0523\ndense  0.5287\nsparse 0.1342\nsparse 0.0188\nsparse 0.0021\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 7.6520s\nsparse 0.0001\nsparse 0.0108\ndense  3.2814\ndense  2.0032\ndense  0.9588\ndense  0.5119\nsparse 0.2604\nsparse 0.0240\nsparse 0.0032\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\ntime 7.2898s\nsparse 0.0001\nsparse 0.0168\ndense  3.9648\ndense  1.9343\ndense  0.9542\ndense  0.3521\nsparse 0.1392\nsparse 0.0177\nsparse 0.0032\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 7.6994s\nsparse 0.0001\nsparse 0.0108\ndense  3.2396\ndense  1.9335\ndense  0.9173\ndense  0.3488\nsparse 0.1285\nsparse 0.0167\nsparse 0.0018\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 6.8172s\n\naverage 7.3999s\nminimum 6.8172s\nmaximum 7.6994s\nstd dev 0.3623s\ntotal   36.9997s\nend-to-end 36.9998s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nvisited 16037483\nmax dist 11\n", "stderr": "", "elapsed": 56.608837842941284, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/delaunay.mpl.bin @mpl procs 1  -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "delaunay", "tag": "delaunay", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "1", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.390866", "stdout": "parsed input points in 113.5463s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\ndelaunay\ntime 17.5991s\ntime 14.2901s\ntime 14.2946s\ntime 14.3557s\ntime 14.2012s\n\naverage 14.9482s\nminimum 14.2012s\nmaximum 17.5991s\nstd dev 1.4830s\ntotal   74.7408s\nend-to-end 74.7410s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnum rounds 220\n\nto see output, use -output and -resolution arguments\nfor example: delaunay -n 1000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 203.02511501312256, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/msort.mpl.bin @mpl procs 1  -- -N 20000000  -repeat 5 -warmup 5", "args": "-N 20000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "msort", "tag": "msort", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "1", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.391000", "stdout": "N 20000000\ngenerating 20000000 random integers\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nrunning mergesort\ntime 5.5554s\ntime 5.4690s\ntime 5.4595s\ntime 5.4527s\ntime 5.4513s\n\naverage 5.4776s\nminimum 5.4513s\nmaximum 5.5554s\nstd dev 0.0441s\ntotal   27.3880s\nend-to-end 27.3882s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\ninput [3647203, 1410947, 1439064, 11900373, 11111963, 1483844, 9953235, ..., 11557991]\nresult [0, 0, 1, 1, 1, 2, 3, ..., 19999999]\n", "stderr": "", "elapsed": 33.49152183532715, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/primes.mpl.bin @mpl procs 1  -- -N 100000000  -repeat 5 -warmup 5", "args": "-N 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "primes", "tag": "primes", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "1", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.392453", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\ngenerating primes up to 100000000\ntime 10.3147s\ntime 10.0060s\ntime 10.4437s\ntime 10.1285s\ntime 9.9747s\n\naverage 10.1735s\nminimum 9.9747s\nmaximum 10.4437s\nstd dev 0.2016s\ntotal   50.8676s\nend-to-end 50.8680s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnumber of primes 5761455\nresult [2, 3, 5, 7, 11, 13, 17, ..., 99999989]\n", "stderr": "", "elapsed": 61.52862071990967, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/sparse-mxv-csr.mpl.bin @mpl procs 1  -- -n 250000000  -repeat 5 -warmup 5", "args": "-n 250000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "sparse-mxv-csr", "tag": "sparse-mxv-csr", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "1", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.393285", "stdout": "n 250000000\nrow-len 100\n(num rows: 2500000)\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nsparse-mxv\ntime 7.3139s\ntime 7.3655s\ntime 7.2796s\ntime 8.4841s\ntime 7.0714s\n\naverage 7.5029s\nminimum 7.0714s\nmaximum 8.4841s\nstd dev 0.5598s\ntotal   37.5145s\nend-to-end 37.5148s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 53.5225031375885, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nearest-nbrs.mpl.bin @mpl procs 1  -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "nearest-nbrs", "tag": "nearest-nbrs", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "1", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.395612", "stdout": "parsed input points in 3.7455s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nbuilt quadtree in 0.9489s\nfound all neighbors in 1.3767s\nbuilt quadtree in 0.9321s\nfound all neighbors in 1.3609s\nbuilt quadtree in 1.0946s\nfound all neighbors in 1.3458s\n3 warmup runs completed\nrunning nearest neighbors\nbuilt quadtree in 1.1010s\nfound all neighbors in 1.3580s\ntime 2.4594s\nbuilt quadtree in 1.0591s\nfound all neighbors in 1.3568s\ntime 2.4162s\nbuilt quadtree in 1.0719s\nfound all neighbors in 1.3507s\ntime 2.4229s\nbuilt quadtree in 1.0501s\nfound all neighbors in 1.3436s\ntime 2.3938s\nbuilt quadtree in 1.0835s\nfound all neighbors in 1.3429s\ntime 2.4264s\n\naverage 2.4237s\nminimum 2.3938s\nmaximum 2.4594s\nstd dev 0.0236s\ntotal   12.1187s\nend-to-end 12.1188s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nresult [811533, 563604, 253596, 55855, 233544, 569064, 562970, 742080, 12442, 171262, 428737, ..., 540308]\nto see output, use -output and -resolution arguments\nfor example: nn -N 10000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 22.978865146636963, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/mandelbrot.mpl.bin @mpl procs 1  -- -resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30  -repeat 5 -warmup 5", "args": "-resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30", "_old_affinity": "set-affinity affinity-base 0", "bench": "mandelbrot", "tag": "mandelbrot", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "1", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.395037", "stdout": "max-iter 30\ndiverge-thresh 2\nresolution 2500\ntop 2\nbot ~2\nleft ~3\nright 1\nh 10000\nw 10000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n3 warmup runs completed\nrunning mandelbrot\ntime 2.1687s\ntime 2.1645s\ntime 2.1670s\ntime 2.1679s\ntime 2.1666s\n\naverage 2.1670s\nminimum 2.1645s\nmaximum 2.1687s\nstd dev 0.0016s\ntotal   10.8348s\nend-to-end 10.8350s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nuse -output XXX to see result\n", "stderr": "", "elapsed": 17.47252869606018, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/linefit.mpl.bin @mpl procs 1  -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "linefit", "tag": "linefit", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "1", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.397647", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n9 warmup runs completed\nlinefit\ntime 0.6155s\ntime 0.6106s\ntime 0.6127s\ntime 0.6141s\ntime 0.6109s\n\naverage 0.6127s\nminimum 0.6106s\nmaximum 0.6155s\nstd dev 0.0021s\ntotal   3.0637s\nend-to-end 3.0639s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 10.294596910476685, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/wc.mpl.bin @mpl procs 1  -- -infile ../inputs/words256.txt  -repeat 5 -warmup 5", "args": "-infile ../inputs/words256.txt", "_old_affinity": "set-affinity affinity-base 0", "bench": "wc", "tag": "wc", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "1", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.397153", "stdout": "loadtime 0.176\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n6 warmup runs completed\nwc\ntime 0.9180s\ntime 0.9132s\ntime 0.9167s\ntime 0.9110s\ntime 0.9137s\n\naverage 0.9145s\nminimum 0.9110s\nmaximum 0.9180s\nstd dev 0.0028s\ntotal   4.5726s\nend-to-end 4.5728s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nlines 16519936\nwords 16519936\nchars 154424832\n", "stderr": "", "elapsed": 10.407932043075562, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nqueens.mpl.bin @mpl procs 1  -- -N 13  -repeat 5 -warmup 5", "args": "-N 13", "_old_affinity": "set-affinity affinity-base 0", "bench": "nqueens", "tag": "nqueens", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "1", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.410923", "stdout": "N 13\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\ncounting number of 13x13 solutions\ntime 2.4969s\ntime 2.4878s\ntime 2.5336s\ntime 2.5045s\ntime 2.4849s\n\naverage 2.5016s\nminimum 2.4849s\nmaximum 2.5336s\nstd dev 0.0195s\ntotal   12.5078s\nend-to-end 12.5086s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nresult 73712\n", "stderr": "", "elapsed": 17.787833213806152, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/grep.mpl.bin @mpl procs 1  -- EE ../inputs/words256-shuffled.txt --benchmark  -repeat 5 -warmup 5", "args": "EE ../inputs/words256-shuffled.txt --benchmark", "_old_affinity": "set-affinity affinity-base 0", "bench": "grep", "tag": "grep", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "1", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.412394", "stdout": "read file in 0.1776s\nn 154424832\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\nrunning grep\ntime 2.5634s\ntime 2.6195s\ntime 2.5658s\ntime 2.5630s\ntime 2.5584s\n\naverage 2.5740s\nminimum 2.5584s\nmaximum 2.6195s\nstd dev 0.0255s\ntotal   12.8701s\nend-to-end 12.8704s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnum matching lines 385792\n", "stderr": "", "elapsed": 18.40705394744873, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bignum-add.mpl.bin @mpl procs 1  -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "bignum-add", "tag": "bignum-add", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "1", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.412426", "stdout": "n 100000000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n2 warmup runs completed\nbignum add\ntime 4.7625s\ntime 4.8298s\ntime 4.8246s\ntime 4.7499s\ntime 4.7588s\n\naverage 4.7851s\nminimum 4.7499s\nmaximum 4.8298s\nstd dev 0.0387s\ntotal   23.9257s\nend-to-end 23.9259s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 35.007166624069214, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/suffix-array.mpl.bin @mpl procs 1  -- --benchmark -N 10000000  -repeat 5 -warmup 5", "args": "--benchmark -N 10000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "suffix-array", "tag": "suffix-array", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "1", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.414570", "stdout": "N 10000000\ngenerated input in 0.1359s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\ngrain is 4096\navgLen is 2\nnumGroups is 11657\n1 warmup runs completed\nrunning suffix array\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 6.3886s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 6.2510s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 6.1870s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 6.1845s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 6.1747s\n\naverage 6.2371s\nminimum 6.1747s\nmaximum 6.3886s\nstd dev 0.0899s\ntotal   31.1857s\nend-to-end 31.1859s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 37.86433744430542, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/triangle-count.mpl.bin @mpl procs 1  -- ../inputs/rmat-1M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-1M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "triangle-count", "tag": "triangle-count", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "1", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:36:56.416410", "stdout": "read file in 0.1919s\nparsed graph in 0.4801s\nnum vertices: 1048576\nnum edges: 19602538\nparity check in 0.1920s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n1 warmup runs completed\nrunning tc: \ntime 7.5000s\ntime 7.3858s\ntime 7.2905s\ntime 7.1363s\ntime 8.1017s\n\naverage 7.4829s\nminimum 7.1363s\nmaximum 8.1017s\nstd dev 0.3707s\ntotal   37.4143s\nend-to-end 37.4146s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnum-triangles = 511733\n", "stderr": "", "elapsed": 45.850223541259766, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bfs-ng.mpl-spork-2way-one.bin @mpl procs 72  heartbeat-tokens 5 -- ../inputs/rmat-10M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-10M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "bfs-ng", "tag": "bfs", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:40:31.217329", "stdout": "read file in 0.2921s\nparsed graph in 0.1646s\nnum vertices: 16777216\nnum edges: 198731752\nparity check in 0.0459s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nsparse 0.0006\nsparse 0.0041\ndense  0.1011\ndense  0.0770\ndense  0.0549\ndense  0.0392\nsparse 0.0133\nsparse 0.0063\nsparse 0.0033\nsparse 0.0004\nsparse 0.0001\nsparse 0.0000\nsparse 0.0005\nsparse 0.0046\ndense  0.0833\ndense  0.0715\ndense  0.0583\ndense  0.0403\nsparse 0.0141\nsparse 0.0045\nsparse 0.0016\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0002\nsparse 0.0041\ndense  0.0816\ndense  0.0716\ndense  0.0558\ndense  0.0375\nsparse 0.0134\nsparse 0.0047\nsparse 0.0015\nsparse 0.0006\nsparse 0.0001\nsparse 0.0000\nsparse 0.0005\nsparse 0.0043\ndense  0.0798\ndense  0.0700\ndense  0.0565\ndense  0.0427\nsparse 0.0117\nsparse 0.0042\nsparse 0.0015\nsparse 0.0007\nsparse 0.0000\nsparse 0.0000\nsparse 0.0005\nsparse 0.0037\ndense  0.0785\ndense  0.1298\ndense  0.0542\ndense  0.0304\nsparse 0.0122\nsparse 0.0045\nsparse 0.0014\nsparse 0.0006\nsparse 0.0000\nsparse 0.0000\nsparse 0.0005\nsparse 0.0044\ndense  0.0829\ndense  0.0649\ndense  0.0519\ndense  0.0367\nsparse 0.0131\nsparse 0.0046\nsparse 0.0014\nsparse 0.0004\nsparse 0.0001\nsparse 0.0000\nsparse 0.0004\nsparse 0.0042\ndense  0.0896\ndense  0.0643\ndense  0.0479\ndense  0.0342\nsparse 0.0136\nsparse 0.0048\nsparse 0.0023\nsparse 0.0004\nsparse 0.0000\nsparse 0.0000\nsparse 0.0007\nsparse 0.0043\ndense  0.0802\ndense  0.0680\ndense  0.0516\ndense  0.0343\nsparse 0.0126\nsparse 0.0038\nsparse 0.0018\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0006\nsparse 0.0043\ndense  0.0814\ndense  0.1303\ndense  0.0535\ndense  0.0330\nsparse 0.0128\nsparse 0.0043\nsparse 0.0017\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0003\nsparse 0.0042\ndense  0.0825\ndense  0.0674\ndense  0.0499\ndense  0.0316\nsparse 0.0127\nsparse 0.0044\nsparse 0.0017\nsparse 0.0004\nsparse 0.0000\nsparse 0.0000\nsparse 0.0004\nsparse 0.0041\ndense  0.0853\ndense  0.0655\ndense  0.0495\ndense  0.0338\nsparse 0.0121\nsparse 0.0043\nsparse 0.0017\nsparse 0.0006\nsparse 0.0000\nsparse 0.0000\nsparse 0.0003\nsparse 0.0037\ndense  0.0797\ndense  0.0989\ndense  0.0503\ndense  0.0324\nsparse 0.0134\nsparse 0.0048\nsparse 0.0018\nsparse 0.0004\nsparse 0.0000\nsparse 0.0000\nsparse 0.0005\nsparse 0.0044\ndense  0.0833\ndense  0.0661\ndense  0.0496\ndense  0.0313\nsparse 0.0128\nsparse 0.0050\nsparse 0.0020\nsparse 0.0006\nsparse 0.0000\nsparse 0.0000\nsparse 0.0006\nsparse 0.0037\ndense  0.0825\ndense  0.0660\ndense  0.0503\ndense  0.0389\nsparse 0.0135\nsparse 0.0048\nsparse 0.0015\nsparse 0.0005\nsparse 0.0002\nsparse 0.0000\nsparse 0.0006\nsparse 0.0041\ndense  0.0852\ndense  0.0699\ndense  0.0696\ndense  0.0344\nsparse 0.0137\nsparse 0.0054\nsparse 0.0019\nsparse 0.0004\nsparse 0.0000\nsparse 0.0000\nsparse 0.0004\nsparse 0.0043\ndense  0.1249\ndense  0.0676\ndense  0.0497\ndense  0.0307\nsparse 0.0130\nsparse 0.0046\nsparse 0.0011\nsparse 0.0004\nsparse 0.0001\nsparse 0.0000\n16 warmup runs completed\nrunning bfs\nsparse 0.0004\nsparse 0.0045\ndense  0.0826\ndense  0.0661\ndense  0.0508\ndense  0.0340\nsparse 0.0154\nsparse 0.0043\nsparse 0.0016\nsparse 0.0004\nsparse 0.0000\nsparse 0.0000\ntime 0.3035s\nsparse 0.0004\nsparse 0.0031\ndense  0.0774\ndense  0.0649\ndense  0.0539\ndense  0.0335\nsparse 0.0132\nsparse 0.0049\nsparse 0.0016\nsparse 0.0004\nsparse 0.0001\nsparse 0.0000\ntime 0.2940s\nsparse 0.0004\nsparse 0.0038\ndense  0.0911\ndense  0.1083\ndense  0.0523\ndense  0.0595\nsparse 0.0138\nsparse 0.0047\nsparse 0.0014\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\ntime 0.3819s\nsparse 0.0004\nsparse 0.0037\ndense  0.0943\ndense  0.0693\ndense  0.0613\ndense  0.0317\nsparse 0.0136\nsparse 0.0045\nsparse 0.0019\nsparse 0.0005\nsparse 0.0001\nsparse 0.0000\ntime 0.3226s\nsparse 0.0009\nsparse 0.0044\ndense  0.0829\ndense  0.0706\ndense  0.0514\ndense  0.0324\nsparse 0.0126\nsparse 0.0052\nsparse 0.0016\nsparse 0.0006\nsparse 0.0000\nsparse 0.0000\ntime 0.3048s\n\naverage 0.3214s\nminimum 0.2940s\nmaximum 0.3819s\nstd dev 0.0354s\ntotal   1.6068s\nend-to-end 1.6069s\n======== Runtime Stats ========\nnum spawns        794174\n  eager           387129 (49%)\n  at heartbeat    407045 (51%)\n\nnum heartbeats    166505\n  skipped         0 (0%)\n\nspawns / hb       4.77\n  eager           2.33\n  at heartbeat    2.44\n\nnum steals        87938\n\nmax hb stack walk 31\nmax hb stack size 2688\n====== End Runtime Stats ======\nvisited 16037483\nmax dist 11\n", "stderr": "", "elapsed": 8.121305227279663, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bfs-ng.mpl-spork-3way-one.bin @mpl procs 72  heartbeat-tokens 5 -- ../inputs/rmat-10M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-10M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "bfs-ng", "tag": "bfs", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:40:39.351374", "stdout": "read file in 0.2563s\nparsed graph in 0.1603s\nnum vertices: 16777216\nnum edges: 198731752\nparity check in 0.0484s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nsparse 0.0002\nsparse 0.1809\ndense  0.0701\ndense  0.0508\ndense  0.0337\ndense  0.0223\nsparse 0.0109\nsparse 0.0040\nsparse 0.0016\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0002\nsparse 0.0037\ndense  0.0690\ndense  0.0825\ndense  0.0338\ndense  0.0240\nsparse 0.0130\nsparse 0.0041\nsparse 0.0014\nsparse 0.0007\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0025\ndense  0.0642\ndense  0.0459\ndense  0.0447\ndense  0.0169\nsparse 0.0104\nsparse 0.0033\nsparse 0.0017\nsparse 0.0007\nsparse 0.0000\nsparse 0.0000\nsparse 0.0002\nsparse 0.0037\ndense  0.0637\ndense  0.0467\ndense  0.0302\ndense  0.0220\nsparse 0.0114\nsparse 0.0038\nsparse 0.0017\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\nsparse 0.0002\nsparse 0.0099\ndense  0.0663\ndense  0.0433\ndense  0.0291\ndense  0.0159\nsparse 0.0109\nsparse 0.0034\nsparse 0.0012\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0033\ndense  0.0635\ndense  0.0444\ndense  0.0280\ndense  0.0171\nsparse 0.0110\nsparse 0.0051\nsparse 0.0017\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\nsparse 0.0002\nsparse 0.0040\ndense  0.0664\ndense  0.0445\ndense  0.0289\ndense  0.0307\nsparse 0.0104\nsparse 0.0042\nsparse 0.0013\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0033\ndense  0.0644\ndense  0.0456\ndense  0.0290\ndense  0.0161\nsparse 0.0103\nsparse 0.0042\nsparse 0.0016\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0002\nsparse 0.0031\ndense  0.0679\ndense  0.0442\ndense  0.0284\ndense  0.0165\nsparse 0.0117\nsparse 0.0035\nsparse 0.0012\nsparse 0.0005\nsparse 0.0001\nsparse 0.0000\nsparse 0.0001\nsparse 0.0028\ndense  0.0638\ndense  0.0448\ndense  0.0292\ndense  0.0172\nsparse 0.0112\nsparse 0.0034\nsparse 0.0014\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0002\nsparse 0.0031\ndense  0.0666\ndense  0.0438\ndense  0.0275\ndense  0.0169\nsparse 0.0113\nsparse 0.0040\nsparse 0.0019\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0035\ndense  0.0657\ndense  0.0431\ndense  0.0404\ndense  0.0170\nsparse 0.0109\nsparse 0.0038\nsparse 0.0022\nsparse 0.0003\nsparse 0.0001\nsparse 0.0000\nsparse 0.0002\nsparse 0.0030\ndense  0.0636\ndense  0.0432\ndense  0.0288\ndense  0.0567\nsparse 0.0110\nsparse 0.0041\nsparse 0.0015\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0035\ndense  0.0628\ndense  0.0440\ndense  0.0278\ndense  0.0175\nsparse 0.0112\nsparse 0.0040\nsparse 0.0013\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0002\nsparse 0.0034\ndense  0.0712\ndense  0.0448\ndense  0.0287\ndense  0.0168\nsparse 0.0106\nsparse 0.0038\nsparse 0.0017\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\nsparse 0.0002\nsparse 0.0031\ndense  0.0645\ndense  0.0467\ndense  0.0276\ndense  0.0163\nsparse 0.0112\nsparse 0.0042\nsparse 0.0016\nsparse 0.0007\nsparse 0.0000\nsparse 0.0000\nsparse 0.0002\nsparse 0.0027\ndense  0.0641\ndense  0.0639\ndense  0.0288\ndense  0.0173\nsparse 0.0108\nsparse 0.0038\nsparse 0.0013\nsparse 0.0006\nsparse 0.0000\nsparse 0.0000\nsparse 0.0002\nsparse 0.0025\ndense  0.0637\ndense  0.0465\ndense  0.0283\ndense  0.0158\nsparse 0.0107\nsparse 0.0038\nsparse 0.0014\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0004\nsparse 0.0036\ndense  0.0675\ndense  0.0435\ndense  0.0279\ndense  0.0162\nsparse 0.0108\nsparse 0.0040\nsparse 0.0015\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0002\nsparse 0.0028\ndense  0.0633\ndense  0.0479\ndense  0.0280\ndense  0.0302\nsparse 0.0110\nsparse 0.0039\nsparse 0.0017\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\nsparse 0.0002\nsparse 0.0032\ndense  0.0680\ndense  0.0439\ndense  0.0291\ndense  0.0180\nsparse 0.0100\nsparse 0.0040\nsparse 0.0015\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0002\nsparse 0.0028\ndense  0.0636\ndense  0.0453\ndense  0.0416\ndense  0.0174\nsparse 0.0105\nsparse 0.0034\nsparse 0.0016\nsparse 0.0004\nsparse 0.0000\nsparse 0.0000\nsparse 0.0002\nsparse 0.0032\ndense  0.0727\ndense  0.0437\ndense  0.0281\ndense  0.0177\nsparse 0.0117\nsparse 0.0048\nsparse 0.0013\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\n23 warmup runs completed\nrunning bfs\nsparse 0.0002\nsparse 0.0033\ndense  0.0625\ndense  0.0428\ndense  0.0292\ndense  0.0180\nsparse 0.0108\nsparse 0.0042\nsparse 0.0017\nsparse 0.0004\nsparse 0.0000\nsparse 0.0000\ntime 0.1974s\nsparse 0.0002\nsparse 0.0027\ndense  0.0663\ndense  0.0455\ndense  0.0286\ndense  0.0173\nsparse 0.0117\nsparse 0.0042\nsparse 0.0016\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\ntime 0.2038s\nsparse 0.0002\nsparse 0.0026\ndense  0.0636\ndense  0.0445\ndense  0.0288\ndense  0.0166\nsparse 0.0117\nsparse 0.0034\nsparse 0.0015\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\ntime 0.1979s\nsparse 0.0002\nsparse 0.0035\ndense  0.0647\ndense  0.0440\ndense  0.0424\ndense  0.0179\nsparse 0.0115\nsparse 0.0037\nsparse 0.0016\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\ntime 0.2133s\nsparse 0.0003\nsparse 0.0029\ndense  0.0754\ndense  0.0445\ndense  0.0282\ndense  0.0160\nsparse 0.0121\nsparse 0.0037\nsparse 0.0018\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\ntime 0.2087s\n\naverage 0.2042s\nminimum 0.1974s\nmaximum 0.2133s\nstd dev 0.0069s\ntotal   1.0211s\nend-to-end 1.0212s\n======== Runtime Stats ========\nnum spawns        533507\n  eager           438257 (82%)\n  at heartbeat    95250 (18%)\n\nnum heartbeats    109610\n  skipped         0 (0%)\n\nspawns / hb       4.87\n  eager           4.00\n  at heartbeat    0.87\n\nnum steals        74441\n\nmax hb stack walk 26\nmax hb stack size 3008\n====== End Runtime Stats ======\nvisited 16037483\nmax dist 11\n", "stderr": "", "elapsed": 7.044765472412109, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/delaunay-ng.mpl-spork-2way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "delaunay-ng", "tag": "delaunay", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:40:46.408021", "stdout": "parsed input points in 1.9124s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n7 warmup runs completed\ndelaunay\ntime 0.7752s\ntime 0.7836s\ntime 0.7775s\ntime 0.7735s\ntime 0.7782s\n\naverage 0.7776s\nminimum 0.7735s\nmaximum 0.7836s\nstd dev 0.0038s\ntotal   3.8880s\nend-to-end 3.8885s\n======== Runtime Stats ========\nnum spawns        875307\n  eager           425198 (49%)\n  at heartbeat    450109 (51%)\n\nnum heartbeats    196067\n  skipped         0 (0%)\n\nspawns / hb       4.46\n  eager           2.17\n  at heartbeat    2.30\n\nnum steals        458426\n\nmax hb stack walk 25\nmax hb stack size 3264\n====== End Runtime Stats ======\nnum rounds 220\n\nto see output, use -output and -resolution arguments\nfor example: delaunay -n 1000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 11.562464475631714, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/delaunay-ng.mpl-spork-3way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "delaunay-ng", "tag": "delaunay", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:40:57.982776", "stdout": "parsed input points in 1.9292s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n7 warmup runs completed\ndelaunay\ntime 0.7338s\ntime 0.7549s\ntime 0.7277s\ntime 0.7390s\ntime 0.7359s\n\naverage 0.7382s\nminimum 0.7277s\nmaximum 0.7549s\nstd dev 0.0102s\ntotal   3.6912s\nend-to-end 3.6916s\n======== Runtime Stats ========\nnum spawns        878213\n  eager           705322 (80%)\n  at heartbeat    172891 (20%)\n\nnum heartbeats    192433\n  skipped         0 (0%)\n\nspawns / hb       4.56\n  eager           3.67\n  at heartbeat    0.90\n\nnum steals        469350\n\nmax hb stack walk 20\nmax hb stack size 2248\n====== End Runtime Stats ======\nnum rounds 220\n\nto see output, use -output and -resolution arguments\nfor example: delaunay -n 1000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 11.078919887542725, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/msort-ng.mpl-spork-2way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -N 20000000  -repeat 5 -warmup 5", "args": "-N 20000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "msort-ng", "tag": "msort", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:41:09.074182", "stdout": "N 20000000\ngenerating 20000000 random integers\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n34 warmup runs completed\nrunning mergesort\ntime 0.1452s\ntime 0.1443s\ntime 0.1437s\ntime 0.1459s\ntime 0.1467s\n\naverage 0.1452s\nminimum 0.1437s\nmaximum 0.1467s\nstd dev 0.0012s\ntotal   0.7258s\nend-to-end 0.7261s\n======== Runtime Stats ========\nnum spawns        479231\n  eager           225143 (47%)\n  at heartbeat    254088 (53%)\n\nnum heartbeats    96946\n  skipped         0 (0%)\n\nspawns / hb       4.94\n  eager           2.32\n  at heartbeat    2.62\n\nnum steals        29290\n\nmax hb stack walk 44\nmax hb stack size 3640\n====== End Runtime Stats ======\ninput [3647203, 1410947, 1439064, 11900373, 11111963, 1483844, 9953235, ..., 11557991]\nresult [0, 0, 1, 1, 1, 2, 3, ..., 19999999]\n", "stderr": "", "elapsed": 6.130504608154297, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/msort-ng.mpl-spork-3way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -N 20000000  -repeat 5 -warmup 5", "args": "-N 20000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "msort-ng", "tag": "msort", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:41:15.216034", "stdout": "N 20000000\ngenerating 20000000 random integers\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n36 warmup runs completed\nrunning mergesort\ntime 0.1371s\ntime 0.1400s\ntime 0.1339s\ntime 0.1323s\ntime 0.1346s\n\naverage 0.1356s\nminimum 0.1323s\nmaximum 0.1400s\nstd dev 0.0030s\ntotal   0.6779s\nend-to-end 0.6782s\n======== Runtime Stats ========\nnum spawns        450717\n  eager           220489 (49%)\n  at heartbeat    230228 (51%)\n\nnum heartbeats    90931\n  skipped         0 (0%)\n\nspawns / hb       4.96\n  eager           2.42\n  at heartbeat    2.53\n\nnum steals        30323\n\nmax hb stack walk 45\nmax hb stack size 3632\n====== End Runtime Stats ======\ninput [3647203, 1410947, 1439064, 11900373, 11111963, 1483844, 9953235, ..., 11557991]\nresult [0, 0, 1, 1, 1, 2, 3, ..., 19999999]\n", "stderr": "", "elapsed": 5.910600423812866, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/primes-ng.mpl-spork-2way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -N 100000000  -repeat 5 -warmup 5", "args": "-N 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "primes-ng", "tag": "primes", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:41:21.137877", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n16 warmup runs completed\ngenerating primes up to 100000000\ntime 0.3202s\ntime 0.3118s\ntime 0.3213s\ntime 0.3228s\ntime 0.3181s\n\naverage 0.3188s\nminimum 0.3118s\nmaximum 0.3228s\nstd dev 0.0043s\ntotal   1.5942s\nend-to-end 1.5945s\n======== Runtime Stats ========\nnum spawns        1044913\n  eager           432219 (41%)\n  at heartbeat    612694 (59%)\n\nnum heartbeats    210839\n  skipped         0 (0%)\n\nspawns / hb       4.96\n  eager           2.05\n  at heartbeat    2.91\n\nnum steals        21376\n\nmax hb stack walk 36\nmax hb stack size 3584\n====== End Runtime Stats ======\nnumber of primes 5761455\nresult [2, 3, 5, 7, 11, 13, 17, ..., 99999989]\n", "stderr": "", "elapsed": 7.0910484790802, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/primes-ng.mpl-spork-3way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -N 100000000  -repeat 5 -warmup 5", "args": "-N 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "primes-ng", "tag": "primes", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:41:28.241563", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n27 warmup runs completed\ngenerating primes up to 100000000\ntime 0.1825s\ntime 0.1805s\ntime 0.1951s\ntime 0.1825s\ntime 0.1840s\n\naverage 0.1849s\nminimum 0.1805s\nmaximum 0.1951s\nstd dev 0.0058s\ntotal   0.9246s\nend-to-end 0.9250s\n======== Runtime Stats ========\nnum spawns        607188\n  eager           496581 (82%)\n  at heartbeat    110607 (18%)\n\nnum heartbeats    122115\n  skipped         0 (0%)\n\nspawns / hb       4.97\n  eager           4.07\n  at heartbeat    0.91\n\nnum steals        20338\n\nmax hb stack walk 24\nmax hb stack size 2832\n====== End Runtime Stats ======\nnumber of primes 5761455\nresult [2, 3, 5, 7, 11, 13, 17, ..., 99999989]\n", "stderr": "", "elapsed": 6.128059387207031, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/sparse-mxv-csr-ng.mpl-spork-2way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -n 250000000  -repeat 5 -warmup 5", "args": "-n 250000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "sparse-mxv-csr-ng", "tag": "sparse-mxv-csr", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:41:34.382113", "stdout": "n 250000000\nrow-len 100\n(num rows: 2500000)\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n26 warmup runs completed\nsparse-mxv\ntime 0.2052s\ntime 0.1986s\ntime 0.1916s\ntime 0.1816s\ntime 0.1845s\n\naverage 0.1923s\nminimum 0.1816s\nmaximum 0.2052s\nstd dev 0.0098s\ntotal   0.9614s\nend-to-end 0.9617s\n======== Runtime Stats ========\nnum spawns        648402\n  eager           264799 (41%)\n  at heartbeat    383603 (59%)\n\nnum heartbeats    130173\n  skipped         0 (0%)\n\nspawns / hb       4.98\n  eager           2.03\n  at heartbeat    2.95\n\nnum steals        6942\n\nmax hb stack walk 30\nmax hb stack size 2672\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 7.751783132553101, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/sparse-mxv-csr-ng.mpl-spork-3way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -n 250000000  -repeat 5 -warmup 5", "args": "-n 250000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "sparse-mxv-csr-ng", "tag": "sparse-mxv-csr", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:41:42.144944", "stdout": "n 250000000\nrow-len 100\n(num rows: 2500000)\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n34 warmup runs completed\nsparse-mxv\ntime 0.1413s\ntime 0.1781s\ntime 0.1479s\ntime 0.1435s\ntime 0.1416s\n\naverage 0.1505s\nminimum 0.1413s\nmaximum 0.1781s\nstd dev 0.0157s\ntotal   0.7525s\nend-to-end 0.7529s\n======== Runtime Stats ========\nnum spawns        493381\n  eager           395709 (80%)\n  at heartbeat    97672 (20%)\n\nnum heartbeats    99153\n  skipped         0 (0%)\n\nspawns / hb       4.98\n  eager           3.99\n  at heartbeat    0.99\n\nnum steals        6570\n\nmax hb stack walk 20\nmax hb stack size 2400\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 7.31230092048645, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nearest-nbrs-ng.mpl-spork-2way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "nearest-nbrs-ng", "tag": "nearest-nbrs", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:41:49.469650", "stdout": "parsed input points in 0.1341s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nbuilt quadtree in 0.0356s\nfound all neighbors in 0.0301s\nbuilt quadtree in 0.0293s\nfound all neighbors in 0.0277s\nbuilt quadtree in 0.0294s\nfound all neighbors in 0.0271s\nbuilt quadtree in 0.0287s\nfound all neighbors in 0.0248s\nbuilt quadtree in 0.0290s\nfound all neighbors in 0.0245s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0239s\nbuilt quadtree in 0.0237s\nfound all neighbors in 0.0238s\nbuilt quadtree in 0.0237s\nfound all neighbors in 0.0243s\nbuilt quadtree in 0.0247s\nfound all neighbors in 0.0250s\nbuilt quadtree in 0.0276s\nfound all neighbors in 0.0280s\nbuilt quadtree in 0.0287s\nfound all neighbors in 0.0270s\nbuilt quadtree in 0.0272s\nfound all neighbors in 0.0266s\nbuilt quadtree in 0.0256s\nfound all neighbors in 0.0274s\nbuilt quadtree in 0.0261s\nfound all neighbors in 0.0255s\nbuilt quadtree in 0.0257s\nfound all neighbors in 0.0255s\nbuilt quadtree in 0.0268s\nfound all neighbors in 0.0289s\nbuilt quadtree in 0.0296s\nfound all neighbors in 0.0279s\nbuilt quadtree in 0.0325s\nfound all neighbors in 0.0265s\nbuilt quadtree in 0.0281s\nfound all neighbors in 0.0247s\nbuilt quadtree in 0.0252s\nfound all neighbors in 0.0245s\nbuilt quadtree in 0.0255s\nfound all neighbors in 0.0270s\nbuilt quadtree in 0.0260s\nfound all neighbors in 0.0247s\nbuilt quadtree in 0.0274s\nfound all neighbors in 0.0266s\nbuilt quadtree in 0.0253s\nfound all neighbors in 0.0247s\nbuilt quadtree in 0.0245s\nfound all neighbors in 0.0244s\nbuilt quadtree in 0.0261s\nfound all neighbors in 0.0252s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0251s\nbuilt quadtree in 0.0258s\nfound all neighbors in 0.0255s\nbuilt quadtree in 0.0253s\nfound all neighbors in 0.0247s\nbuilt quadtree in 0.0253s\nfound all neighbors in 0.0255s\nbuilt quadtree in 0.0260s\nfound all neighbors in 0.0246s\nbuilt quadtree in 0.0251s\nfound all neighbors in 0.0256s\nbuilt quadtree in 0.0266s\nfound all neighbors in 0.0250s\nbuilt quadtree in 0.0255s\nfound all neighbors in 0.0242s\nbuilt quadtree in 0.0265s\nfound all neighbors in 0.0250s\nbuilt quadtree in 0.0258s\nfound all neighbors in 0.0244s\nbuilt quadtree in 0.0249s\nfound all neighbors in 0.0276s\nbuilt quadtree in 0.0281s\nfound all neighbors in 0.0266s\nbuilt quadtree in 0.0260s\nfound all neighbors in 0.0250s\nbuilt quadtree in 0.0292s\nfound all neighbors in 0.0301s\nbuilt quadtree in 0.0283s\nfound all neighbors in 0.0240s\nbuilt quadtree in 0.0278s\nfound all neighbors in 0.0283s\nbuilt quadtree in 0.0265s\nfound all neighbors in 0.0248s\nbuilt quadtree in 0.0281s\nfound all neighbors in 0.0251s\nbuilt quadtree in 0.0257s\nfound all neighbors in 0.0254s\nbuilt quadtree in 0.0258s\nfound all neighbors in 0.0264s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0241s\nbuilt quadtree in 0.0245s\nfound all neighbors in 0.0254s\nbuilt quadtree in 0.0254s\nfound all neighbors in 0.0249s\nbuilt quadtree in 0.0262s\nfound all neighbors in 0.0256s\nbuilt quadtree in 0.0266s\nfound all neighbors in 0.0247s\nbuilt quadtree in 0.0254s\nfound all neighbors in 0.0252s\nbuilt quadtree in 0.0261s\nfound all neighbors in 0.0251s\nbuilt quadtree in 0.0282s\nfound all neighbors in 0.0239s\nbuilt quadtree in 0.0247s\nfound all neighbors in 0.0256s\nbuilt quadtree in 0.0259s\nfound all neighbors in 0.0250s\nbuilt quadtree in 0.0310s\nfound all neighbors in 0.0257s\nbuilt quadtree in 0.0290s\nfound all neighbors in 0.0271s\nbuilt quadtree in 0.0271s\nfound all neighbors in 0.0261s\nbuilt quadtree in 0.0287s\nfound all neighbors in 0.0258s\nbuilt quadtree in 0.0263s\nfound all neighbors in 0.0242s\nbuilt quadtree in 0.0259s\nfound all neighbors in 0.0276s\nbuilt quadtree in 0.0256s\nfound all neighbors in 0.0250s\nbuilt quadtree in 0.0252s\nfound all neighbors in 0.0259s\nbuilt quadtree in 0.0257s\nfound all neighbors in 0.0254s\nbuilt quadtree in 0.0253s\nfound all neighbors in 0.0250s\nbuilt quadtree in 0.0250s\nfound all neighbors in 0.0247s\nbuilt quadtree in 0.0257s\nfound all neighbors in 0.0239s\nbuilt quadtree in 0.0256s\nfound all neighbors in 0.0250s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0268s\nbuilt quadtree in 0.0267s\nfound all neighbors in 0.0239s\nbuilt quadtree in 0.0249s\nfound all neighbors in 0.0245s\nbuilt quadtree in 0.0256s\nfound all neighbors in 0.0263s\nbuilt quadtree in 0.0263s\nfound all neighbors in 0.0270s\nbuilt quadtree in 0.0247s\nfound all neighbors in 0.0251s\nbuilt quadtree in 0.0261s\nfound all neighbors in 0.0253s\nbuilt quadtree in 0.0291s\nfound all neighbors in 0.0237s\nbuilt quadtree in 0.0251s\nfound all neighbors in 0.0263s\nbuilt quadtree in 0.0270s\nfound all neighbors in 0.0244s\nbuilt quadtree in 0.0265s\nfound all neighbors in 0.0251s\nbuilt quadtree in 0.0266s\nfound all neighbors in 0.0252s\nbuilt quadtree in 0.0264s\nfound all neighbors in 0.0245s\nbuilt quadtree in 0.0285s\nfound all neighbors in 0.0260s\nbuilt quadtree in 0.0265s\nfound all neighbors in 0.0240s\nbuilt quadtree in 0.0254s\nfound all neighbors in 0.0259s\nbuilt quadtree in 0.0253s\nfound all neighbors in 0.0248s\nbuilt quadtree in 0.0276s\nfound all neighbors in 0.0253s\nbuilt quadtree in 0.0267s\nfound all neighbors in 0.0253s\nbuilt quadtree in 0.0292s\nfound all neighbors in 0.0279s\nbuilt quadtree in 0.0267s\nfound all neighbors in 0.0252s\nbuilt quadtree in 0.0262s\nfound all neighbors in 0.0257s\nbuilt quadtree in 0.0271s\nfound all neighbors in 0.0270s\nbuilt quadtree in 0.0257s\nfound all neighbors in 0.0240s\nbuilt quadtree in 0.0257s\nfound all neighbors in 0.0247s\nbuilt quadtree in 0.0251s\nfound all neighbors in 0.0257s\nbuilt quadtree in 0.0259s\nfound all neighbors in 0.0356s\n96 warmup runs completed\nrunning nearest neighbors\nbuilt quadtree in 0.0264s\nfound all neighbors in 0.0252s\ntime 0.0517s\nbuilt quadtree in 0.0268s\nfound all neighbors in 0.0250s\ntime 0.0519s\nbuilt quadtree in 0.0281s\nfound all neighbors in 0.0244s\ntime 0.0526s\nbuilt quadtree in 0.0256s\nfound all neighbors in 0.0248s\ntime 0.0506s\nbuilt quadtree in 0.0263s\nfound all neighbors in 0.0243s\ntime 0.0507s\n\naverage 0.0515s\nminimum 0.0506s\nmaximum 0.0526s\nstd dev 0.0008s\ntotal   0.2575s\nend-to-end 0.2575s\n======== Runtime Stats ========\nnum spawns        127246\n  eager           72311 (57%)\n  at heartbeat    54935 (43%)\n\nnum heartbeats    27236\n  skipped         0 (0%)\n\nspawns / hb       4.67\n  eager           2.65\n  at heartbeat    2.02\n\nnum steals        23074\n\nmax hb stack walk 29\nmax hb stack size 3528\n====== End Runtime Stats ======\nresult [811533, 563604, 253596, 55855, 233544, 569064, 562970, 742080, 12442, 171262, 428737, ..., 540308]\nto see output, use -output and -resolution arguments\nfor example: nn -N 10000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 5.697748899459839, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nearest-nbrs-ng.mpl-spork-3way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "nearest-nbrs-ng", "tag": "nearest-nbrs", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:41:55.178774", "stdout": "parsed input points in 0.1181s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nbuilt quadtree in 0.0320s\nfound all neighbors in 0.0241s\nbuilt quadtree in 0.0279s\nfound all neighbors in 0.0268s\nbuilt quadtree in 0.0275s\nfound all neighbors in 0.0245s\nbuilt quadtree in 0.0254s\nfound all neighbors in 0.0248s\nbuilt quadtree in 0.0290s\nfound all neighbors in 0.0228s\nbuilt quadtree in 0.0227s\nfound all neighbors in 0.0230s\nbuilt quadtree in 0.0226s\nfound all neighbors in 0.0243s\nbuilt quadtree in 0.0232s\nfound all neighbors in 0.0226s\nbuilt quadtree in 0.0227s\nfound all neighbors in 0.0223s\nbuilt quadtree in 0.0235s\nfound all neighbors in 0.0235s\nbuilt quadtree in 0.0237s\nfound all neighbors in 0.0227s\nbuilt quadtree in 0.0233s\nfound all neighbors in 0.0234s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0252s\nbuilt quadtree in 0.0231s\nfound all neighbors in 0.0232s\nbuilt quadtree in 0.0230s\nfound all neighbors in 0.0226s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0230s\nbuilt quadtree in 0.0231s\nfound all neighbors in 0.0224s\nbuilt quadtree in 0.0240s\nfound all neighbors in 0.0228s\nbuilt quadtree in 0.0251s\nfound all neighbors in 0.0238s\nbuilt quadtree in 0.0261s\nfound all neighbors in 0.0254s\nbuilt quadtree in 0.0229s\nfound all neighbors in 0.0243s\nbuilt quadtree in 0.0246s\nfound all neighbors in 0.0237s\nbuilt quadtree in 0.0225s\nfound all neighbors in 0.0251s\nbuilt quadtree in 0.0260s\nfound all neighbors in 0.0241s\nbuilt quadtree in 0.0272s\nfound all neighbors in 0.0250s\nbuilt quadtree in 0.0285s\nfound all neighbors in 0.0239s\nbuilt quadtree in 0.0238s\nfound all neighbors in 0.0237s\nbuilt quadtree in 0.0264s\nfound all neighbors in 0.0238s\nbuilt quadtree in 0.0239s\nfound all neighbors in 0.0229s\nbuilt quadtree in 0.0238s\nfound all neighbors in 0.0222s\nbuilt quadtree in 0.0229s\nfound all neighbors in 0.0233s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0229s\nbuilt quadtree in 0.0225s\nfound all neighbors in 0.0233s\nbuilt quadtree in 0.0262s\nfound all neighbors in 0.0235s\nbuilt quadtree in 0.0230s\nfound all neighbors in 0.0229s\nbuilt quadtree in 0.0225s\nfound all neighbors in 0.0235s\nbuilt quadtree in 0.0231s\nfound all neighbors in 0.0236s\nbuilt quadtree in 0.0230s\nfound all neighbors in 0.0232s\nbuilt quadtree in 0.0224s\nfound all neighbors in 0.0226s\nbuilt quadtree in 0.0233s\nfound all neighbors in 0.0283s\nbuilt quadtree in 0.0242s\nfound all neighbors in 0.0265s\nbuilt quadtree in 0.0250s\nfound all neighbors in 0.0238s\nbuilt quadtree in 0.0236s\nfound all neighbors in 0.0230s\nbuilt quadtree in 0.0273s\nfound all neighbors in 0.0231s\nbuilt quadtree in 0.0241s\nfound all neighbors in 0.0245s\nbuilt quadtree in 0.0326s\nfound all neighbors in 0.0236s\nbuilt quadtree in 0.0262s\nfound all neighbors in 0.0234s\nbuilt quadtree in 0.0269s\nfound all neighbors in 0.0241s\nbuilt quadtree in 0.0245s\nfound all neighbors in 0.0231s\nbuilt quadtree in 0.0267s\nfound all neighbors in 0.0219s\nbuilt quadtree in 0.0275s\nfound all neighbors in 0.0237s\nbuilt quadtree in 0.0242s\nfound all neighbors in 0.0248s\nbuilt quadtree in 0.0266s\nfound all neighbors in 0.0251s\nbuilt quadtree in 0.0237s\nfound all neighbors in 0.0259s\nbuilt quadtree in 0.0230s\nfound all neighbors in 0.0231s\nbuilt quadtree in 0.0238s\nfound all neighbors in 0.0267s\nbuilt quadtree in 0.0253s\nfound all neighbors in 0.0228s\nbuilt quadtree in 0.0277s\nfound all neighbors in 0.0237s\nbuilt quadtree in 0.0264s\nfound all neighbors in 0.0257s\nbuilt quadtree in 0.0235s\nfound all neighbors in 0.0227s\nbuilt quadtree in 0.0301s\nfound all neighbors in 0.0232s\nbuilt quadtree in 0.0267s\nfound all neighbors in 0.0260s\nbuilt quadtree in 0.0279s\nfound all neighbors in 0.0226s\nbuilt quadtree in 0.0237s\nfound all neighbors in 0.0234s\nbuilt quadtree in 0.0243s\nfound all neighbors in 0.0231s\nbuilt quadtree in 0.0258s\nfound all neighbors in 0.0237s\nbuilt quadtree in 0.0257s\nfound all neighbors in 0.0232s\nbuilt quadtree in 0.0233s\nfound all neighbors in 0.0238s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0229s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0228s\nbuilt quadtree in 0.0243s\nfound all neighbors in 0.0226s\nbuilt quadtree in 0.0240s\nfound all neighbors in 0.0238s\nbuilt quadtree in 0.0240s\nfound all neighbors in 0.0220s\nbuilt quadtree in 0.0227s\nfound all neighbors in 0.0230s\nbuilt quadtree in 0.0232s\nfound all neighbors in 0.0232s\nbuilt quadtree in 0.0233s\nfound all neighbors in 0.0251s\nbuilt quadtree in 0.0261s\nfound all neighbors in 0.0232s\nbuilt quadtree in 0.0230s\nfound all neighbors in 0.0233s\nbuilt quadtree in 0.0240s\nfound all neighbors in 0.0237s\nbuilt quadtree in 0.0229s\nfound all neighbors in 0.0233s\nbuilt quadtree in 0.0254s\nfound all neighbors in 0.0245s\nbuilt quadtree in 0.0330s\nfound all neighbors in 0.0233s\nbuilt quadtree in 0.0245s\nfound all neighbors in 0.0234s\nbuilt quadtree in 0.0251s\nfound all neighbors in 0.0243s\nbuilt quadtree in 0.0228s\nfound all neighbors in 0.0267s\nbuilt quadtree in 0.0283s\nfound all neighbors in 0.0225s\nbuilt quadtree in 0.0256s\nfound all neighbors in 0.0229s\nbuilt quadtree in 0.0232s\nfound all neighbors in 0.0234s\nbuilt quadtree in 0.0230s\nfound all neighbors in 0.0242s\nbuilt quadtree in 0.0240s\nfound all neighbors in 0.0234s\nbuilt quadtree in 0.0243s\nfound all neighbors in 0.0228s\nbuilt quadtree in 0.0237s\nfound all neighbors in 0.0234s\nbuilt quadtree in 0.0227s\nfound all neighbors in 0.0240s\nbuilt quadtree in 0.0229s\nfound all neighbors in 0.0245s\nbuilt quadtree in 0.0238s\nfound all neighbors in 0.0240s\nbuilt quadtree in 0.0237s\nfound all neighbors in 0.0237s\nbuilt quadtree in 0.0237s\nfound all neighbors in 0.0231s\nbuilt quadtree in 0.0241s\nfound all neighbors in 0.0226s\nbuilt quadtree in 0.0235s\nfound all neighbors in 0.0236s\nbuilt quadtree in 0.0230s\nfound all neighbors in 0.0241s\nbuilt quadtree in 0.0237s\nfound all neighbors in 0.0257s\nbuilt quadtree in 0.0228s\nfound all neighbors in 0.0231s\nbuilt quadtree in 0.0241s\nfound all neighbors in 0.0279s\n103 warmup runs completed\nrunning nearest neighbors\nbuilt quadtree in 0.0237s\nfound all neighbors in 0.0229s\ntime 0.0466s\nbuilt quadtree in 0.0254s\nfound all neighbors in 0.0235s\ntime 0.0490s\nbuilt quadtree in 0.0246s\nfound all neighbors in 0.0235s\ntime 0.0483s\nbuilt quadtree in 0.0240s\nfound all neighbors in 0.0245s\ntime 0.0486s\nbuilt quadtree in 0.0241s\nfound all neighbors in 0.0238s\ntime 0.0481s\n\naverage 0.0481s\nminimum 0.0466s\nmaximum 0.0490s\nstd dev 0.0009s\ntotal   0.2407s\nend-to-end 0.2408s\n======== Runtime Stats ========\nnum spawns        120272\n  eager           96919 (81%)\n  at heartbeat    23353 (19%)\n\nnum heartbeats    25566\n  skipped         0 (0%)\n\nspawns / hb       4.70\n  eager           3.79\n  at heartbeat    0.91\n\nnum steals        22165\n\nmax hb stack walk 25\nmax hb stack size 2880\n====== End Runtime Stats ======\nresult [811533, 563604, 253596, 55855, 233544, 569064, 562970, 742080, 12442, 171262, 428737, ..., 540308]\nto see output, use -output and -resolution arguments\nfor example: nn -N 10000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 5.632557153701782, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/mandelbrot-ng.mpl-spork-2way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30  -repeat 5 -warmup 5", "args": "-resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30", "_old_affinity": "set-affinity affinity-base 0", "bench": "mandelbrot-ng", "tag": "mandelbrot", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:42:00.822849", "stdout": "max-iter 30\ndiverge-thresh 2\nresolution 2500\ntop 2\nbot ~2\nleft ~3\nright 1\nh 10000\nw 10000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n61 warmup runs completed\nrunning mandelbrot\ntime 0.0790s\ntime 0.0800s\ntime 0.0792s\ntime 0.0795s\ntime 0.0807s\n\naverage 0.0797s\nminimum 0.0790s\nmaximum 0.0807s\nstd dev 0.0007s\ntotal   0.3984s\nend-to-end 0.3987s\n======== Runtime Stats ========\nnum spawns        267103\n  eager           109453 (41%)\n  at heartbeat    157650 (59%)\n\nnum heartbeats    53852\n  skipped         0 (0%)\n\nspawns / hb       4.96\n  eager           2.03\n  at heartbeat    2.93\n\nnum steals        5873\n\nmax hb stack walk 28\nmax hb stack size 3008\n====== End Runtime Stats ======\nuse -output XXX to see result\n", "stderr": "", "elapsed": 5.58147668838501, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/mandelbrot-ng.mpl-spork-3way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30  -repeat 5 -warmup 5", "args": "-resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30", "_old_affinity": "set-affinity affinity-base 0", "bench": "mandelbrot-ng", "tag": "mandelbrot", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:42:06.414297", "stdout": "max-iter 30\ndiverge-thresh 2\nresolution 2500\ntop 2\nbot ~2\nleft ~3\nright 1\nh 10000\nw 10000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n79 warmup runs completed\nrunning mandelbrot\ntime 0.0619s\ntime 0.0624s\ntime 0.0637s\ntime 0.0698s\ntime 0.0619s\n\naverage 0.0639s\nminimum 0.0619s\nmaximum 0.0698s\nstd dev 0.0034s\ntotal   0.3197s\nend-to-end 0.3202s\n======== Runtime Stats ========\nnum spawns        204219\n  eager           163823 (80%)\n  at heartbeat    40396 (20%)\n\nnum heartbeats    41325\n  skipped         0 (0%)\n\nspawns / hb       4.94\n  eager           3.96\n  at heartbeat    0.98\n\nnum steals        6216\n\nmax hb stack walk 19\nmax hb stack size 2240\n====== End Runtime Stats ======\nuse -output XXX to see result\n", "stderr": "", "elapsed": 5.512743234634399, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/linefit-ng.mpl-spork-2way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "linefit-ng", "tag": "linefit", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:42:11.937426", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n53 warmup runs completed\nlinefit\ntime 0.0879s\ntime 0.0949s\ntime 0.0941s\ntime 0.0906s\ntime 0.0904s\n\naverage 0.0916s\nminimum 0.0879s\nmaximum 0.0949s\nstd dev 0.0029s\ntotal   0.4580s\nend-to-end 0.4583s\n======== Runtime Stats ========\nnum spawns        280730\n  eager           114798 (41%)\n  at heartbeat    165932 (59%)\n\nnum heartbeats    57020\n  skipped         0 (0%)\n\nspawns / hb       4.92\n  eager           2.01\n  at heartbeat    2.91\n\nnum steals        9522\n\nmax hb stack walk 29\nmax hb stack size 3296\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 6.06067156791687, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/linefit-ng.mpl-spork-3way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "linefit-ng", "tag": "linefit", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:42:18.010519", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n67 warmup runs completed\nlinefit\ntime 0.0782s\ntime 0.0751s\ntime 0.0739s\ntime 0.0741s\ntime 0.0725s\n\naverage 0.0747s\nminimum 0.0725s\nmaximum 0.0782s\nstd dev 0.0021s\ntotal   0.3737s\nend-to-end 0.3740s\n======== Runtime Stats ========\nnum spawns        225045\n  eager           196219 (87%)\n  at heartbeat    28826 (13%)\n\nnum heartbeats    46141\n  skipped         0 (0%)\n\nspawns / hb       4.88\n  eager           4.25\n  at heartbeat    0.62\n\nnum steals        9023\n\nmax hb stack walk 18\nmax hb stack size 2328\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 5.969654321670532, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/wc-ng.mpl-spork-2way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -infile ../inputs/words256.txt  -repeat 5 -warmup 5", "args": "-infile ../inputs/words256.txt", "_old_affinity": "set-affinity affinity-base 0", "bench": "wc-ng", "tag": "wc", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:42:23.992636", "stdout": "loadtime 0.033\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n71 warmup runs completed\nwc\ntime 0.0672s\ntime 0.0694s\ntime 0.0695s\ntime 0.0696s\ntime 0.0704s\n\naverage 0.0692s\nminimum 0.0672s\nmaximum 0.0704s\nstd dev 0.0012s\ntotal   0.3461s\nend-to-end 0.3464s\n======== Runtime Stats ========\nnum spawns        227997\n  eager           92917 (41%)\n  at heartbeat    135080 (59%)\n\nnum heartbeats    46033\n  skipped         0 (0%)\n\nspawns / hb       4.95\n  eager           2.02\n  at heartbeat    2.93\n\nnum steals        5274\n\nmax hb stack walk 30\nmax hb stack size 3344\n====== End Runtime Stats ======\nlines 16519936\nwords 16519936\nchars 154424832\n", "stderr": "", "elapsed": 5.598593711853027, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/wc-ng.mpl-spork-3way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -infile ../inputs/words256.txt  -repeat 5 -warmup 5", "args": "-infile ../inputs/words256.txt", "_old_affinity": "set-affinity affinity-base 0", "bench": "wc-ng", "tag": "wc", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:42:29.603166", "stdout": "loadtime 0.030\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n86 warmup runs completed\nwc\ntime 0.0614s\ntime 0.0579s\ntime 0.0550s\ntime 0.0564s\ntime 0.0581s\n\naverage 0.0578s\nminimum 0.0550s\nmaximum 0.0614s\nstd dev 0.0024s\ntotal   0.2888s\nend-to-end 0.2891s\n======== Runtime Stats ========\nnum spawns        180670\n  eager           150408 (83%)\n  at heartbeat    30262 (17%)\n\nnum heartbeats    36641\n  skipped         0 (0%)\n\nspawns / hb       4.93\n  eager           4.10\n  at heartbeat    0.83\n\nnum steals        5199\n\nmax hb stack walk 17\nmax hb stack size 2168\n====== End Runtime Stats ======\nlines 16519936\nwords 16519936\nchars 154424832\n", "stderr": "", "elapsed": 5.465416669845581, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nqueens-ng.mpl-spork-2way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -N 13  -repeat 5 -warmup 5", "args": "-N 13", "_old_affinity": "set-affinity affinity-base 0", "bench": "nqueens-ng", "tag": "nqueens", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:42:35.078332", "stdout": "N 13\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n102 warmup runs completed\ncounting number of 13x13 solutions\ntime 0.0474s\ntime 0.0481s\ntime 0.0481s\ntime 0.0503s\ntime 0.0519s\n\naverage 0.0491s\nminimum 0.0474s\nmaximum 0.0519s\nstd dev 0.0019s\ntotal   0.2457s\nend-to-end 0.2461s\n======== Runtime Stats ========\nnum spawns        151210\n  eager           59819 (40%)\n  at heartbeat    91391 (60%)\n\nnum heartbeats    31029\n  skipped         0 (0%)\n\nspawns / hb       4.87\n  eager           1.93\n  at heartbeat    2.95\n\nnum steals        5706\n\nmax hb stack walk 63\nmax hb stack size 5952\n====== End Runtime Stats ======\nresult 73712\n", "stderr": "", "elapsed": 5.437724351882935, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nqueens-ng.mpl-spork-3way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -N 13  -repeat 5 -warmup 5", "args": "-N 13", "_old_affinity": "set-affinity affinity-base 0", "bench": "nqueens-ng", "tag": "nqueens", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:42:40.525283", "stdout": "N 13\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n113 warmup runs completed\ncounting number of 13x13 solutions\ntime 0.0489s\ntime 0.0540s\ntime 0.0440s\ntime 0.0431s\ntime 0.0431s\n\naverage 0.0466s\nminimum 0.0431s\nmaximum 0.0540s\nstd dev 0.0048s\ntotal   0.2331s\nend-to-end 0.2334s\n======== Runtime Stats ========\nnum spawns        129496\n  eager           102488 (79%)\n  at heartbeat    27008 (21%)\n\nnum heartbeats    27618\n  skipped         0 (0%)\n\nspawns / hb       4.69\n  eager           3.71\n  at heartbeat    0.98\n\nnum steals        5766\n\nmax hb stack walk 36\nmax hb stack size 3360\n====== End Runtime Stats ======\nresult 73712\n", "stderr": "", "elapsed": 5.470090866088867, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/grep-ng.mpl-spork-2way-one.bin @mpl procs 72  heartbeat-tokens 5 -- EE ../inputs/words256-shuffled.txt --benchmark  -repeat 5 -warmup 5", "args": "EE ../inputs/words256-shuffled.txt --benchmark", "_old_affinity": "set-affinity affinity-base 0", "bench": "grep-ng", "tag": "grep", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:42:46.003648", "stdout": "read file in 0.0315s\nn 154424832\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n31 warmup runs completed\nrunning grep\ntime 0.1516s\ntime 0.1540s\ntime 0.1648s\ntime 0.1625s\ntime 0.1593s\n\naverage 0.1584s\nminimum 0.1516s\nmaximum 0.1648s\nstd dev 0.0056s\ntotal   0.7922s\nend-to-end 0.7925s\n======== Runtime Stats ========\nnum spawns        481924\n  eager           221269 (46%)\n  at heartbeat    260655 (54%)\n\nnum heartbeats    97440\n  skipped         0 (0%)\n\nspawns / hb       4.95\n  eager           2.27\n  at heartbeat    2.68\n\nnum steals        18584\n\nmax hb stack walk 30\nmax hb stack size 2720\n====== End Runtime Stats ======\nnum matching lines 385792\n", "stderr": "", "elapsed": 6.023849964141846, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/grep-ng.mpl-spork-3way-one.bin @mpl procs 72  heartbeat-tokens 5 -- EE ../inputs/words256-shuffled.txt --benchmark  -repeat 5 -warmup 5", "args": "EE ../inputs/words256-shuffled.txt --benchmark", "_old_affinity": "set-affinity affinity-base 0", "bench": "grep-ng", "tag": "grep", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:42:52.038079", "stdout": "read file in 0.0285s\nn 154424832\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n41 warmup runs completed\nrunning grep\ntime 0.1258s\ntime 0.1189s\ntime 0.1210s\ntime 0.1250s\ntime 0.1207s\n\naverage 0.1223s\nminimum 0.1189s\nmaximum 0.1258s\nstd dev 0.0030s\ntotal   0.6115s\nend-to-end 0.6119s\n======== Runtime Stats ========\nnum spawns        361823\n  eager           291368 (81%)\n  at heartbeat    70455 (19%)\n\nnum heartbeats    73340\n  skipped         0 (0%)\n\nspawns / hb       4.93\n  eager           3.97\n  at heartbeat    0.96\n\nnum steals        17277\n\nmax hb stack walk 19\nmax hb stack size 2352\n====== End Runtime Stats ======\nnum matching lines 385792\n", "stderr": "", "elapsed": 5.916006803512573, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bignum-add-ng.mpl-spork-2way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "bignum-add-ng", "tag": "bignum-add", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:42:57.965862", "stdout": "n 100000000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n100 warmup runs completed\nbignum add\ntime 0.0507s\ntime 0.0493s\ntime 0.0507s\ntime 0.0479s\ntime 0.0509s\n\naverage 0.0499s\nminimum 0.0479s\nmaximum 0.0509s\nstd dev 0.0013s\ntotal   0.2496s\nend-to-end 0.2499s\n======== Runtime Stats ========\nnum spawns        152356\n  eager           63231 (42%)\n  at heartbeat    89125 (58%)\n\nnum heartbeats    30694\n  skipped         0 (0%)\n\nspawns / hb       4.96\n  eager           2.06\n  at heartbeat    2.90\n\nnum steals        9949\n\nmax hb stack walk 29\nmax hb stack size 3040\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 5.4251389503479, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bignum-add-ng.mpl-spork-3way-one.bin @mpl procs 72  heartbeat-tokens 5 -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "bignum-add-ng", "tag": "bignum-add", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:43:03.402373", "stdout": "n 100000000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n137 warmup runs completed\nbignum add\ntime 0.0418s\ntime 0.0358s\ntime 0.0361s\ntime 0.0363s\ntime 0.0361s\n\naverage 0.0372s\nminimum 0.0358s\nmaximum 0.0418s\nstd dev 0.0026s\ntotal   0.1862s\nend-to-end 0.1865s\n======== Runtime Stats ========\nnum spawns        110281\n  eager           88479 (80%)\n  at heartbeat    21802 (20%)\n\nnum heartbeats    22223\n  skipped         0 (0%)\n\nspawns / hb       4.96\n  eager           3.98\n  at heartbeat    0.98\n\nnum steals        9346\n\nmax hb stack walk 18\nmax hb stack size 2176\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 5.3783793449401855, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/suffix-array-ng.mpl-spork-2way-one.bin @mpl procs 72  heartbeat-tokens 5 -- --benchmark -N 10000000  -repeat 5 -warmup 5", "args": "--benchmark -N 10000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "suffix-array-ng", "tag": "suffix-array", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:43:08.790319", "stdout": "N 10000000\ngenerated input in 0.1966s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\n28 warmup runs completed\nrunning suffix array\navgLen is 2\nnumGroups is 11657\ntime 0.1717s\navgLen is 2\nnumGroups is 11657\ntime 0.1675s\navgLen is 2\nnumGroups is 11657\ntime 0.1801s\navgLen is 2\nnumGroups is 11657\ntime 0.1738s\navgLen is 2\nnumGroups is 11657\ntime 0.1733s\n\naverage 0.1733s\nminimum 0.1675s\nmaximum 0.1801s\nstd dev 0.0046s\ntotal   0.8664s\nend-to-end 0.8668s\n======== Runtime Stats ========\nnum spawns        352790\n  eager           159545 (45%)\n  at heartbeat    193245 (55%)\n\nnum heartbeats    92924\n  skipped         0 (0%)\n\nspawns / hb       3.80\n  eager           1.72\n  at heartbeat    2.08\n\nnum steals        43924\n\nmax hb stack walk 26\nmax hb stack size 2832\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 6.429703950881958, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/suffix-array-ng.mpl-spork-3way-one.bin @mpl procs 72  heartbeat-tokens 5 -- --benchmark -N 10000000  -repeat 5 -warmup 5", "args": "--benchmark -N 10000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "suffix-array-ng", "tag": "suffix-array", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:43:15.229386", "stdout": "N 10000000\ngenerated input in 0.1201s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\n42 warmup runs completed\nrunning suffix array\navgLen is 2\nnumGroups is 11657\ntime 0.1112s\navgLen is 2\nnumGroups is 11657\ntime 0.1097s\navgLen is 2\nnumGroups is 11657\ntime 0.1114s\navgLen is 2\nnumGroups is 11657\ntime 0.1103s\navgLen is 2\nnumGroups is 11657\ntime 0.1110s\n\naverage 0.1107s\nminimum 0.1097s\nmaximum 0.1114s\nstd dev 0.0007s\ntotal   0.5536s\nend-to-end 0.5541s\n======== Runtime Stats ========\nnum spawns        200347\n  eager           172794 (86%)\n  at heartbeat    27553 (14%)\n\nnum heartbeats    61076\n  skipped         0 (0%)\n\nspawns / hb       3.28\n  eager           2.83\n  at heartbeat    0.45\n\nnum steals        41065\n\nmax hb stack walk 24\nmax hb stack size 2792\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 5.889531373977661, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/triangle-count-ng.mpl-spork-2way-one.bin @mpl procs 72  heartbeat-tokens 5 -- ../inputs/rmat-1M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-1M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "triangle-count-ng", "tag": "triangle-count", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-spork-2way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:43:21.130527", "stdout": "read file in 0.0322s\nparsed graph in 0.0194s\nnum vertices: 1048576\nnum edges: 19602538\nparity check in 0.0062s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n18 warmup runs completed\nrunning tc: \ntime 0.2830s\ntime 0.2774s\ntime 0.2786s\ntime 0.3047s\ntime 0.3244s\n\naverage 0.2936s\nminimum 0.2774s\nmaximum 0.3244s\nstd dev 0.0205s\ntotal   1.4682s\nend-to-end 1.4688s\n======== Runtime Stats ========\nnum spawns        956590\n  eager           404418 (42%)\n  at heartbeat    552172 (58%)\n\nnum heartbeats    191880\n  skipped         0 (0%)\n\nspawns / hb       4.99\n  eager           2.11\n  at heartbeat    2.88\n\nnum steals        7412\n\nmax hb stack walk 80\nmax hb stack size 4256\n====== End Runtime Stats ======\nnum-triangles = 451600\n", "stderr": "", "elapsed": 7.011085033416748, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/triangle-count-ng.mpl-spork-3way-one.bin @mpl procs 72  heartbeat-tokens 5 -- ../inputs/rmat-1M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-1M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "triangle-count-ng", "tag": "triangle-count", "affinity": "", "split": "3way", "grain": "one", "config": "mpl-spork-3way-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:43:28.154142", "stdout": "read file in 0.0342s\nparsed graph in 0.0197s\nnum vertices: 1048576\nnum edges: 19602538\nparity check in 0.0064s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n18 warmup runs completed\nrunning tc: \ntime 0.2709s\ntime 0.2944s\ntime 0.2878s\ntime 0.2690s\ntime 0.2842s\n\naverage 0.2813s\nminimum 0.2690s\nmaximum 0.2944s\nstd dev 0.0109s\ntotal   1.4063s\nend-to-end 1.4065s\n======== Runtime Stats ========\nnum spawns        937238\n  eager           750749 (80%)\n  at heartbeat    186489 (20%)\n\nnum heartbeats    188061\n  skipped         0 (0%)\n\nspawns / hb       4.98\n  eager           3.99\n  at heartbeat    0.99\n\nnum steals        7569\n\nmax hb stack walk 70\nmax hb stack size 5816\n====== End Runtime Stats ======\nnum-triangles = 451600\n", "stderr": "", "elapsed": 6.89110255241394, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bfs.mpl-spork-manual.bin @mpl procs 72  -- ../inputs/rmat-10M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-10M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "bfs", "tag": "bfs", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:43:35.057379", "stdout": "read file in 0.2359s\nparsed graph in 0.1588s\nnum vertices: 16777216\nnum edges: 198731752\nparity check in 0.0582s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nsparse 0.0001\nsparse 0.0014\ndense  0.0648\ndense  0.2136\ndense  0.0274\ndense  0.0163\nsparse 0.0049\nsparse 0.0039\nsparse 0.0021\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0014\ndense  0.0602\ndense  0.0434\ndense  0.0268\ndense  0.0154\nsparse 0.0049\nsparse 0.0041\nsparse 0.0021\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0013\ndense  0.0814\ndense  0.0376\ndense  0.0193\ndense  0.0104\nsparse 0.0046\nsparse 0.0042\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0010\ndense  0.0541\ndense  0.0356\ndense  0.0215\ndense  0.0110\nsparse 0.0045\nsparse 0.0039\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0013\ndense  0.0555\ndense  0.0357\ndense  0.0209\ndense  0.0095\nsparse 0.0044\nsparse 0.0042\nsparse 0.0020\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0013\ndense  0.0548\ndense  0.0355\ndense  0.0208\ndense  0.0100\nsparse 0.0056\nsparse 0.0040\nsparse 0.0024\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0013\ndense  0.0566\ndense  0.0360\ndense  0.0196\ndense  0.0096\nsparse 0.0044\nsparse 0.0041\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0010\ndense  0.0555\ndense  0.0361\ndense  0.0210\ndense  0.0105\nsparse 0.0053\nsparse 0.0041\nsparse 0.0027\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0011\ndense  0.0563\ndense  0.0353\ndense  0.0236\ndense  0.0097\nsparse 0.0050\nsparse 0.0040\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0011\ndense  0.0558\ndense  0.0360\ndense  0.0213\ndense  0.0389\nsparse 0.0043\nsparse 0.0041\nsparse 0.0024\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0013\ndense  0.0547\ndense  0.0386\ndense  0.0216\ndense  0.0098\nsparse 0.0043\nsparse 0.0040\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0011\ndense  0.0547\ndense  0.0365\ndense  0.0204\ndense  0.0099\nsparse 0.0043\nsparse 0.0040\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0554\ndense  0.0382\ndense  0.0199\ndense  0.0098\nsparse 0.0044\nsparse 0.0040\nsparse 0.0021\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0552\ndense  0.0357\ndense  0.0210\ndense  0.0101\nsparse 0.0048\nsparse 0.0039\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0010\ndense  0.0572\ndense  0.0358\ndense  0.0209\ndense  0.0105\nsparse 0.0050\nsparse 0.0041\nsparse 0.0023\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0606\ndense  0.0378\ndense  0.0196\ndense  0.0109\nsparse 0.0054\nsparse 0.0041\nsparse 0.0023\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0574\ndense  0.0384\ndense  0.0211\ndense  0.0101\nsparse 0.0047\nsparse 0.0040\nsparse 0.0021\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0585\ndense  0.0756\ndense  0.0476\ndense  0.0094\nsparse 0.0044\nsparse 0.0040\nsparse 0.0027\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0556\ndense  0.0352\ndense  0.0202\ndense  0.0096\nsparse 0.0044\nsparse 0.0041\nsparse 0.0022\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0009\ndense  0.0546\ndense  0.0367\ndense  0.0197\ndense  0.0094\nsparse 0.0049\nsparse 0.0043\nsparse 0.0037\nsparse 0.0004\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0011\ndense  0.0565\ndense  0.0362\ndense  0.0205\ndense  0.0097\nsparse 0.0045\nsparse 0.0041\nsparse 0.0020\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0545\ndense  0.0355\ndense  0.0201\ndense  0.0105\nsparse 0.0046\nsparse 0.0040\nsparse 0.0023\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0549\ndense  0.0377\ndense  0.0196\ndense  0.0100\nsparse 0.0045\nsparse 0.0039\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0011\ndense  0.0744\ndense  0.0361\ndense  0.0205\ndense  0.0104\nsparse 0.0048\nsparse 0.0039\nsparse 0.0024\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0010\ndense  0.0562\ndense  0.0360\ndense  0.0200\ndense  0.0103\nsparse 0.0049\nsparse 0.0041\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0552\ndense  0.0348\ndense  0.0203\ndense  0.0097\nsparse 0.0044\nsparse 0.0039\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0009\ndense  0.0560\ndense  0.0351\ndense  0.0202\ndense  0.0099\nsparse 0.0047\nsparse 0.0042\nsparse 0.0024\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0013\ndense  0.0542\ndense  0.0362\ndense  0.0215\ndense  0.0098\nsparse 0.0049\nsparse 0.0041\nsparse 0.0024\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0546\ndense  0.0376\ndense  0.0211\ndense  0.0105\nsparse 0.0045\nsparse 0.0042\nsparse 0.0023\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0009\ndense  0.0539\ndense  0.0350\ndense  0.0208\ndense  0.0095\nsparse 0.0045\nsparse 0.0040\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0566\ndense  0.0373\ndense  0.0234\ndense  0.0106\nsparse 0.0044\nsparse 0.0040\nsparse 0.0038\nsparse 0.0004\nsparse 0.0000\nsparse 0.0000\n31 warmup runs completed\nrunning bfs\nsparse 0.0001\nsparse 0.0013\ndense  0.0544\ndense  0.0613\ndense  0.0202\ndense  0.0105\nsparse 0.0060\nsparse 0.0040\nsparse 0.0021\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 0.1722s\nsparse 0.0001\nsparse 0.0012\ndense  0.0700\ndense  0.0350\ndense  0.0201\ndense  0.0099\nsparse 0.0053\nsparse 0.0040\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 0.1601s\nsparse 0.0001\nsparse 0.0011\ndense  0.0545\ndense  0.0359\ndense  0.0225\ndense  0.0098\nsparse 0.0046\nsparse 0.0040\nsparse 0.0023\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\ntime 0.1477s\nsparse 0.0001\nsparse 0.0010\ndense  0.0559\ndense  0.0354\ndense  0.0213\ndense  0.0099\nsparse 0.0042\nsparse 0.0041\nsparse 0.0023\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 0.1469s\nsparse 0.0001\nsparse 0.0013\ndense  0.0529\ndense  0.0370\ndense  0.0217\ndense  0.0141\nsparse 0.0059\nsparse 0.0043\nsparse 0.0021\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 0.1507s\n\naverage 0.1555s\nminimum 0.1469s\nmaximum 0.1722s\nstd dev 0.0107s\ntotal   0.7776s\nend-to-end 0.7777s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nvisited 16037483\nmax dist 11\n", "stderr": "", "elapsed": 6.7874915599823, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/delaunay.mpl-spork-manual.bin @mpl procs 72  -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "delaunay", "tag": "delaunay", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:43:41.857823", "stdout": "parsed input points in 1.9398s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n10 warmup runs completed\ndelaunay\ntime 0.5479s\ntime 0.5453s\ntime 0.5493s\ntime 0.5468s\ntime 0.5530s\n\naverage 0.5485s\nminimum 0.5453s\nmaximum 0.5530s\nstd dev 0.0029s\ntotal   2.7424s\nend-to-end 2.7427s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnum rounds 220\n\nto see output, use -output and -resolution arguments\nfor example: delaunay -n 1000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 10.378897905349731, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/msort.mpl-spork-manual.bin @mpl procs 72  -- -N 20000000  -repeat 5 -warmup 5", "args": "-N 20000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "msort", "tag": "msort", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:43:52.248100", "stdout": "N 20000000\ngenerating 20000000 random integers\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n56 warmup runs completed\nrunning mergesort\ntime 0.0867s\ntime 0.0876s\ntime 0.0857s\ntime 0.0861s\ntime 0.0856s\n\naverage 0.0863s\nminimum 0.0856s\nmaximum 0.0876s\nstd dev 0.0008s\ntotal   0.4317s\nend-to-end 0.4323s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\ninput [3647203, 1410947, 1439064, 11900373, 11111963, 1483844, 9953235, ..., 11557991]\nresult [0, 0, 1, 1, 1, 2, 3, ..., 19999999]\n", "stderr": "", "elapsed": 5.616107225418091, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/primes.mpl-spork-manual.bin @mpl procs 72  -- -N 100000000  -repeat 5 -warmup 5", "args": "-N 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "primes", "tag": "primes", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:43:57.875328", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n37 warmup runs completed\ngenerating primes up to 100000000\ntime 0.1333s\ntime 0.1316s\ntime 0.1279s\ntime 0.1341s\ntime 0.1427s\n\naverage 0.1339s\nminimum 0.1279s\nmaximum 0.1427s\nstd dev 0.0054s\ntotal   0.6696s\nend-to-end 0.6700s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnumber of primes 5761455\nresult [2, 3, 5, 7, 11, 13, 17, ..., 99999989]\n", "stderr": "", "elapsed": 5.848844528198242, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/sparse-mxv-csr.mpl-spork-manual.bin @mpl procs 72  -- -n 250000000  -repeat 5 -warmup 5", "args": "-n 250000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "sparse-mxv-csr", "tag": "sparse-mxv-csr", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:44:03.734917", "stdout": "n 250000000\nrow-len 100\n(num rows: 2500000)\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n70 warmup runs completed\nsparse-mxv\ntime 0.0688s\ntime 0.0695s\ntime 0.0688s\ntime 0.0680s\ntime 0.0688s\n\naverage 0.0688s\nminimum 0.0680s\nmaximum 0.0695s\nstd dev 0.0005s\ntotal   0.3439s\nend-to-end 0.3443s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 6.409197807312012, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nearest-nbrs.mpl-spork-manual.bin @mpl procs 72  -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "nearest-nbrs", "tag": "nearest-nbrs", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:44:10.154922", "stdout": "parsed input points in 0.1387s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nbuilt quadtree in 0.0311s\nfound all neighbors in 0.0225s\nbuilt quadtree in 0.0268s\nfound all neighbors in 0.0220s\nbuilt quadtree in 0.0267s\nfound all neighbors in 0.0220s\nbuilt quadtree in 0.0251s\nfound all neighbors in 0.0224s\nbuilt quadtree in 0.0241s\nfound all neighbors in 0.0205s\nbuilt quadtree in 0.0216s\nfound all neighbors in 0.0202s\nbuilt quadtree in 0.0219s\nfound all neighbors in 0.0204s\nbuilt quadtree in 0.0200s\nfound all neighbors in 0.0213s\nbuilt quadtree in 0.0209s\nfound all neighbors in 0.0211s\nbuilt quadtree in 0.0223s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0214s\nfound all neighbors in 0.0225s\nbuilt quadtree in 0.0226s\nfound all neighbors in 0.0214s\nbuilt quadtree in 0.0211s\nfound all neighbors in 0.0214s\nbuilt quadtree in 0.0220s\nfound all neighbors in 0.0211s\nbuilt quadtree in 0.0243s\nfound all neighbors in 0.0204s\nbuilt quadtree in 0.0242s\nfound all neighbors in 0.0198s\nbuilt quadtree in 0.0206s\nfound all neighbors in 0.0213s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0203s\nbuilt quadtree in 0.0213s\nfound all neighbors in 0.0202s\nbuilt quadtree in 0.0215s\nfound all neighbors in 0.0225s\nbuilt quadtree in 0.0230s\nfound all neighbors in 0.0218s\nbuilt quadtree in 0.0254s\nfound all neighbors in 0.0204s\nbuilt quadtree in 0.0238s\nfound all neighbors in 0.0210s\nbuilt quadtree in 0.0253s\nfound all neighbors in 0.0206s\nbuilt quadtree in 0.0213s\nfound all neighbors in 0.0225s\nbuilt quadtree in 0.0205s\nfound all neighbors in 0.0221s\nbuilt quadtree in 0.0217s\nfound all neighbors in 0.0204s\nbuilt quadtree in 0.0211s\nfound all neighbors in 0.0216s\nbuilt quadtree in 0.0212s\nfound all neighbors in 0.0208s\nbuilt quadtree in 0.0202s\nfound all neighbors in 0.0202s\nbuilt quadtree in 0.0206s\nfound all neighbors in 0.0211s\nbuilt quadtree in 0.0207s\nfound all neighbors in 0.0204s\nbuilt quadtree in 0.0215s\nfound all neighbors in 0.0207s\nbuilt quadtree in 0.0204s\nfound all neighbors in 0.0204s\nbuilt quadtree in 0.0214s\nfound all neighbors in 0.0205s\nbuilt quadtree in 0.0225s\nfound all neighbors in 0.0215s\nbuilt quadtree in 0.0216s\nfound all neighbors in 0.0208s\nbuilt quadtree in 0.0201s\nfound all neighbors in 0.0203s\nbuilt quadtree in 0.0213s\nfound all neighbors in 0.0207s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0207s\nbuilt quadtree in 0.0216s\nfound all neighbors in 0.0206s\nbuilt quadtree in 0.0210s\nfound all neighbors in 0.0201s\nbuilt quadtree in 0.0207s\nfound all neighbors in 0.0206s\nbuilt quadtree in 0.0215s\nfound all neighbors in 0.0283s\nbuilt quadtree in 0.0239s\nfound all neighbors in 0.0203s\nbuilt quadtree in 0.0237s\nfound all neighbors in 0.0234s\nbuilt quadtree in 0.0221s\nfound all neighbors in 0.0230s\nbuilt quadtree in 0.0215s\nfound all neighbors in 0.0240s\nbuilt quadtree in 0.0216s\nfound all neighbors in 0.0246s\nbuilt quadtree in 0.0204s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0211s\nfound all neighbors in 0.0206s\nbuilt quadtree in 0.0209s\nfound all neighbors in 0.0214s\nbuilt quadtree in 0.0206s\nfound all neighbors in 0.0209s\nbuilt quadtree in 0.0230s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0211s\nfound all neighbors in 0.0203s\nbuilt quadtree in 0.0212s\nfound all neighbors in 0.0210s\nbuilt quadtree in 0.0235s\nfound all neighbors in 0.0213s\nbuilt quadtree in 0.0212s\nfound all neighbors in 0.0203s\nbuilt quadtree in 0.0209s\nfound all neighbors in 0.0209s\nbuilt quadtree in 0.0224s\nfound all neighbors in 0.0207s\nbuilt quadtree in 0.0227s\nfound all neighbors in 0.0202s\nbuilt quadtree in 0.0209s\nfound all neighbors in 0.0207s\nbuilt quadtree in 0.0206s\nfound all neighbors in 0.0204s\nbuilt quadtree in 0.0207s\nfound all neighbors in 0.0209s\nbuilt quadtree in 0.0236s\nfound all neighbors in 0.0224s\nbuilt quadtree in 0.0217s\nfound all neighbors in 0.0202s\nbuilt quadtree in 0.0213s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0232s\nfound all neighbors in 0.0236s\nbuilt quadtree in 0.0219s\nfound all neighbors in 0.0210s\nbuilt quadtree in 0.0231s\nfound all neighbors in 0.0215s\nbuilt quadtree in 0.0209s\nfound all neighbors in 0.0199s\nbuilt quadtree in 0.0269s\nfound all neighbors in 0.0205s\nbuilt quadtree in 0.0212s\nfound all neighbors in 0.0218s\nbuilt quadtree in 0.0233s\nfound all neighbors in 0.0227s\nbuilt quadtree in 0.0215s\nfound all neighbors in 0.0210s\nbuilt quadtree in 0.0209s\nfound all neighbors in 0.0204s\nbuilt quadtree in 0.0211s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0217s\nfound all neighbors in 0.0208s\nbuilt quadtree in 0.0221s\nfound all neighbors in 0.0202s\nbuilt quadtree in 0.0205s\nfound all neighbors in 0.0207s\nbuilt quadtree in 0.0210s\nfound all neighbors in 0.0221s\nbuilt quadtree in 0.0242s\nfound all neighbors in 0.0201s\nbuilt quadtree in 0.0213s\nfound all neighbors in 0.0200s\nbuilt quadtree in 0.0220s\nfound all neighbors in 0.0209s\nbuilt quadtree in 0.0227s\nfound all neighbors in 0.0220s\nbuilt quadtree in 0.0235s\nfound all neighbors in 0.0203s\nbuilt quadtree in 0.0236s\nfound all neighbors in 0.0203s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0206s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0214s\nbuilt quadtree in 0.0218s\nfound all neighbors in 0.0204s\nbuilt quadtree in 0.0209s\nfound all neighbors in 0.0233s\nbuilt quadtree in 0.0238s\nfound all neighbors in 0.0211s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0216s\nbuilt quadtree in 0.0213s\nfound all neighbors in 0.0236s\nbuilt quadtree in 0.0222s\nfound all neighbors in 0.0211s\nbuilt quadtree in 0.0242s\nfound all neighbors in 0.0201s\nbuilt quadtree in 0.0222s\nfound all neighbors in 0.0209s\nbuilt quadtree in 0.0210s\nfound all neighbors in 0.0229s\nbuilt quadtree in 0.0209s\nfound all neighbors in 0.0204s\nbuilt quadtree in 0.0206s\nfound all neighbors in 0.0203s\nbuilt quadtree in 0.0216s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0217s\nfound all neighbors in 0.0217s\nbuilt quadtree in 0.0236s\nfound all neighbors in 0.0228s\nbuilt quadtree in 0.0211s\nfound all neighbors in 0.0204s\nbuilt quadtree in 0.0207s\nfound all neighbors in 0.0202s\nbuilt quadtree in 0.0214s\nfound all neighbors in 0.0216s\nbuilt quadtree in 0.0224s\nfound all neighbors in 0.0200s\nbuilt quadtree in 0.0209s\nfound all neighbors in 0.0209s\nbuilt quadtree in 0.0207s\nfound all neighbors in 0.0206s\nbuilt quadtree in 0.0211s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0221s\nfound all neighbors in 0.0208s\nbuilt quadtree in 0.0214s\nfound all neighbors in 0.0208s\nbuilt quadtree in 0.0224s\nfound all neighbors in 0.0205s\nbuilt quadtree in 0.0206s\nfound all neighbors in 0.0215s\nbuilt quadtree in 0.0310s\nfound all neighbors in 0.0222s\nbuilt quadtree in 0.0251s\nfound all neighbors in 0.0211s\n116 warmup runs completed\nrunning nearest neighbors\nbuilt quadtree in 0.0212s\nfound all neighbors in 0.0211s\ntime 0.0424s\nbuilt quadtree in 0.0213s\nfound all neighbors in 0.0213s\ntime 0.0428s\nbuilt quadtree in 0.0233s\nfound all neighbors in 0.0231s\ntime 0.0465s\nbuilt quadtree in 0.0244s\nfound all neighbors in 0.0235s\ntime 0.0480s\nbuilt quadtree in 0.0210s\nfound all neighbors in 0.0205s\ntime 0.0417s\n\naverage 0.0443s\nminimum 0.0417s\nmaximum 0.0480s\nstd dev 0.0028s\ntotal   0.2214s\nend-to-end 0.2214s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nresult [811533, 563604, 253596, 55855, 233544, 569064, 562970, 742080, 12442, 171262, 428737, ..., 540308]\nto see output, use -output and -resolution arguments\nfor example: nn -N 10000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 5.648141145706177, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/mandelbrot.mpl-spork-manual.bin @mpl procs 72  -- -resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30  -repeat 5 -warmup 5", "args": "-resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30", "_old_affinity": "set-affinity affinity-base 0", "bench": "mandelbrot", "tag": "mandelbrot", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:44:15.814830", "stdout": "max-iter 30\ndiverge-thresh 2\nresolution 2500\ntop 2\nbot ~2\nleft ~3\nright 1\nh 10000\nw 10000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n151 warmup runs completed\nrunning mandelbrot\ntime 0.0332s\ntime 0.0325s\ntime 0.0327s\ntime 0.0323s\ntime 0.0330s\n\naverage 0.0327s\nminimum 0.0323s\nmaximum 0.0332s\nstd dev 0.0004s\ntotal   0.1637s\nend-to-end 0.1638s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nuse -output XXX to see result\n", "stderr": "", "elapsed": 5.246929407119751, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/linefit.mpl-spork-manual.bin @mpl procs 72  -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "linefit", "tag": "linefit", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:44:21.072283", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n151 warmup runs completed\nlinefit\ntime 0.0305s\ntime 0.0306s\ntime 0.0316s\ntime 0.0324s\ntime 0.0308s\n\naverage 0.0312s\nminimum 0.0305s\nmaximum 0.0324s\nstd dev 0.0008s\ntotal   0.1560s\nend-to-end 0.1563s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 5.582962512969971, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/wc.mpl-spork-manual.bin @mpl procs 72  -- -infile ../inputs/words256.txt  -repeat 5 -warmup 5", "args": "-infile ../inputs/words256.txt", "_old_affinity": "set-affinity affinity-base 0", "bench": "wc", "tag": "wc", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:44:26.664368", "stdout": "loadtime 0.034\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n342 warmup runs completed\nwc\ntime 0.0146s\ntime 0.0144s\ntime 0.0146s\ntime 0.0146s\ntime 0.0143s\n\naverage 0.0145s\nminimum 0.0143s\nmaximum 0.0146s\nstd dev 0.0001s\ntotal   0.0726s\nend-to-end 0.0728s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nlines 16519936\nwords 16519936\nchars 154424832\n", "stderr": "", "elapsed": 5.189521074295044, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nqueens.mpl-spork-manual.bin @mpl procs 72  -- -N 13  -repeat 5 -warmup 5", "args": "-N 13", "_old_affinity": "set-affinity affinity-base 0", "bench": "nqueens", "tag": "nqueens", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:44:31.864752", "stdout": "N 13\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n92 warmup runs completed\ncounting number of 13x13 solutions\ntime 0.0606s\ntime 0.0570s\ntime 0.0543s\ntime 0.0613s\ntime 0.0551s\n\naverage 0.0577s\nminimum 0.0543s\nmaximum 0.0613s\nstd dev 0.0032s\ntotal   0.2884s\nend-to-end 0.2888s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nresult 73712\n", "stderr": "", "elapsed": 5.444672107696533, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/grep.mpl-spork-manual.bin @mpl procs 72  -- EE ../inputs/words256-shuffled.txt --benchmark  -repeat 5 -warmup 5", "args": "EE ../inputs/words256-shuffled.txt --benchmark", "_old_affinity": "set-affinity affinity-base 0", "bench": "grep", "tag": "grep", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:44:37.319894", "stdout": "read file in 0.0278s\nn 154424832\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n106 warmup runs completed\nrunning grep\ntime 0.0489s\ntime 0.0482s\ntime 0.0463s\ntime 0.0466s\ntime 0.0460s\n\naverage 0.0472s\nminimum 0.0460s\nmaximum 0.0489s\nstd dev 0.0013s\ntotal   0.2360s\nend-to-end 0.2364s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnum matching lines 385792\n", "stderr": "", "elapsed": 5.47839617729187, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bignum-add.mpl-spork-manual.bin @mpl procs 72  -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "bignum-add", "tag": "bignum-add", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:44:42.809027", "stdout": "n 100000000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n70 warmup runs completed\nbignum add\ntime 0.0701s\ntime 0.0707s\ntime 0.0705s\ntime 0.0713s\ntime 0.0704s\n\naverage 0.0706s\nminimum 0.0701s\nmaximum 0.0713s\nstd dev 0.0004s\ntotal   0.3530s\nend-to-end 0.3534s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 5.499567747116089, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/suffix-array.mpl-spork-manual.bin @mpl procs 72  -- --benchmark -N 10000000  -repeat 5 -warmup 5", "args": "--benchmark -N 10000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "suffix-array", "tag": "suffix-array", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:44:48.319153", "stdout": "N 10000000\ngenerated input in 0.1242s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\n42 warmup runs completed\nrunning suffix array\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 0.1098s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 0.1087s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 0.1085s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 0.1076s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 0.1081s\n\naverage 0.1085s\nminimum 0.1076s\nmaximum 0.1098s\nstd dev 0.0008s\ntotal   0.5426s\nend-to-end 0.5428s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 5.886023044586182, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/triangle-count.mpl-spork-manual.bin @mpl procs 72  -- ../inputs/rmat-1M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-1M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "triangle-count", "tag": "triangle-count", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl-spork-manual", "cwd": "mpl", "procs": "72", "compiler": "mpl-spork", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:44:54.216681", "stdout": "read file in 0.0352s\nparsed graph in 0.0197s\nnum vertices: 1048576\nnum edges: 19602538\nparity check in 0.0063s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n40 warmup runs completed\nrunning tc: \ntime 0.1340s\ntime 0.1250s\ntime 0.1179s\ntime 0.1322s\ntime 0.1201s\n\naverage 0.1258s\nminimum 0.1179s\nmaximum 0.1340s\nstd dev 0.0071s\ntotal   0.6292s\nend-to-end 0.6295s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnum-triangles = 511733\n", "stderr": "", "elapsed": 5.988972902297974, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bfs-ng.mpl-hb-one.bin @mpl procs 72  -- ../inputs/rmat-10M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-10M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "bfs-ng", "tag": "bfs", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:45:00.217308", "stdout": "read file in 0.2526s\nparsed graph in 0.1664s\nnum vertices: 16777216\nnum edges: 198731752\nparity check in 0.0422s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nsparse 0.0006\nsparse 0.0051\ndense  0.0999\ndense  0.0755\ndense  0.0559\ndense  0.0353\nsparse 0.0127\nsparse 0.0042\nsparse 0.0012\nsparse 0.0007\nsparse 0.0001\nsparse 0.0000\nsparse 0.0008\nsparse 0.0034\ndense  0.1057\ndense  0.0763\ndense  0.0517\ndense  0.0376\nsparse 0.0187\nsparse 0.0042\nsparse 0.0013\nsparse 0.0006\nsparse 0.0000\nsparse 0.0000\nsparse 0.0008\nsparse 0.0034\ndense  0.0797\ndense  0.0697\ndense  0.0506\ndense  0.0312\nsparse 0.0117\nsparse 0.0042\nsparse 0.0016\nsparse 0.0005\nsparse 0.0003\nsparse 0.0000\nsparse 0.0007\nsparse 0.0035\ndense  0.0808\ndense  0.0668\ndense  0.0515\ndense  0.0378\nsparse 0.0167\nsparse 0.0049\nsparse 0.0008\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\nsparse 0.0006\nsparse 0.0046\ndense  0.0768\ndense  0.0653\ndense  0.0537\ndense  0.0534\nsparse 0.0126\nsparse 0.0036\nsparse 0.0011\nsparse 0.0004\nsparse 0.0001\nsparse 0.0000\nsparse 0.0008\nsparse 0.0043\ndense  0.0772\ndense  0.0665\ndense  0.0487\ndense  0.0326\nsparse 0.0141\nsparse 0.0052\nsparse 0.0018\nsparse 0.0076\nsparse 0.0001\nsparse 0.0000\nsparse 0.0008\nsparse 0.0049\ndense  0.0767\ndense  0.0660\ndense  0.0507\ndense  0.0309\nsparse 0.0122\nsparse 0.0043\nsparse 0.0016\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\nsparse 0.0003\nsparse 0.0037\ndense  0.0777\ndense  0.0676\ndense  0.0545\ndense  0.0329\nsparse 0.0118\nsparse 0.0051\nsparse 0.0015\nsparse 0.0006\nsparse 0.0001\nsparse 0.0000\nsparse 0.0007\nsparse 0.0040\ndense  0.0861\ndense  0.0645\ndense  0.0487\ndense  0.0512\nsparse 0.0142\nsparse 0.0043\nsparse 0.0020\nsparse 0.0004\nsparse 0.0003\nsparse 0.0001\nsparse 0.0008\nsparse 0.0038\ndense  0.0797\ndense  0.0818\ndense  0.0496\ndense  0.0320\nsparse 0.0135\nsparse 0.0043\nsparse 0.0015\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0008\nsparse 0.0043\ndense  0.0832\ndense  0.0657\ndense  0.0499\ndense  0.0324\nsparse 0.0120\nsparse 0.0048\nsparse 0.0015\nsparse 0.0006\nsparse 0.0001\nsparse 0.0000\nsparse 0.0005\nsparse 0.0044\ndense  0.0770\ndense  0.0664\ndense  0.0505\ndense  0.0324\nsparse 0.0133\nsparse 0.0046\nsparse 0.0015\nsparse 0.0006\nsparse 0.0001\nsparse 0.0000\nsparse 0.0010\nsparse 0.0045\ndense  0.0804\ndense  0.0647\ndense  0.0483\ndense  0.0324\nsparse 0.0122\nsparse 0.0048\nsparse 0.0015\nsparse 0.0004\nsparse 0.0002\nsparse 0.0000\nsparse 0.0007\nsparse 0.0040\ndense  0.0812\ndense  0.0628\ndense  0.0551\ndense  0.0574\nsparse 0.0128\nsparse 0.0046\nsparse 0.0025\nsparse 0.0006\nsparse 0.0001\nsparse 0.0000\nsparse 0.0007\nsparse 0.0044\ndense  0.0814\ndense  0.0664\ndense  0.0499\ndense  0.0313\nsparse 0.0117\nsparse 0.0051\nsparse 0.0016\nsparse 0.0007\nsparse 0.0000\nsparse 0.0000\nsparse 0.0007\nsparse 0.0039\ndense  0.0790\ndense  0.0689\ndense  0.0502\ndense  0.0355\nsparse 0.0133\nsparse 0.0039\nsparse 0.0011\nsparse 0.0007\nsparse 0.0001\nsparse 0.0000\n16 warmup runs completed\nrunning bfs\nsparse 0.0010\nsparse 0.0041\ndense  0.0832\ndense  0.0680\ndense  0.0543\ndense  0.0350\nsparse 0.0128\nsparse 0.0046\nsparse 0.0019\nsparse 0.0006\nsparse 0.0001\nsparse 0.0000\ntime 0.3095s\nsparse 0.0009\nsparse 0.0031\ndense  0.0795\ndense  0.0679\ndense  0.0494\ndense  0.0543\nsparse 0.0159\nsparse 0.0049\nsparse 0.0011\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\ntime 0.3207s\nsparse 0.0009\nsparse 0.0045\ndense  0.0812\ndense  0.0878\ndense  0.0497\ndense  0.0334\nsparse 0.0118\nsparse 0.0041\nsparse 0.0013\nsparse 0.0005\nsparse 0.0000\nsparse 0.0000\ntime 0.3190s\nsparse 0.0006\nsparse 0.0038\ndense  0.0814\ndense  0.0633\ndense  0.0495\ndense  0.0345\nsparse 0.0129\nsparse 0.0042\nsparse 0.0016\nsparse 0.0008\nsparse 0.0004\nsparse 0.0001\ntime 0.2958s\nsparse 0.0009\nsparse 0.0090\ndense  0.0798\ndense  0.0654\ndense  0.0505\ndense  0.0336\nsparse 0.0137\nsparse 0.0050\nsparse 0.0014\nsparse 0.0009\nsparse 0.0001\nsparse 0.0000\ntime 0.3056s\n\naverage 0.3101s\nminimum 0.2958s\nmaximum 0.3207s\nstd dev 0.0102s\ntotal   1.5506s\nend-to-end 1.5506s\n======== Runtime Stats ========\nnum spawns        999200\n  eager           395684 (40%)\n  at heartbeat    603516 (60%)\n\nnum heartbeats    168321\n  skipped         0 (0%)\n\nspawns / hb       5.94\n  eager           2.35\n  at heartbeat    3.59\n\nnum steals        122356\n\nmax hb stack walk 47\nmax hb stack size 4168\n====== End Runtime Stats ======\nvisited 16037483\nmax dist 11\n", "stderr": "", "elapsed": 7.691814661026001, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/delaunay-ng.mpl-hb-one.bin @mpl procs 72  -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "delaunay-ng", "tag": "delaunay", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:45:07.918957", "stdout": "parsed input points in 1.8195s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n8 warmup runs completed\ndelaunay\ntime 0.7012s\ntime 0.6708s\ntime 0.6791s\ntime 0.6781s\ntime 0.6901s\n\naverage 0.6839s\nminimum 0.6708s\nmaximum 0.7012s\nstd dev 0.0119s\ntotal   3.4194s\nend-to-end 3.4196s\n======== Runtime Stats ========\nnum spawns        1634263\n  eager           1151209 (70%)\n  at heartbeat    483054 (30%)\n\nnum heartbeats    191322\n  skipped         0 (0%)\n\nspawns / hb       8.54\n  eager           6.02\n  at heartbeat    2.52\n\nnum steals        659259\n\nmax hb stack walk 40\nmax hb stack size 3816\n====== End Runtime Stats ======\nnum rounds 220\n\nto see output, use -output and -resolution arguments\nfor example: delaunay -n 1000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 11.130587339401245, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/msort-ng.mpl-hb-one.bin @mpl procs 72  -- -N 20000000  -repeat 5 -warmup 5", "args": "-N 20000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "msort-ng", "tag": "msort", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:45:19.061692", "stdout": "N 20000000\ngenerating 20000000 random integers\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n34 warmup runs completed\nrunning mergesort\ntime 0.1436s\ntime 0.1439s\ntime 0.1435s\ntime 0.1439s\ntime 0.1437s\n\naverage 0.1437s\nminimum 0.1435s\nmaximum 0.1439s\nstd dev 0.0002s\ntotal   0.7186s\nend-to-end 0.7190s\n======== Runtime Stats ========\nnum spawns        540823\n  eager           188466 (35%)\n  at heartbeat    352357 (65%)\n\nnum heartbeats    96304\n  skipped         0 (0%)\n\nspawns / hb       5.62\n  eager           1.96\n  at heartbeat    3.66\n\nnum steals        32744\n\nmax hb stack walk 67\nmax hb stack size 5056\n====== End Runtime Stats ======\ninput [3647203, 1410947, 1439064, 11900373, 11111963, 1483844, 9953235, ..., 11557991]\nresult [0, 0, 1, 1, 1, 2, 3, ..., 19999999]\n", "stderr": "", "elapsed": 5.975033521652222, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/primes-ng.mpl-hb-one.bin @mpl procs 72  -- -N 100000000  -repeat 5 -warmup 5", "args": "-N 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "primes-ng", "tag": "primes", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:45:25.048871", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n16 warmup runs completed\ngenerating primes up to 100000000\ntime 0.3221s\ntime 0.3255s\ntime 0.3203s\ntime 0.3217s\ntime 0.3222s\n\naverage 0.3224s\nminimum 0.3203s\nmaximum 0.3255s\nstd dev 0.0019s\ntotal   1.6120s\nend-to-end 1.6123s\n======== Runtime Stats ========\nnum spawns        1126878\n  eager           125599 (11%)\n  at heartbeat    1001279 (89%)\n\nnum heartbeats    216879\n  skipped         0 (0%)\n\nspawns / hb       5.20\n  eager           0.58\n  at heartbeat    4.62\n\nnum steals        27046\n\nmax hb stack walk 71\nmax hb stack size 5248\n====== End Runtime Stats ======\nnumber of primes 5761455\nresult [2, 3, 5, 7, 11, 13, 17, ..., 99999989]\n", "stderr": "", "elapsed": 7.039079427719116, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/sparse-mxv-csr-ng.mpl-hb-one.bin @mpl procs 72  -- -n 250000000  -repeat 5 -warmup 5", "args": "-n 250000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "sparse-mxv-csr-ng", "tag": "sparse-mxv-csr", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:45:32.099060", "stdout": "n 250000000\nrow-len 100\n(num rows: 2500000)\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n17 warmup runs completed\nsparse-mxv\ntime 0.2811s\ntime 0.2913s\ntime 0.2858s\ntime 0.2831s\ntime 0.2795s\n\naverage 0.2842s\nminimum 0.2795s\nmaximum 0.2913s\nstd dev 0.0047s\ntotal   1.4208s\nend-to-end 1.4211s\n======== Runtime Stats ========\nnum spawns        1010549\n  eager           72897 (7%)\n  at heartbeat    937652 (93%)\n\nnum heartbeats    198885\n  skipped         0 (0%)\n\nspawns / hb       5.08\n  eager           0.37\n  at heartbeat    4.71\n\nnum steals        8254\n\nmax hb stack walk 57\nmax hb stack size 4368\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 7.8998188972473145, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nearest-nbrs-ng.mpl-hb-one.bin @mpl procs 72  -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "nearest-nbrs-ng", "tag": "nearest-nbrs", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:45:40.011589", "stdout": "parsed input points in 0.1977s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nbuilt quadtree in 0.0358s\nfound all neighbors in 0.0288s\nbuilt quadtree in 0.0290s\nfound all neighbors in 0.0303s\nbuilt quadtree in 0.0282s\nfound all neighbors in 0.0276s\nbuilt quadtree in 0.0250s\nfound all neighbors in 0.0266s\nbuilt quadtree in 0.0247s\nfound all neighbors in 0.0272s\nbuilt quadtree in 0.0252s\nfound all neighbors in 0.0257s\nbuilt quadtree in 0.0256s\nfound all neighbors in 0.0286s\nbuilt quadtree in 0.0279s\nfound all neighbors in 0.0278s\nbuilt quadtree in 0.0239s\nfound all neighbors in 0.0266s\nbuilt quadtree in 0.0266s\nfound all neighbors in 0.0261s\nbuilt quadtree in 0.0274s\nfound all neighbors in 0.0267s\nbuilt quadtree in 0.0260s\nfound all neighbors in 0.0255s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0297s\nbuilt quadtree in 0.0276s\nfound all neighbors in 0.0264s\nbuilt quadtree in 0.0250s\nfound all neighbors in 0.0341s\nbuilt quadtree in 0.0353s\nfound all neighbors in 0.0257s\nbuilt quadtree in 0.0257s\nfound all neighbors in 0.0251s\nbuilt quadtree in 0.0260s\nfound all neighbors in 0.0255s\nbuilt quadtree in 0.0255s\nfound all neighbors in 0.0285s\nbuilt quadtree in 0.0267s\nfound all neighbors in 0.0265s\nbuilt quadtree in 0.0250s\nfound all neighbors in 0.0291s\nbuilt quadtree in 0.0251s\nfound all neighbors in 0.0259s\nbuilt quadtree in 0.0271s\nfound all neighbors in 0.0264s\nbuilt quadtree in 0.0249s\nfound all neighbors in 0.0253s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0269s\nbuilt quadtree in 0.0266s\nfound all neighbors in 0.0255s\nbuilt quadtree in 0.0257s\nfound all neighbors in 0.0267s\nbuilt quadtree in 0.0259s\nfound all neighbors in 0.0257s\nbuilt quadtree in 0.0246s\nfound all neighbors in 0.0258s\nbuilt quadtree in 0.0247s\nfound all neighbors in 0.0267s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0260s\nbuilt quadtree in 0.0275s\nfound all neighbors in 0.0252s\nbuilt quadtree in 0.0243s\nfound all neighbors in 0.0261s\nbuilt quadtree in 0.0243s\nfound all neighbors in 0.0248s\nbuilt quadtree in 0.0252s\nfound all neighbors in 0.0269s\nbuilt quadtree in 0.0273s\nfound all neighbors in 0.0248s\nbuilt quadtree in 0.0331s\nfound all neighbors in 0.0254s\nbuilt quadtree in 0.0245s\nfound all neighbors in 0.0245s\nbuilt quadtree in 0.0246s\nfound all neighbors in 0.0258s\nbuilt quadtree in 0.0290s\nfound all neighbors in 0.0255s\nbuilt quadtree in 0.0287s\nfound all neighbors in 0.0267s\nbuilt quadtree in 0.0256s\nfound all neighbors in 0.0259s\nbuilt quadtree in 0.0258s\nfound all neighbors in 0.0281s\nbuilt quadtree in 0.0278s\nfound all neighbors in 0.0254s\nbuilt quadtree in 0.0255s\nfound all neighbors in 0.0257s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0273s\nbuilt quadtree in 0.0258s\nfound all neighbors in 0.0253s\nbuilt quadtree in 0.0241s\nfound all neighbors in 0.0254s\nbuilt quadtree in 0.0240s\nfound all neighbors in 0.0265s\nbuilt quadtree in 0.0263s\nfound all neighbors in 0.0248s\nbuilt quadtree in 0.0252s\nfound all neighbors in 0.0265s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0261s\nbuilt quadtree in 0.0238s\nfound all neighbors in 0.0259s\nbuilt quadtree in 0.0260s\nfound all neighbors in 0.0250s\nbuilt quadtree in 0.0241s\nfound all neighbors in 0.0289s\nbuilt quadtree in 0.0259s\nfound all neighbors in 0.0257s\nbuilt quadtree in 0.0251s\nfound all neighbors in 0.0261s\nbuilt quadtree in 0.0253s\nfound all neighbors in 0.0258s\nbuilt quadtree in 0.0251s\nfound all neighbors in 0.0261s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0264s\nbuilt quadtree in 0.0280s\nfound all neighbors in 0.0257s\nbuilt quadtree in 0.0254s\nfound all neighbors in 0.0260s\nbuilt quadtree in 0.0252s\nfound all neighbors in 0.0262s\nbuilt quadtree in 0.0257s\nfound all neighbors in 0.0254s\nbuilt quadtree in 0.0250s\nfound all neighbors in 0.0255s\nbuilt quadtree in 0.0284s\nfound all neighbors in 0.0285s\nbuilt quadtree in 0.0248s\nfound all neighbors in 0.0272s\nbuilt quadtree in 0.0272s\nfound all neighbors in 0.0252s\nbuilt quadtree in 0.0259s\nfound all neighbors in 0.0262s\nbuilt quadtree in 0.0252s\nfound all neighbors in 0.0267s\nbuilt quadtree in 0.0270s\nfound all neighbors in 0.0254s\nbuilt quadtree in 0.0268s\nfound all neighbors in 0.0264s\nbuilt quadtree in 0.0273s\nfound all neighbors in 0.0259s\nbuilt quadtree in 0.0272s\nfound all neighbors in 0.0252s\nbuilt quadtree in 0.0360s\nfound all neighbors in 0.0274s\nbuilt quadtree in 0.0257s\nfound all neighbors in 0.0275s\nbuilt quadtree in 0.0260s\nfound all neighbors in 0.0277s\nbuilt quadtree in 0.0296s\nfound all neighbors in 0.0267s\nbuilt quadtree in 0.0281s\nfound all neighbors in 0.0256s\nbuilt quadtree in 0.0272s\nfound all neighbors in 0.0278s\nbuilt quadtree in 0.0237s\nfound all neighbors in 0.0262s\nbuilt quadtree in 0.0252s\nfound all neighbors in 0.0257s\nbuilt quadtree in 0.0264s\nfound all neighbors in 0.0257s\nbuilt quadtree in 0.0278s\nfound all neighbors in 0.0272s\nbuilt quadtree in 0.0279s\nfound all neighbors in 0.0261s\nbuilt quadtree in 0.0256s\nfound all neighbors in 0.0276s\nbuilt quadtree in 0.0255s\nfound all neighbors in 0.0271s\nbuilt quadtree in 0.0247s\nfound all neighbors in 0.0261s\nbuilt quadtree in 0.0249s\nfound all neighbors in 0.0261s\nbuilt quadtree in 0.0269s\nfound all neighbors in 0.0265s\nbuilt quadtree in 0.0244s\nfound all neighbors in 0.0265s\nbuilt quadtree in 0.0259s\nfound all neighbors in 0.0264s\nbuilt quadtree in 0.0247s\nfound all neighbors in 0.0256s\nbuilt quadtree in 0.0264s\nfound all neighbors in 0.0258s\nbuilt quadtree in 0.0269s\nfound all neighbors in 0.0256s\n95 warmup runs completed\nrunning nearest neighbors\nbuilt quadtree in 0.0266s\nfound all neighbors in 0.0281s\ntime 0.0549s\nbuilt quadtree in 0.0260s\nfound all neighbors in 0.0271s\ntime 0.0532s\nbuilt quadtree in 0.0259s\nfound all neighbors in 0.0285s\ntime 0.0545s\nbuilt quadtree in 0.0267s\nfound all neighbors in 0.0263s\ntime 0.0532s\nbuilt quadtree in 0.0292s\nfound all neighbors in 0.0264s\ntime 0.0556s\n\naverage 0.0543s\nminimum 0.0532s\nmaximum 0.0556s\nstd dev 0.0011s\ntotal   0.2715s\nend-to-end 0.2715s\n======== Runtime Stats ========\nnum spawns        182164\n  eager           94885 (52%)\n  at heartbeat    87279 (48%)\n\nnum heartbeats    29704\n  skipped         0 (0%)\n\nspawns / hb       6.13\n  eager           3.19\n  at heartbeat    2.94\n\nnum steals        31690\n\nmax hb stack walk 49\nmax hb stack size 4304\n====== End Runtime Stats ======\nresult [811533, 563604, 253596, 55855, 233544, 569064, 562970, 742080, 12442, 171262, 428737, ..., 540308]\nto see output, use -output and -resolution arguments\nfor example: nn -N 10000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 5.757138967514038, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/mandelbrot-ng.mpl-hb-one.bin @mpl procs 72  -- -resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30  -repeat 5 -warmup 5", "args": "-resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30", "_old_affinity": "set-affinity affinity-base 0", "bench": "mandelbrot-ng", "tag": "mandelbrot", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:45:45.782197", "stdout": "max-iter 30\ndiverge-thresh 2\nresolution 2500\ntop 2\nbot ~2\nleft ~3\nright 1\nh 10000\nw 10000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n60 warmup runs completed\nrunning mandelbrot\ntime 0.0841s\ntime 0.0836s\ntime 0.0837s\ntime 0.0838s\ntime 0.0810s\n\naverage 0.0832s\nminimum 0.0810s\nmaximum 0.0841s\nstd dev 0.0012s\ntotal   0.4161s\nend-to-end 0.4164s\n======== Runtime Stats ========\nnum spawns        289343\n  eager           26379 (9%)\n  at heartbeat    262964 (91%)\n\nnum heartbeats    55484\n  skipped         0 (0%)\n\nspawns / hb       5.21\n  eager           0.48\n  at heartbeat    4.74\n\nnum steals        6268\n\nmax hb stack walk 56\nmax hb stack size 4288\n====== End Runtime Stats ======\nuse -output XXX to see result\n", "stderr": "", "elapsed": 5.599414348602295, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/linefit-ng.mpl-hb-one.bin @mpl procs 72  -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "linefit-ng", "tag": "linefit", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:45:51.391364", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n55 warmup runs completed\nlinefit\ntime 0.0898s\ntime 0.0874s\ntime 0.0868s\ntime 0.0891s\ntime 0.0878s\n\naverage 0.0882s\nminimum 0.0868s\nmaximum 0.0898s\nstd dev 0.0012s\ntotal   0.4409s\nend-to-end 0.4412s\n======== Runtime Stats ========\nnum spawns        310161\n  eager           32719 (11%)\n  at heartbeat    277442 (89%)\n\nnum heartbeats    58539\n  skipped         0 (0%)\n\nspawns / hb       5.30\n  eager           0.56\n  at heartbeat    4.74\n\nnum steals        9909\n\nmax hb stack walk 54\nmax hb stack size 4536\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 5.95668625831604, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/wc-ng.mpl-hb-one.bin @mpl procs 72  -- -infile ../inputs/words256.txt  -repeat 5 -warmup 5", "args": "-infile ../inputs/words256.txt", "_old_affinity": "set-affinity affinity-base 0", "bench": "wc-ng", "tag": "wc", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:45:57.359089", "stdout": "loadtime 0.031\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n69 warmup runs completed\nwc\ntime 0.0740s\ntime 0.0716s\ntime 0.0728s\ntime 0.0719s\ntime 0.0727s\n\naverage 0.0726s\nminimum 0.0716s\nmaximum 0.0740s\nstd dev 0.0009s\ntotal   0.3631s\nend-to-end 0.3633s\n======== Runtime Stats ========\nnum spawns        256974\n  eager           22483 (9%)\n  at heartbeat    234491 (91%)\n\nnum heartbeats    49239\n  skipped         0 (0%)\n\nspawns / hb       5.22\n  eager           0.46\n  at heartbeat    4.76\n\nnum steals        5833\n\nmax hb stack walk 54\nmax hb stack size 4776\n====== End Runtime Stats ======\nlines 16519936\nwords 16519936\nchars 154424832\n", "stderr": "", "elapsed": 5.585206508636475, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nqueens-ng.mpl-hb-one.bin @mpl procs 72  -- -N 13  -repeat 5 -warmup 5", "args": "-N 13", "_old_affinity": "set-affinity affinity-base 0", "bench": "nqueens-ng", "tag": "nqueens", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:46:02.954933", "stdout": "N 13\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n100 warmup runs completed\ncounting number of 13x13 solutions\ntime 0.0480s\ntime 0.0523s\ntime 0.0549s\ntime 0.0548s\ntime 0.0486s\n\naverage 0.0517s\nminimum 0.0480s\nmaximum 0.0549s\nstd dev 0.0033s\ntotal   0.2585s\nend-to-end 0.2589s\n======== Runtime Stats ========\nnum spawns        168901\n  eager           12134 (7%)\n  at heartbeat    156767 (93%)\n\nnum heartbeats    31948\n  skipped         0 (0%)\n\nspawns / hb       5.29\n  eager           0.38\n  at heartbeat    4.91\n\nnum steals        5915\n\nmax hb stack walk 91\nmax hb stack size 7216\n====== End Runtime Stats ======\nresult 73712\n", "stderr": "", "elapsed": 5.415260553359985, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/grep-ng.mpl-hb-one.bin @mpl procs 72  -- EE ../inputs/words256-shuffled.txt --benchmark  -repeat 5 -warmup 5", "args": "EE ../inputs/words256-shuffled.txt --benchmark", "_old_affinity": "set-affinity affinity-base 0", "bench": "grep-ng", "tag": "grep", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:46:08.380091", "stdout": "read file in 0.0289s\nn 154424832\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n31 warmup runs completed\nrunning grep\ntime 0.1579s\ntime 0.1594s\ntime 0.1647s\ntime 0.1583s\ntime 0.1631s\n\naverage 0.1607s\nminimum 0.1579s\nmaximum 0.1647s\nstd dev 0.0030s\ntotal   0.8035s\nend-to-end 0.8038s\n======== Runtime Stats ========\nnum spawns        549821\n  eager           141385 (26%)\n  at heartbeat    408436 (74%)\n\nnum heartbeats    102858\n  skipped         0 (0%)\n\nspawns / hb       5.35\n  eager           1.37\n  at heartbeat    3.97\n\nnum steals        23631\n\nmax hb stack walk 54\nmax hb stack size 4136\n====== End Runtime Stats ======\nnum matching lines 385792\n", "stderr": "", "elapsed": 6.099238634109497, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bignum-add-ng.mpl-hb-one.bin @mpl procs 72  -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "bignum-add-ng", "tag": "bignum-add", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:46:14.486544", "stdout": "n 100000000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n91 warmup runs completed\nbignum add\ntime 0.0549s\ntime 0.0590s\ntime 0.0538s\ntime 0.0540s\ntime 0.0553s\n\naverage 0.0554s\nminimum 0.0538s\nmaximum 0.0590s\nstd dev 0.0021s\ntotal   0.2770s\nend-to-end 0.2775s\n======== Runtime Stats ========\nnum spawns        192935\n  eager           34688 (18%)\n  at heartbeat    158247 (82%)\n\nnum heartbeats    34558\n  skipped         0 (0%)\n\nspawns / hb       5.58\n  eager           1.00\n  at heartbeat    4.58\n\nnum steals        12811\n\nmax hb stack walk 52\nmax hb stack size 4104\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 5.474801063537598, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/suffix-array-ng.mpl-hb-one.bin @mpl procs 72  -- --benchmark -N 10000000  -repeat 5 -warmup 5", "args": "--benchmark -N 10000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "suffix-array-ng", "tag": "suffix-array", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:46:19.971163", "stdout": "N 10000000\ngenerated input in 0.1973s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\navgLen is 2\nnumGroups is 11657\n28 warmup runs completed\nrunning suffix array\navgLen is 2\nnumGroups is 11657\ntime 0.1695s\navgLen is 2\nnumGroups is 11657\ntime 0.1676s\navgLen is 2\nnumGroups is 11657\ntime 0.1666s\navgLen is 2\nnumGroups is 11657\ntime 0.1685s\navgLen is 2\nnumGroups is 11657\ntime 0.1673s\n\naverage 0.1679s\nminimum 0.1666s\nmaximum 0.1695s\nstd dev 0.0011s\ntotal   0.8395s\nend-to-end 0.8401s\n======== Runtime Stats ========\nnum spawns        438011\n  eager           142828 (33%)\n  at heartbeat    295183 (67%)\n\nnum heartbeats    94282\n  skipped         0 (0%)\n\nspawns / hb       4.65\n  eager           1.51\n  at heartbeat    3.13\n\nnum steals        54407\n\nmax hb stack walk 49\nmax hb stack size 4408\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 6.344616413116455, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/triangle-count-ng.mpl-hb-one.bin @mpl procs 72  -- ../inputs/rmat-1M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-1M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "triangle-count-ng", "tag": "triangle-count", "affinity": "", "split": "2way", "grain": "one", "config": "mpl-hb-one", "cwd": "mpl", "procs": "72", "compiler": "mpl-hb", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:46:26.327722", "stdout": "read file in 0.0346s\nparsed graph in 0.0211s\nnum vertices: 1048576\nnum edges: 19602538\nparity check in 0.0057s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n18 warmup runs completed\nrunning tc: \ntime 0.2736s\ntime 0.2778s\ntime 0.2775s\ntime 0.2790s\ntime 0.2841s\n\naverage 0.2784s\nminimum 0.2736s\nmaximum 0.2841s\nstd dev 0.0038s\ntotal   1.3919s\nend-to-end 1.3923s\n======== Runtime Stats ========\nnum spawns        976146\n  eager           114137 (12%)\n  at heartbeat    862009 (88%)\n\nnum heartbeats    192231\n  skipped         0 (0%)\n\nspawns / hb       5.08\n  eager           0.59\n  at heartbeat    4.48\n\nnum steals        8188\n\nmax hb stack walk 115\nmax hb stack size 5896\n====== End Runtime Stats ======\nnum-triangles = 451600\n", "stderr": "", "elapsed": 6.82848334312439, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bfs.mpl.bin @mpl procs 72  -- ../inputs/rmat-10M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-10M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "bfs", "tag": "bfs", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "72", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:46:33.166624", "stdout": "read file in 0.2684s\nparsed graph in 0.1825s\nnum vertices: 16777216\nnum edges: 198731752\nparity check in 0.0396s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nsparse 0.0001\nsparse 0.0013\ndense  0.0666\ndense  0.0476\ndense  0.0269\ndense  0.0160\nsparse 0.0052\nsparse 0.0037\nsparse 0.0020\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0652\ndense  0.0463\ndense  0.0292\ndense  0.0359\nsparse 0.0047\nsparse 0.0039\nsparse 0.0024\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0009\ndense  0.0574\ndense  0.0366\ndense  0.0211\ndense  0.0095\nsparse 0.0048\nsparse 0.0040\nsparse 0.0021\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0569\ndense  0.0391\ndense  0.0230\ndense  0.0122\nsparse 0.0050\nsparse 0.0046\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0011\ndense  0.0572\ndense  0.0357\ndense  0.0203\ndense  0.0098\nsparse 0.0044\nsparse 0.0039\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0558\ndense  0.0370\ndense  0.0200\ndense  0.0255\nsparse 0.0044\nsparse 0.0041\nsparse 0.0020\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0010\ndense  0.0638\ndense  0.0362\ndense  0.0206\ndense  0.0100\nsparse 0.0044\nsparse 0.0040\nsparse 0.0023\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0567\ndense  0.0380\ndense  0.0207\ndense  0.0095\nsparse 0.0042\nsparse 0.0040\nsparse 0.0023\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0011\ndense  0.0579\ndense  0.0374\ndense  0.0203\ndense  0.0096\nsparse 0.0047\nsparse 0.0040\nsparse 0.0023\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0013\ndense  0.0564\ndense  0.0578\ndense  0.0384\ndense  0.0093\nsparse 0.0042\nsparse 0.0040\nsparse 0.0021\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0013\ndense  0.0579\ndense  0.0360\ndense  0.0197\ndense  0.0105\nsparse 0.0049\nsparse 0.0040\nsparse 0.0025\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0566\ndense  0.0365\ndense  0.0197\ndense  0.0094\nsparse 0.0045\nsparse 0.0043\nsparse 0.0023\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0013\ndense  0.0583\ndense  0.0362\ndense  0.0193\ndense  0.0095\nsparse 0.0044\nsparse 0.0039\nsparse 0.0022\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0011\ndense  0.0564\ndense  0.0381\ndense  0.0203\ndense  0.0101\nsparse 0.0048\nsparse 0.0040\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0011\ndense  0.0571\ndense  0.0350\ndense  0.0201\ndense  0.0094\nsparse 0.0048\nsparse 0.0042\nsparse 0.0020\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0010\ndense  0.0568\ndense  0.0400\ndense  0.0195\ndense  0.0103\nsparse 0.0050\nsparse 0.0040\nsparse 0.0021\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0013\ndense  0.0618\ndense  0.0372\ndense  0.0204\ndense  0.0099\nsparse 0.0051\nsparse 0.0042\nsparse 0.0022\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0010\ndense  0.0572\ndense  0.0535\ndense  0.0208\ndense  0.0098\nsparse 0.0044\nsparse 0.0039\nsparse 0.0023\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0013\ndense  0.0580\ndense  0.0369\ndense  0.0200\ndense  0.0099\nsparse 0.0053\nsparse 0.0040\nsparse 0.0022\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0009\ndense  0.0572\ndense  0.0357\ndense  0.0208\ndense  0.0100\nsparse 0.0044\nsparse 0.0037\nsparse 0.0021\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0576\ndense  0.0367\ndense  0.0198\ndense  0.0100\nsparse 0.0051\nsparse 0.0039\nsparse 0.0021\nsparse 0.0003\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0576\ndense  0.0374\ndense  0.0211\ndense  0.0110\nsparse 0.0043\nsparse 0.0039\nsparse 0.0025\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0013\ndense  0.0550\ndense  0.0361\ndense  0.0322\ndense  0.0097\nsparse 0.0043\nsparse 0.0041\nsparse 0.0023\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0009\ndense  0.0750\ndense  0.0377\ndense  0.0191\ndense  0.0102\nsparse 0.0046\nsparse 0.0039\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0014\ndense  0.0562\ndense  0.0377\ndense  0.0198\ndense  0.0092\nsparse 0.0043\nsparse 0.0040\nsparse 0.0019\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0010\ndense  0.0571\ndense  0.0365\ndense  0.0205\ndense  0.0100\nsparse 0.0053\nsparse 0.0040\nsparse 0.0021\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0012\ndense  0.0576\ndense  0.0371\ndense  0.0198\ndense  0.0098\nsparse 0.0046\nsparse 0.0041\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0010\ndense  0.0577\ndense  0.0370\ndense  0.0210\ndense  0.0096\nsparse 0.0048\nsparse 0.0041\nsparse 0.0026\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0013\ndense  0.0586\ndense  0.0382\ndense  0.0262\ndense  0.0382\nsparse 0.0051\nsparse 0.0041\nsparse 0.0020\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0011\ndense  0.0568\ndense  0.0383\ndense  0.0206\ndense  0.0100\nsparse 0.0050\nsparse 0.0042\nsparse 0.0023\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\nsparse 0.0001\nsparse 0.0011\ndense  0.0575\ndense  0.0377\ndense  0.0202\ndense  0.0102\nsparse 0.0051\nsparse 0.0039\nsparse 0.0021\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\n31 warmup runs completed\nrunning bfs\nsparse 0.0001\nsparse 0.0012\ndense  0.0568\ndense  0.0392\ndense  0.0203\ndense  0.0100\nsparse 0.0048\nsparse 0.0039\nsparse 0.0024\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 0.1504s\nsparse 0.0001\nsparse 0.0011\ndense  0.0571\ndense  0.0357\ndense  0.0201\ndense  0.0092\nsparse 0.0047\nsparse 0.0039\nsparse 0.0020\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 0.1459s\nsparse 0.0001\nsparse 0.0010\ndense  0.0568\ndense  0.0361\ndense  0.0211\ndense  0.0103\nsparse 0.0045\nsparse 0.0042\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 0.1487s\nsparse 0.0001\nsparse 0.0012\ndense  0.0576\ndense  0.0359\ndense  0.0204\ndense  0.0093\nsparse 0.0048\nsparse 0.0039\nsparse 0.0025\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 0.1479s\nsparse 0.0001\nsparse 0.0011\ndense  0.0578\ndense  0.0545\ndense  0.0365\ndense  0.0099\nsparse 0.0048\nsparse 0.0041\nsparse 0.0022\nsparse 0.0002\nsparse 0.0000\nsparse 0.0000\ntime 0.1829s\n\naverage 0.1551s\nminimum 0.1459s\nmaximum 0.1829s\nstd dev 0.0156s\ntotal   0.7757s\nend-to-end 0.7757s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nvisited 16037483\nmax dist 11\n", "stderr": "", "elapsed": 6.854952812194824, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/delaunay.mpl.bin @mpl procs 72  -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "delaunay", "tag": "delaunay", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "72", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:46:40.034147", "stdout": "parsed input points in 2.3006s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n10 warmup runs completed\ndelaunay\ntime 0.5092s\ntime 0.5056s\ntime 0.4986s\ntime 0.5190s\ntime 0.4974s\n\naverage 0.5060s\nminimum 0.4974s\nmaximum 0.5190s\nstd dev 0.0088s\ntotal   2.5298s\nend-to-end 2.5301s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnum rounds 220\n\nto see output, use -output and -resolution arguments\nfor example: delaunay -n 1000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 10.156972169876099, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/msort.mpl.bin @mpl procs 72  -- -N 20000000  -repeat 5 -warmup 5", "args": "-N 20000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "msort", "tag": "msort", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "72", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:46:50.203124", "stdout": "N 20000000\ngenerating 20000000 random integers\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n55 warmup runs completed\nrunning mergesort\ntime 0.0899s\ntime 0.0879s\ntime 0.0885s\ntime 0.0884s\ntime 0.0890s\n\naverage 0.0887s\nminimum 0.0879s\nmaximum 0.0899s\nstd dev 0.0008s\ntotal   0.4436s\nend-to-end 0.4440s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\ninput [3647203, 1410947, 1439064, 11900373, 11111963, 1483844, 9953235, ..., 11557991]\nresult [0, 0, 1, 1, 1, 2, 3, ..., 19999999]\n", "stderr": "", "elapsed": 5.68114447593689, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/primes.mpl.bin @mpl procs 72  -- -N 100000000  -repeat 5 -warmup 5", "args": "-N 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "primes", "tag": "primes", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "72", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:46:55.894580", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n39 warmup runs completed\ngenerating primes up to 100000000\ntime 0.1258s\ntime 0.1308s\ntime 0.1508s\ntime 0.1351s\ntime 0.1281s\n\naverage 0.1341s\nminimum 0.1258s\nmaximum 0.1508s\nstd dev 0.0099s\ntotal   0.6706s\nend-to-end 0.6709s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnumber of primes 5761455\nresult [2, 3, 5, 7, 11, 13, 17, ..., 99999989]\n", "stderr": "", "elapsed": 5.810204982757568, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/sparse-mxv-csr.mpl.bin @mpl procs 72  -- -n 250000000  -repeat 5 -warmup 5", "args": "-n 250000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "sparse-mxv-csr", "tag": "sparse-mxv-csr", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "72", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:47:01.715064", "stdout": "n 250000000\nrow-len 100\n(num rows: 2500000)\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n70 warmup runs completed\nsparse-mxv\ntime 0.0686s\ntime 0.0671s\ntime 0.0686s\ntime 0.0671s\ntime 0.0683s\n\naverage 0.0679s\nminimum 0.0671s\nmaximum 0.0686s\nstd dev 0.0008s\ntotal   0.3397s\nend-to-end 0.3402s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 6.315744161605835, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nearest-nbrs.mpl.bin @mpl procs 72  -- -input ../inputs/uniform-circle-1M  -repeat 5 -warmup 5", "args": "-input ../inputs/uniform-circle-1M", "_old_affinity": "set-affinity affinity-base 0", "bench": "nearest-nbrs", "tag": "nearest-nbrs", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "72", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:47:08.042602", "stdout": "parsed input points in 0.1462s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\nbuilt quadtree in 0.0290s\nfound all neighbors in 0.0233s\nbuilt quadtree in 0.0251s\nfound all neighbors in 0.0229s\nbuilt quadtree in 0.0238s\nfound all neighbors in 0.0225s\nbuilt quadtree in 0.0207s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0202s\nfound all neighbors in 0.0213s\nbuilt quadtree in 0.0206s\nfound all neighbors in 0.0219s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0218s\nbuilt quadtree in 0.0213s\nfound all neighbors in 0.0210s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0219s\nbuilt quadtree in 0.0229s\nfound all neighbors in 0.0234s\nbuilt quadtree in 0.0239s\nfound all neighbors in 0.0211s\nbuilt quadtree in 0.0215s\nfound all neighbors in 0.0218s\nbuilt quadtree in 0.0206s\nfound all neighbors in 0.0222s\nbuilt quadtree in 0.0206s\nfound all neighbors in 0.0216s\nbuilt quadtree in 0.0199s\nfound all neighbors in 0.0221s\nbuilt quadtree in 0.0227s\nfound all neighbors in 0.0221s\nbuilt quadtree in 0.0197s\nfound all neighbors in 0.0207s\nbuilt quadtree in 0.0206s\nfound all neighbors in 0.0209s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0215s\nbuilt quadtree in 0.0207s\nfound all neighbors in 0.0216s\nbuilt quadtree in 0.0223s\nfound all neighbors in 0.0223s\nbuilt quadtree in 0.0260s\nfound all neighbors in 0.0210s\nbuilt quadtree in 0.0202s\nfound all neighbors in 0.0216s\nbuilt quadtree in 0.0236s\nfound all neighbors in 0.0241s\nbuilt quadtree in 0.0227s\nfound all neighbors in 0.0213s\nbuilt quadtree in 0.0237s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0202s\nfound all neighbors in 0.0209s\nbuilt quadtree in 0.0197s\nfound all neighbors in 0.0216s\nbuilt quadtree in 0.0204s\nfound all neighbors in 0.0219s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0216s\nbuilt quadtree in 0.0193s\nfound all neighbors in 0.0213s\nbuilt quadtree in 0.0199s\nfound all neighbors in 0.0216s\nbuilt quadtree in 0.0204s\nfound all neighbors in 0.0223s\nbuilt quadtree in 0.0198s\nfound all neighbors in 0.0210s\nbuilt quadtree in 0.0217s\nfound all neighbors in 0.0209s\nbuilt quadtree in 0.0195s\nfound all neighbors in 0.0219s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0216s\nbuilt quadtree in 0.0221s\nfound all neighbors in 0.0217s\nbuilt quadtree in 0.0199s\nfound all neighbors in 0.0210s\nbuilt quadtree in 0.0212s\nfound all neighbors in 0.0225s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0242s\nbuilt quadtree in 0.0228s\nfound all neighbors in 0.0213s\nbuilt quadtree in 0.0224s\nfound all neighbors in 0.0219s\nbuilt quadtree in 0.0252s\nfound all neighbors in 0.0215s\nbuilt quadtree in 0.0232s\nfound all neighbors in 0.0223s\nbuilt quadtree in 0.0245s\nfound all neighbors in 0.0233s\nbuilt quadtree in 0.0210s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0210s\nfound all neighbors in 0.0239s\nbuilt quadtree in 0.0242s\nfound all neighbors in 0.0224s\nbuilt quadtree in 0.0223s\nfound all neighbors in 0.0219s\nbuilt quadtree in 0.0201s\nfound all neighbors in 0.0214s\nbuilt quadtree in 0.0202s\nfound all neighbors in 0.0221s\nbuilt quadtree in 0.0214s\nfound all neighbors in 0.0238s\nbuilt quadtree in 0.0220s\nfound all neighbors in 0.0228s\nbuilt quadtree in 0.0225s\nfound all neighbors in 0.0217s\nbuilt quadtree in 0.0200s\nfound all neighbors in 0.0223s\nbuilt quadtree in 0.0206s\nfound all neighbors in 0.0249s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0205s\nfound all neighbors in 0.0211s\nbuilt quadtree in 0.0200s\nfound all neighbors in 0.0215s\nbuilt quadtree in 0.0201s\nfound all neighbors in 0.0224s\nbuilt quadtree in 0.0225s\nfound all neighbors in 0.0217s\nbuilt quadtree in 0.0203s\nfound all neighbors in 0.0211s\nbuilt quadtree in 0.0200s\nfound all neighbors in 0.0219s\nbuilt quadtree in 0.0225s\nfound all neighbors in 0.0218s\nbuilt quadtree in 0.0209s\nfound all neighbors in 0.0237s\nbuilt quadtree in 0.0246s\nfound all neighbors in 0.0215s\nbuilt quadtree in 0.0198s\nfound all neighbors in 0.0221s\nbuilt quadtree in 0.0228s\nfound all neighbors in 0.0229s\nbuilt quadtree in 0.0204s\nfound all neighbors in 0.0265s\nbuilt quadtree in 0.0205s\nfound all neighbors in 0.0210s\nbuilt quadtree in 0.0203s\nfound all neighbors in 0.0217s\nbuilt quadtree in 0.0229s\nfound all neighbors in 0.0239s\nbuilt quadtree in 0.0201s\nfound all neighbors in 0.0249s\nbuilt quadtree in 0.0220s\nfound all neighbors in 0.0209s\nbuilt quadtree in 0.0200s\nfound all neighbors in 0.0213s\nbuilt quadtree in 0.0201s\nfound all neighbors in 0.0216s\nbuilt quadtree in 0.0204s\nfound all neighbors in 0.0222s\nbuilt quadtree in 0.0225s\nfound all neighbors in 0.0219s\nbuilt quadtree in 0.0199s\nfound all neighbors in 0.0222s\nbuilt quadtree in 0.0202s\nfound all neighbors in 0.0216s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0223s\nbuilt quadtree in 0.0220s\nfound all neighbors in 0.0225s\nbuilt quadtree in 0.0214s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0200s\nfound all neighbors in 0.0217s\nbuilt quadtree in 0.0223s\nfound all neighbors in 0.0222s\nbuilt quadtree in 0.0229s\nfound all neighbors in 0.0211s\nbuilt quadtree in 0.0201s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0202s\nfound all neighbors in 0.0216s\nbuilt quadtree in 0.0200s\nfound all neighbors in 0.0251s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0233s\nbuilt quadtree in 0.0227s\nfound all neighbors in 0.0246s\nbuilt quadtree in 0.0223s\nfound all neighbors in 0.0216s\nbuilt quadtree in 0.0229s\nfound all neighbors in 0.0224s\nbuilt quadtree in 0.0202s\nfound all neighbors in 0.0211s\nbuilt quadtree in 0.0196s\nfound all neighbors in 0.0225s\nbuilt quadtree in 0.0206s\nfound all neighbors in 0.0214s\nbuilt quadtree in 0.0200s\nfound all neighbors in 0.0223s\nbuilt quadtree in 0.0201s\nfound all neighbors in 0.0214s\nbuilt quadtree in 0.0194s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0213s\nfound all neighbors in 0.0228s\nbuilt quadtree in 0.0216s\nfound all neighbors in 0.0217s\nbuilt quadtree in 0.0223s\nfound all neighbors in 0.0216s\nbuilt quadtree in 0.0220s\nfound all neighbors in 0.0209s\nbuilt quadtree in 0.0211s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0223s\nbuilt quadtree in 0.0227s\nfound all neighbors in 0.0214s\nbuilt quadtree in 0.0206s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0200s\nfound all neighbors in 0.0212s\nbuilt quadtree in 0.0199s\nfound all neighbors in 0.0218s\nbuilt quadtree in 0.0225s\nfound all neighbors in 0.0207s\nbuilt quadtree in 0.0198s\nfound all neighbors in 0.0213s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0211s\nbuilt quadtree in 0.0204s\nfound all neighbors in 0.0274s\nbuilt quadtree in 0.0223s\nfound all neighbors in 0.0254s\n115 warmup runs completed\nrunning nearest neighbors\nbuilt quadtree in 0.0226s\nfound all neighbors in 0.0212s\ntime 0.0439s\nbuilt quadtree in 0.0208s\nfound all neighbors in 0.0221s\ntime 0.0430s\nbuilt quadtree in 0.0213s\nfound all neighbors in 0.0217s\ntime 0.0432s\nbuilt quadtree in 0.0207s\nfound all neighbors in 0.0253s\ntime 0.0462s\nbuilt quadtree in 0.0209s\nfound all neighbors in 0.0216s\ntime 0.0426s\n\naverage 0.0438s\nminimum 0.0426s\nmaximum 0.0462s\nstd dev 0.0015s\ntotal   0.2188s\nend-to-end 0.2189s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nresult [811533, 563604, 253596, 55855, 233544, 569064, 562970, 742080, 12442, 171262, 428737, ..., 540308]\nto see output, use -output and -resolution arguments\nfor example: nn -N 10000 -output result.ppm -resolution 1000\n", "stderr": "", "elapsed": 5.648226737976074, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/mandelbrot.mpl.bin @mpl procs 72  -- -resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30  -repeat 5 -warmup 5", "args": "-resolution 2500 -top 2 -bot ~2 -left ~3 -right 1 -diverge-thresh 2 -max-iter 30", "_old_affinity": "set-affinity affinity-base 0", "bench": "mandelbrot", "tag": "mandelbrot", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "72", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:47:13.703143", "stdout": "max-iter 30\ndiverge-thresh 2\nresolution 2500\ntop 2\nbot ~2\nleft ~3\nright 1\nh 10000\nw 10000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n157 warmup runs completed\nrunning mandelbrot\ntime 0.0316s\ntime 0.0333s\ntime 0.0317s\ntime 0.0318s\ntime 0.0313s\n\naverage 0.0319s\nminimum 0.0313s\nmaximum 0.0333s\nstd dev 0.0008s\ntotal   0.1597s\nend-to-end 0.1599s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nuse -output XXX to see result\n", "stderr": "", "elapsed": 5.229426860809326, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/linefit.mpl.bin @mpl procs 72  -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "linefit", "tag": "linefit", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "72", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:47:18.942318", "stdout": "warmup 5.0000\nrepeat 5\nWarming up for 5s...\n152 warmup runs completed\nlinefit\ntime 0.0311s\ntime 0.0305s\ntime 0.0315s\ntime 0.0307s\ntime 0.0306s\n\naverage 0.0309s\nminimum 0.0305s\nmaximum 0.0315s\nstd dev 0.0004s\ntotal   0.1545s\nend-to-end 0.1548s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 5.535006523132324, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/wc.mpl.bin @mpl procs 72  -- -infile ../inputs/words256.txt  -repeat 5 -warmup 5", "args": "-infile ../inputs/words256.txt", "_old_affinity": "set-affinity affinity-base 0", "bench": "wc", "tag": "wc", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "72", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:47:24.489029", "stdout": "loadtime 0.031\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n340 warmup runs completed\nwc\ntime 0.0139s\ntime 0.0138s\ntime 0.0140s\ntime 0.0144s\ntime 0.0141s\n\naverage 0.0141s\nminimum 0.0138s\nmaximum 0.0144s\nstd dev 0.0002s\ntotal   0.0703s\nend-to-end 0.0706s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nlines 16519936\nwords 16519936\nchars 154424832\n", "stderr": "", "elapsed": 5.183251619338989, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/nqueens.mpl.bin @mpl procs 72  -- -N 13  -repeat 5 -warmup 5", "args": "-N 13", "_old_affinity": "set-affinity affinity-base 0", "bench": "nqueens", "tag": "nqueens", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "72", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:47:29.681945", "stdout": "N 13\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n107 warmup runs completed\ncounting number of 13x13 solutions\ntime 0.0470s\ntime 0.0459s\ntime 0.0475s\ntime 0.0475s\ntime 0.0462s\n\naverage 0.0468s\nminimum 0.0459s\nmaximum 0.0475s\nstd dev 0.0008s\ntotal   0.2342s\nend-to-end 0.2346s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nresult 73712\n", "stderr": "", "elapsed": 5.371343612670898, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/grep.mpl.bin @mpl procs 72  -- EE ../inputs/words256-shuffled.txt --benchmark  -repeat 5 -warmup 5", "args": "EE ../inputs/words256-shuffled.txt --benchmark", "_old_affinity": "set-affinity affinity-base 0", "bench": "grep", "tag": "grep", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "72", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:47:35.063271", "stdout": "read file in 0.0275s\nn 154424832\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n112 warmup runs completed\nrunning grep\ntime 0.0447s\ntime 0.0437s\ntime 0.0439s\ntime 0.0445s\ntime 0.0436s\n\naverage 0.0441s\nminimum 0.0436s\nmaximum 0.0447s\nstd dev 0.0005s\ntotal   0.2204s\nend-to-end 0.2208s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnum matching lines 385792\n", "stderr": "", "elapsed": 5.401479721069336, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/bignum-add.mpl.bin @mpl procs 72  -- -n 100000000  -repeat 5 -warmup 5", "args": "-n 100000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "bignum-add", "tag": "bignum-add", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "72", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:47:40.473265", "stdout": "n 100000000\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n70 warmup runs completed\nbignum add\ntime 0.0715s\ntime 0.0717s\ntime 0.0715s\ntime 0.0722s\ntime 0.0708s\n\naverage 0.0715s\nminimum 0.0708s\nmaximum 0.0722s\nstd dev 0.0005s\ntotal   0.3577s\nend-to-end 0.3580s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 5.554722785949707, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/suffix-array.mpl.bin @mpl procs 72  -- --benchmark -N 10000000  -repeat 5 -warmup 5", "args": "--benchmark -N 10000000", "_old_affinity": "set-affinity affinity-base 0", "bench": "suffix-array", "tag": "suffix-array", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "72", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:47:46.036545", "stdout": "N 10000000\ngenerated input in 0.1233s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ngrain is 4096\navgLen is 2\nnumGroups is 11657\n41 warmup runs completed\nrunning suffix array\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 0.1149s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 0.1140s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 0.1130s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 0.1136s\ngrain is 4096\navgLen is 2\nnumGroups is 11657\ntime 0.1134s\n\naverage 0.1138s\nminimum 0.1130s\nmaximum 0.1149s\nstd dev 0.0007s\ntotal   0.5689s\nend-to-end 0.5693s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\n", "stderr": "", "elapsed": 5.960823059082031, "returncode": 0}
{"repeat": "5", "warmup": "5", "cmd": "bin/triangle-count.mpl.bin @mpl procs 72  -- ../inputs/rmat-1M-symm-bin  -repeat 5 -warmup 5", "args": "../inputs/rmat-1M-symm-bin", "_old_affinity": "set-affinity affinity-base 0", "bench": "triangle-count", "tag": "triangle-count", "affinity": "", "split": "2way", "grain": "manual", "config": "mpl", "cwd": "mpl", "procs": "72", "compiler": "mpl", "host": "aware.aladdin.cs.cmu.edu", "timestamp": "24-08-01 15:47:52.007552", "stdout": "read file in 0.0304s\nparsed graph in 0.0177s\nnum vertices: 1048576\nnum edges: 19602538\nparity check in 0.0067s\nwarmup 5.0000\nrepeat 5\nWarming up for 5s...\n41 warmup runs completed\nrunning tc: \ntime 0.1211s\ntime 0.1387s\ntime 0.1212s\ntime 0.1194s\ntime 0.1169s\n\naverage 0.1235s\nminimum 0.1169s\nmaximum 0.1387s\nstd dev 0.0087s\ntotal   0.6173s\nend-to-end 0.6176s\n======== Runtime Stats ========\nnone yet...\n====== End Runtime Stats ======\nnum-triangles = 511733\n", "stderr": "", "elapsed": 5.972213268280029, "returncode": 0}
